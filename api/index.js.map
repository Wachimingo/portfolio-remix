{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\root.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\api\\user\\$email.tsx", "../app/controllers/auth.ts", "../app/models/user.ts", "../app/utils/dbConnection.ts", "../app/controllers/mail.ts", "../app/controllers/errors.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index.tsx", "../app/components/Footer.tsx", "../app/components/NavBar.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\projects\\restaurant.tsx", "../app/components/sideBar.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\projects\\restaurant\\billing\\$transaction.tsx", "../app/controllers/dishes.ts", "../app/models/dishes.ts", "../app/components/authComponents.tsx", "../app/controllers/billing.ts", "../app/components/Carousel.tsx", "../app/components/Modal.tsx", "../app/components/Card.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\projects\\restaurant\\orders\\$status.tsx", "../app/models/bill.ts", "../app/controllers/orders.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\projects\\restaurant\\catalog.tsx", "../app/components/modals/CatalogModal.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\projects\\restaurant\\index.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\projects\\index.tsx", "../app/controllers/projects.ts", "../app/models/projects.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\auth\\$action.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\skills.tsx", "../app/models/categories.ts", "../app/models/skills.ts", "../app/controllers/skills.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\certs.tsx", "../app/models/certifications.ts", "../app/controllers/certs.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\index.tsx", "../app/controllers/categories.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport type { EntryContext } from \"@remix-run/node\";\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  let markup = renderToString(\r\n    <RemixServer context={remixContext} url={request.url} />\r\n  );\r\n\r\n  responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n  return new Response(\"<!DOCTYPE html>\" + markup, {\r\n    status: responseStatusCode,\r\n    headers: responseHeaders,\r\n  });\r\n}\r\n", "import {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n} from \"@remix-run/react\";\r\nimport type { MetaFunction } from \"@remix-run/node\";\r\nimport appStyle from '~/styles/app.css';\r\nimport navBarStyle from '~/styles/navbar.css';\r\nimport footerStyle from '~/styles/footer.css';\r\n\r\nexport const meta: MetaFunction = () => ({\r\n  charset: \"utf-8\",\r\n  title: \"Portfolio\",\r\n  viewport: \"width=device-width,initial-scale=1\",\r\n});\r\n\r\n\r\nexport function links() {\r\n  return [\r\n    { rel: \"stylesheet\", href: appStyle },\r\n    { rel: \"stylesheet\", href: navBarStyle },\r\n    { rel: \"stylesheet\", href: footerStyle },\r\n  ]\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </body>\r\n    </html >\r\n  );\r\n}\r\n", "import { useEffect } from \"react\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport { activateUser } from \"~/controllers/auth\";\r\nimport authStyles from \"~/styles/auth.css\";\r\n//@ts-ignore\r\nimport Cookies from 'js-cookie';\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: authStyles }\r\n    ]\r\n}\r\n\r\nexport const loader = async ({ params }: any) => {\r\n    const user = await activateUser(params.email);\r\n    return json(user);\r\n}\r\n\r\nexport function ErrorBoundary({ error }: any) {\r\n    return (\r\n        <html>\r\n            <head>\r\n                <title>Oh no!</title>\r\n            </head>\r\n            <body>\r\n            </body>\r\n        </html>\r\n    );\r\n}\r\n\r\nconst EmailConfirmation = () => {\r\n    const result = useLoaderData<any>();\r\n    useEffect(() => {\r\n        if (result) {\r\n            if (result.error) return undefined\r\n            Cookies.set('name', result.user?.name);\r\n            Cookies.set('email', result.user?.email);\r\n            Cookies.set('token', result.user.token);\r\n            Cookies.set('role', result.user?.role);\r\n        }\r\n    })\r\n    return (\r\n        <section className=\"container mb-4 mt-4\">\r\n            <div className=\"row d-flex justify-content-center align-items-center\">\r\n                <div className=\"col-12 col-md-8 col-lg-6 col-xl-5\">\r\n                    <div className=\"card bg-dark text-white\" style={{ borderRadius: \"1rem\" }}>\r\n                        <div className=\"card-body p-5 text-center\">\r\n                            {\r\n                                result.error\r\n                                    ? <>\r\n                                        <p>{result.error}</p>\r\n                                        <Link to=\"/\">Go to Home</Link>\r\n                                    </>\r\n                                    : <>\r\n                                        <p>Thanks for confirming your account.</p>\r\n                                        <p>You can close this page.</p>\r\n                                        <Link to=\"/\">Go to Home</Link>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EmailConfirmation;", "import { json } from \"@remix-run/node\";\r\nimport User from '~/models/user';\r\nimport dbConnect from '~/utils/dbConnection';\r\nimport mail from '~/controllers/mail';\r\nimport { requestErrorHandler } from './errors';\r\nconst bcrypt = require('bcryptjs');\r\n// Set your secret key. Remember to switch to your live secret key in production.\r\n// See your keys here: https://dashboard.stripe.com/apikeys\r\nconst stripe = require('stripe')(process.env.NEXT_PUBLIC_STRIPE_SECRET_KEY);\r\nexport const activateUser = async (email: string) => {\r\n    try {\r\n        await dbConnect();\r\n        const jwt = require('jsonwebtoken');\r\n        const user = await User.findOneAndUpdate({ email }, { isActive: true }).select('name email role isActive');\r\n        if (!user) throw 'Not Found'\r\n        if (user.isActive) throw 'Cannot re-use link'\r\n        user.isActive = undefined;\r\n        const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, {\r\n            expiresIn: process.env.JWT_EXPIRES_IN,\r\n        });\r\n        return { user, token };\r\n    } catch (error) {\r\n        return { error, status: \"error\" }\r\n    }\r\n}\r\n\r\nexport const actions: any = {\r\n    \"POST\": {\r\n        \"signin\": async (body: any) => {\r\n            try {\r\n                await dbConnect();\r\n                const jwt = require('jsonwebtoken');\r\n                const user = await User.findOne({ email: body.email[0] }).select('+password');\r\n\r\n                if (!user || user.password === undefined || !(await user.correctPassword(body.password[0], user.password))) {\r\n                    return json({ status: 'error', message: 'Not found' }, { status: 404 });\r\n                }\r\n                //remove password from output\r\n                user.password = undefined;\r\n                const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, {\r\n                    expiresIn: process.env.JWT_EXPIRES_IN,\r\n                });\r\n                return json({ status: 'success', user, token }, { status: 200 });\r\n            } catch (error) {\r\n                requestErrorHandler(error);\r\n            }\r\n        },\r\n        \"signup\": async (body: any) => {\r\n            try {\r\n                if (body.password[0] !== body.confirmPassword[0]) throw \"Passwords don't match\";\r\n                const [, stripeUser, pass] = await Promise.all([dbConnect(), stripe.customers.create({\r\n                    name: body.name[0],\r\n                    email: body.email[0],\r\n                    description: 'Test Customer',\r\n                }), bcrypt.hash(body.password[0], 2)])\r\n                const newUser = new User({\r\n                    name: body.name[0],\r\n                    email: body.email[0],\r\n                    password: pass,\r\n                    role: 'user',\r\n                    isActive: false,\r\n                    externalId: stripeUser.id\r\n                })\r\n                await newUser.save();\r\n                mail(body.email[0]).catch(console.error);\r\n                return json({ status: 'success', message: 'Success', user: {} }, { status: 201 });\r\n            } catch (error) {\r\n                requestErrorHandler(error);\r\n            }\r\n        },\r\n    },\r\n}", "const mongoose = require('mongoose');\r\nconst validator = require('validator');\r\nconst bcrypt = require('bcryptjs');\r\nconst userSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: [true, 'Por favor ingrese un nombre de usuario'],\r\n    },\r\n    email: {\r\n        type: String,\r\n        required: [true, 'Por favor ingrese un correo'],\r\n        unique: true,\r\n        lowercase: true,\r\n        validate: [validator.isEmail, 'Por favor ingrese un correo valido'],\r\n    },\r\n    tn: {\r\n        type: String,\r\n        maxlength: [8, 'El telefono debe tener 8 digitos'],\r\n    },\r\n    photo: String,\r\n    password: {\r\n        type: String,\r\n        required: [true, 'Por favor ingrese una clave'],\r\n        minlength: 4,\r\n        select: false,\r\n    },\r\n    passwordChangedAt: Date,\r\n    role: {\r\n        type: String,\r\n        enum: ['user', 'helper', 'admin'],\r\n        default: 'user',\r\n    },\r\n    balance: {\r\n        type: Number,\r\n        default: 0\r\n    },\r\n    isActive: {\r\n        type: Boolean,\r\n        default: true,\r\n        select: false,\r\n    },\r\n    isValidated: {\r\n        type: Boolean,\r\n        default: false,\r\n        select: false,\r\n    },\r\n    canBorrow: {\r\n        type: Boolean,\r\n        default: false,\r\n    },\r\n    externalId: {\r\n        type: String,\r\n    }\r\n});\r\n\r\n// userSchema.pre('save', async function (next: any) {\r\n//     //Only run if password has changed\r\n//     // if (!userSchema.isModified('password')) return next;\r\n//     //Hash the password with bcrypt\r\n//     userSchema.password = await bcrypt.hash(userSchema.password, 2);\r\n//     //Delete passwordConfirm field, to not be save in DB\r\n//     // userSchema.passwordConfirm = undefined;\r\n//     next();\r\n// });\r\n\r\nuserSchema.pre(/^'find'/, function (next: any) {\r\n    userSchema.find({ active: { $ne: false } });\r\n    next();\r\n});\r\n\r\nuserSchema.methods.correctPassword = async function (\r\n    inputPassword: any,\r\n    userPassword: any\r\n) {\r\n    return await bcrypt.compare(inputPassword, userPassword);\r\n};\r\n\r\n// userSchema.methods.changedPasswordAfter = function (JWTTimestamp: any) {\r\n//     if (userSchema.passwordChangedAt) {\r\n//         const changedTimestamp = parseInt(\r\n//             userSchema.passwordChangedAt.getTime() / 1000,\r\n//             10\r\n//         );\r\n//         return JWTTimestamp < changedTimestamp;\r\n//     }\r\n\r\n//     return false;\r\n// };\r\n\r\nexport default mongoose.models.User || mongoose.model('User', userSchema);\r\n", "// /lib/dbConnect.js\r\nimport mongoose from 'mongoose'\r\n\r\n/** \r\nSource : \r\nhttps://github.com/vercel/next.js/blob/canary/examples/with-mongodb-mongoose/utils/dbConnect.js \r\n**/\r\n\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\r\n    'Please define the MONGODB_URI environment variable inside .env.local'\r\n  )\r\n}\r\n\r\n/**\r\n * Global is used here to maintain a cached connection across hot reloads\r\n * in development. This prevents connections growing exponentially\r\n * during API Route usage.\r\n */\r\n//@ts-ignore\r\nlet cached = global.mongoose\r\n\r\nif (!cached) {\r\n  //@ts-ignore\r\n  cached = global.mongoose = { conn: null, promise: null }\r\n}\r\n\r\nasync function dbConnect() {\r\n  if (cached.conn) {\r\n    return cached.conn\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    const opts = {\r\n      useNewUrlParser: true,\r\n      useUnifiedTopology: true,\r\n    }\r\n    //@ts-ignore\r\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then(mongoose => {\r\n      return mongoose\r\n    })\r\n  }\r\n  cached.conn = await cached.promise\r\n  return cached.conn\r\n}\r\n\r\nexport default dbConnect;\r\n", "const nodemailer = require(\"nodemailer\");\r\n\r\n// async..await is not allowed in global scope, must use a wrapper\r\nasync function mail(sentTo: string) {\r\n    // Generate test SMTP service account from ethereal.email\r\n    // Only needed if you don't have a real mail account for testing\r\n    // let testAccount = await nodemailer.createTestAccount();\r\n\r\n    // create reusable transporter object using the default SMTP transport\r\n    let transporter = nodemailer.createTransport({\r\n        host: process.env.EMAIL_HOST,\r\n        port: process.env.EMAIL_PORT,\r\n        secure: false, // true for 465, false for other ports\r\n        auth: {\r\n            user: process.env.EMAIL_USER,\r\n            pass: process.env.EMAIL_PASS,\r\n        },\r\n    });\r\n    // let transporter = nodemailer.createTransport({\r\n    //     host: \"smtp.ethereal.email\",\r\n    //     port: 587,\r\n    //     secure: false, // true for 465, false for other ports\r\n    //     auth: {\r\n    //         user: testAccount.user, // generated ethereal user\r\n    //         pass: testAccount.pass, // generated ethereal password\r\n    //     },\r\n    // });\r\n\r\n    let link = 'https://wachimingo.vercel.app/api/user/'\r\n    // send mail with defined transport object\r\n    let info = await transporter.sendMail({\r\n        from: process.env.EMAIL_FROM, // sender address\r\n        to: sentTo, // list of receivers\r\n        subject: \"Confirm your account\", // Subject line\r\n        text: \"Finish Sign Up\", // plain text body\r\n        html: `<h1>Finish Sign Up</h1>\r\n        <p>Click the link below to active your account</p>\r\n        <a>${link + sentTo}</a>`, // html body\r\n    });\r\n\r\n    console.log(\"Message sent: %s\", info.messageId);\r\n    // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\r\n\r\n    // Preview only available when sending through an Ethereal account\r\n    // console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\r\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\r\n}\r\n\r\n// mail().catch(console.error);\r\n\r\nexport default mail;", "import { json } from \"@remix-run/node\";\r\n\r\nexport const requestErrorHandler = (error: any) => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n        //@ts-ignore\r\n        return json({\r\n            status: 'error', message: 'Upps, something when wrong'\r\n        }, { status: error.statusCode ?? 500 });\r\n    } else {\r\n        //@ts-ignore\r\n        throw new Error(error);\r\n    }\r\n}", "import { Outlet } from \"@remix-run/react\";\r\nimport Footer from \"~/components/Footer\";\r\nimport { NavBar } from \"~/components/NavBar\";\r\nimport { useEffect, useState } from \"react\";\r\n//@ts-ignore\r\nimport Cookies from 'js-cookie'\r\n\r\nconst Portfolio = () => {\r\n    const [logged, setLogged] = useState(false);\r\n    const [isOpen, setIsOpen] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        if (Cookies.get('token')) {\r\n            setLogged(true)\r\n        } else {\r\n            setLogged(false)\r\n        }\r\n        const x = window.matchMedia(\"(min-width: 768px)\");\r\n        setIsOpen(x.matches);\r\n\r\n        const resizedWindow = (x: any) => {\r\n            setIsOpen(x.matches)\r\n        }\r\n\r\n        x.addEventListener('change', resizedWindow);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <NavBar\r\n                {...Cookies.get()}\r\n                logged={logged}\r\n                isOpen={isOpen}\r\n                setIsOpen={setIsOpen}\r\n            />\r\n            <Outlet />\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Portfolio;", "import { FaFacebookF, FaGithubAlt, FaLinkedinIn, FaRegEnvelope } from \"react-icons/fa\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer-wrapper\">\r\n            <div className=\"footer-container\">\r\n                <section className=\"social-media\">\r\n                    <a className=\"\" href=\"https://www.facebook.com/halex007/\" target=\"_blank\" rel='noreferrer' role=\"button\">\r\n                        <FaFacebookF />\r\n                    </a>\r\n                    <a className=\"\" href=\"https://www.linkedin.com/in/joshua-guillen-755143a7/\" target=\"_blank\" rel='noreferrer' role=\"button\">\r\n                        <FaLinkedinIn />\r\n                    </a>\r\n                    <a className=\"\" href=\"https://github.com/Wachimingo\" target=\"_blank\" rel='noreferrer' role=\"button\">\r\n                        <FaGithubAlt />\r\n                    </a>\r\n                </section>\r\n                <a href=\"mailto: joshua.herrera2@outlook.com\">\r\n                    <FaRegEnvelope className='' /> joshua.herrera2@outlook.com\r\n                </a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;", "\r\nimport { Link } from \"@remix-run/react\";\r\n\r\nexport const NavBar = (props: any) => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <div className=\"hamburger-menu\" onClick={() => props.setIsOpen(!props.isOpen)}>\r\n                <div className=\"ham-divs\" />\r\n                <div className=\"ham-divs\" />\r\n                <div className=\"ham-divs\" />\r\n            </div>\r\n            <div className='menu-child-div' style={{ display: props.isOpen ? 'block' : 'none' }}>\r\n                <Link className=\"link\" to=\"/\">Home</Link>\r\n                <Link className=\"link\" to=\"/projects\">Projects</Link>\r\n                <Link className=\"link\" to=\"/skills\">Skills</Link>\r\n                <Link className=\"link\" to=\"/certs\">Certifications</Link>\r\n            </div>\r\n            <div className='menu-child-div' style={{ display: props.isOpen ? 'block' : 'none' }}>\r\n                {\r\n                    !props.logged\r\n                        ? <Link className=\"link\" to=\"/auth/signup\">Sign Up</Link>\r\n                        : undefined\r\n                }\r\n                {\r\n                    props.logged\r\n                        ? <Link className=\"link\" to=\"/auth/signout\">Sign Out</Link>\r\n                        : <Link className=\"link\" to=\"/auth/signin\">Sign In</Link>\r\n                }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n", "import { Outlet } from \"@remix-run/react\";\r\nimport { SideBar } from \"~/components/sideBar\";\r\n\r\nimport sidebarStyles from \"~/styles/sidebar.css\";\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: sidebarStyles }\r\n    ]\r\n}\r\n\r\nconst Restaurant = () => {\r\n    return (\r\n        <>\r\n            <SideBar />\r\n            <Outlet />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Restaurant;", "import { useState } from \"react\";\r\nimport { FaArrowAltCircleLeft, FaArrowAltCircleRight } from \"react-icons/fa\";\r\nimport { Link } from \"@remix-run/react\";\r\n\r\nexport const SideBar = () => {\r\n    const [hide, setHide] = useState(false)\r\n    return (\r\n        <div className=\"sidebar-wrapper\">\r\n            <button\r\n                type=\"button\"\r\n                className={`${hide ? 'open' : 'close'} sidebar-button`}\r\n                onClick={() => { setHide(!hide) }}\r\n            >\r\n                {\r\n                    hide\r\n                        ? <FaArrowAltCircleRight\r\n                            className='open sidebar-button'\r\n                            onClick={() => { setHide(!hide) }}\r\n                        />\r\n                        : <FaArrowAltCircleLeft\r\n                            className='close sidebar-button'\r\n                            onClick={() => { setHide(!hide) }}\r\n                        />}\r\n            </button>\r\n            {\r\n                hide ?\r\n                    undefined\r\n                    :\r\n                    <nav className=\"sidebar-container\">\r\n                        <div className=\"\">\r\n                            <h3 className=\"\">Go to:</h3>\r\n                        </div>\r\n                        <div>\r\n                            <Link className=\"sidebar-link\" to=\"/projects/restaurant\">Lading Page</Link>\r\n                            <Link className=\"sidebar-link\" to=\"/projects/restaurant/catalog\">Catalog</Link>\r\n                            <Link className=\"sidebar-link\" to=\"/projects/restaurant/billing/sell\">Sell</Link>\r\n                            <Link className=\"sidebar-link\" to=\"/projects/restaurant/orders/isPending\">Orders</Link>\r\n                        </div>\r\n                    </nav>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n", "import { useEffect, useState } from \"react\";\r\nimport { json } from \"@remix-run/node\";\r\n// import { toast } from \"react-toastify\";\r\n// import toastStyle from 'react-toastify/dist/ReactToastify.min.css';\r\n// import { ToastContainer } from \"react-toastify\";\r\nimport {\r\n    // useSubmit, \r\n    useActionData, useLoaderData\r\n} from \"@remix-run/react\";\r\nimport { getForToday } from \"~/controllers/dishes\";\r\nimport transactionStyles from \"~/styles/transaction.css\";\r\nimport formStyles from \"~/styles/form.css\";\r\nimport { Card } from \"~/components\";\r\n// import TransacionModal from \"~/components/modals/TransacionModal\";\r\nimport { FaCartPlus, FaTrash } from \"react-icons/fa\";\r\nimport { increaseCount, decreaseCount } from \"~/controllers/billing\";\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Restaurant | Transactions\",\r\n        description:\r\n            \"Sell/Buy dishes online\",\r\n    };\r\n};\r\n\r\nexport const links = () => {\r\n    return [\r\n        { rel: 'stylesheet', href: transactionStyles },\r\n        { rel: 'stylesheet', href: formStyles },\r\n        // { rel: \"stylesheet\", href: toastStyle }\r\n    ]\r\n}\r\n\r\nexport const loader = async () => {\r\n    const dishes = await getForToday({});\r\n    return json(dishes)\r\n}\r\n\r\nexport const action = async ({ request }: any) => {\r\n    if (request.method === 'POST') {\r\n        // Set your secret key. Remember to switch to your live secret key in production.\r\n        // See your keys here: https://dashboard.stripe.com/apikeys\r\n        const stripe = require('stripe')(process.env.NEXT_PUBLIC_STRIPE_SECRET_KEY);\r\n        const formData = await request.formData();\r\n        const session = await stripe.checkout.sessions.create({\r\n            line_items: JSON.parse(formData.get('selectedDishes')),\r\n            mode: 'payment',\r\n            success_url: `https://wachimingo.vercel.app?success=true`,\r\n            cancel_url: `https://wachimingo.vercel.app?canceled=true`,\r\n        });\r\n        return json({ session })\r\n    }\r\n}\r\n\r\nexport function ErrorBoundary({ error }: any) {\r\n    console.error(error);\r\n    return (\r\n        <html>\r\n            <head>\r\n                <title>Oh no!</title>\r\n            </head>\r\n            <body>\r\n            </body>\r\n        </html>\r\n    );\r\n}\r\n\r\nconst Transaction = () => {\r\n    const dishes = useLoaderData();\r\n    const results = useActionData();\r\n    // const submit = useSubmit();\r\n    const [dishCounters, setDishCounters] = useState(() => dishes.map((dish: any) => 0));\r\n    const [selectedDishes, setSelectedDishes] = useState<any>([]);\r\n    const [totalDishes, setTotalDishes] = useState(0);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n    // const itemsProps = {\r\n    //     dishes,\r\n    //     dishCounters,\r\n    //     setDishCounters,\r\n    //     selectedDishes,\r\n    //     setSelectedDishes,\r\n    //     totalDishes,\r\n    //     setTotalDishes,\r\n    //     totalPrice,\r\n    //     setTotalPrice\r\n    // }\r\n\r\n    useEffect(() => {\r\n        if (results) {\r\n            window.open(results.session.url, '_blank');\r\n        }\r\n    }, [results]);\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                <h3>Billing</h3>\r\n            </main>\r\n            <section id=\"cardsSection\" className=\"items-container\">\r\n                {\r\n                    dishes.map((dish, i) => {\r\n                        return <Card key={dish.name}>\r\n                            <img\r\n                                src={`https://images.weserv.nl/?url=${dish.image}&w=150&h=150`}\r\n                                alt={dish.name}\r\n                            />\r\n                            <div className=\"content\">\r\n                                <h1>{dish.name}</h1>\r\n                                <p>{dish.description}</p>\r\n                                <p>${dish.price}</p>\r\n                                <h4>Amount: {dishCounters[i]}</h4>\r\n                            </div>\r\n                            <div className=\"control\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"increase-amount-button\"\r\n                                    onClick={() => increaseCount(\r\n                                        i,\r\n                                        JSON.parse(JSON.stringify(dish)),\r\n                                        dishCounters[i],\r\n                                        dishCounters,\r\n                                        setDishCounters,\r\n                                        totalDishes,\r\n                                        setTotalDishes,\r\n                                        selectedDishes,\r\n                                        setSelectedDishes,\r\n                                        totalPrice,\r\n                                        setTotalPrice\r\n                                    )}\r\n                                >\r\n                                    <FaCartPlus />\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"decrease-amount-button\"\r\n                                    onClick={() => decreaseCount(\r\n                                        i,\r\n                                        JSON.parse(JSON.stringify(dish)),\r\n                                        dishCounters[i],\r\n                                        dishCounters,\r\n                                        setDishCounters,\r\n                                        totalDishes,\r\n                                        setTotalDishes,\r\n                                        selectedDishes,\r\n                                        setSelectedDishes,\r\n                                        totalPrice,\r\n                                        setTotalPrice\r\n                                    )}\r\n                                >\r\n                                    <FaTrash />\r\n                                </button>\r\n                            </div>\r\n                        </Card>\r\n                    })\r\n                }\r\n            </section>\r\n            {/* <button\r\n                className=\"btn btn-info my-4 mx-2\"\r\n                onClick={() => {\r\n                    const formData = new FormData();\r\n                    let formattedList = selectedDishes.map((dish: any, i: number) => {\r\n                        // const index = items.indexOf(item); // as the counter state position of the items is based in the items array, we need to get the position in that variable, else the render won't find what to render\r\n                        const indexArray = dishes.map((OldItem: any, i: number) => {\r\n                            if (OldItem!.name === dish.name) {\r\n                                return i;\r\n                            } return undefined;\r\n                        })\r\n                        const index: any = indexArray.filter((x: any) => { return x !== undefined })\r\n                        return {\r\n                            price: dish.externalId,\r\n                            quantity: dishCounters[index]\r\n                        }\r\n                    })\r\n                    formData.append('selectedDishes', JSON.stringify(formattedList))\r\n                    submit(formData, { method: \"post\", action: \"/projects/restaurant/billing/sell\" })\r\n                }}\r\n            >\r\n                Checkout\r\n            </button>\r\n            <section>\r\n                <p>This is a test enviroment, you can test the payments using any of the test cards from the link below</p>\r\n                <a href=\"https://stripe.com/docs/testing#cards\">Stripe Test Cards</a>\r\n            </section> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Transaction;", "import { json } from \"@remix-run/node\";\r\nimport Dishes from '../models/dishes';\r\nimport dbConnect from '../utils/dbConnection';\r\nimport { requestErrorHandler } from './errors';\r\n\r\n// Set your secret key. Remember to switch to your live secret key in production.\r\n// See your keys here: https://dashboard.stripe.com/apikeys\r\nconst stripe = require('stripe')(process.env.NEXT_PUBLIC_STRIPE_SECRET_KEY);\r\n\r\nexport const getForToday = async (props: any) => {\r\n    await dbConnect();\r\n    return await Dishes.find({ forToday: true }).limit(props.limit)\r\n}\r\n\r\nexport const getAllDishes = async (props: any) => {\r\n    await dbConnect();\r\n    const dishes = await Dishes.find()\r\n    return dishes;\r\n}\r\n\r\nexport const actions: any = {\r\n    \"GET\": async () => {\r\n        try {\r\n            await dbConnect();\r\n            return await Dishes.find().where('locale').equals('en');\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"POST\": async (body: any) => {\r\n        try {\r\n            const [, product] = await Promise.all([dbConnect(), stripe.products.create({ name: body.name[0] })])\r\n            const price = await stripe.prices.create({\r\n                product: product.id,\r\n                unit_amount: body.price[0],\r\n                currency: 'usd',\r\n            });\r\n            const newDish = new Dishes({\r\n                name: body.name[0],\r\n                description: body.description[0],\r\n                price: body.price[0],\r\n                image: body.image[0],\r\n                externalId: price.id\r\n            });\r\n            await newDish.save();\r\n            return json({ status: 'success', message: 'Posted succesfuly', newDish }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"PATCH\": async ({ dishId, type, ...props }) => {\r\n        try {\r\n            // if (props.price && type === 'update') {\r\n            //     await stripe.prices.update(\r\n            //         props.externalId,\r\n            //         { unit_amount: props.price }\r\n            //     );\r\n            // }\r\n            await dbConnect();\r\n            const res = await Dishes.findByIdAndUpdate({ _id: dishId }, props)\r\n            if (!res) throw 'No ID provided';\r\n            return json({ status: 'success', message: 'Updated succesfuly' }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    // \"update\": async (body: any) => {\r\n    //     try {\r\n    //         await dbConnect();\r\n    //         if (body.price[0]) {\r\n    //             await stripe.prices.update(\r\n    //                 body.externalId,\r\n    //                 { unit_amount: body.price[0] }\r\n    //             );\r\n    //         }\r\n    //         const res = await Dishes.findByIdAndUpdate({ _id: body.dishId[0] },\r\n    //             {\r\n    //                 name: body.name[0],\r\n    //                 description: body.description[0],\r\n    //                 price: body.price[0],\r\n    //                 image: body.image[0]\r\n    //             }\r\n    //         )\r\n    //         if (!res) throw 'No ID provided';\r\n    //         return json({ status: 'success', message: 'Updated succesfuly' }, { status: 201 });\r\n    //     } catch (error) {\r\n    //         requestErrorHandler(error);\r\n    //     }\r\n    // },\r\n    \"DELETE\": async (body: any) => {\r\n        try {\r\n            await dbConnect();\r\n            const res = await Dishes.findByIdAndDelete({ _id: body.dishId[0] })\r\n            if (!res) throw 'No ID provided';\r\n            return json({ status: 'success', message: 'Deleted succesfuly' }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n}\r\n", "\r\nconst mongoose = require('mongoose');\r\n\r\nconst dishSchema = new mongoose.Schema(\r\n  {\r\n    name: {\r\n      type: String,\r\n      required: [true, 'El platillo tiene que tener un nombre'],\r\n      unique: [true, 'El platillo ya existe'],\r\n    },\r\n    price: {\r\n      type: Number,\r\n      required: [true, 'El platillo tiene que tener un precio'],\r\n    },\r\n    ingredients: {},\r\n    ratingsAverage: {\r\n      type: Number,\r\n      default: 4.5,\r\n    },\r\n    ratingsQuantity: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    description: {\r\n      type: String,\r\n      trim: true,\r\n    },\r\n    image: {\r\n      type: String,\r\n      default: 'stockDishImg.png'\r\n    },\r\n    favoriteQuantity: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    createdAt: {\r\n      type: Date,\r\n      default: Date.now(),\r\n    },\r\n    forToday: {\r\n      type: Boolean,\r\n      default: true,\r\n      require: true,\r\n    },\r\n    category: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: 'Category'\r\n    },\r\n    externalId: {\r\n      type: String\r\n    }\r\n  },\r\n  {\r\n    toJSON: { virtuals: true },\r\n    toObject: { virtuals: true },\r\n  }\r\n);\r\n\r\n// Virtual populate\r\ndishSchema.virtual('reviews', {\r\n  ref: 'Review',\r\n  foreignField: 'dish',\r\n  localField: '_id',\r\n});\r\n\r\n// Virtual populate\r\ndishSchema.virtual('favoriteDish', {\r\n  ref: 'FavoriteDish',\r\n  foreignField: 'dish',\r\n  localField: '_id',\r\n});\r\n\r\nexport default mongoose.models.Dish || mongoose.model('Dish', dishSchema);\r\n\r\n", "import { Form, Link } from \"@remix-run/react\";\r\n\r\nconst renderForm: any = {\r\n    \"signin\": (action: string) => {\r\n        return (\r\n            <Form method=\"post\" action='/auth/signin' className=\"mb-md-5 pb-5\">\r\n                <h2 className=\"fw-bold mb-2 text-uppercase\">{action}</h2>\r\n                <p className=\"text-white-50\">Please enter your login and password!</p>\r\n                <div className=\"form-outline form-white\">\r\n                    <input\r\n                        type=\"email\"\r\n                        name='email'\r\n                        id=\"typeEmailX\"\r\n                        className=\"form-control form-control-lg\"\r\n                        required={true}\r\n                    // value='joshuaguillen.adoc@live.com'\r\n                    />\r\n                    <label className=\"form-label\" htmlFor=\"typeEmailX\">Email</label>\r\n                </div>\r\n                <div className=\"form-outline form-white\">\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"typePasswordX\"\r\n                        className=\"form-control form-control-lg\"\r\n                        required={true}\r\n                    // value='123456'\r\n                    />\r\n                    <label className=\"form-label\" htmlFor=\"typePasswordX\">Password</label>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center text-center pt-1\">\r\n\r\n                </div>\r\n                <div>\r\n                    <p className=\"mb-0\">Don't have an account? <Link to=\"/auth/signup\" className=\"text-white-50 fw-bold\">Sign Up</Link>\r\n                    </p>\r\n                </div>\r\n                {/* <p className=\"small mb-5 pb-lg-2\"><a className=\"text-white-50\" href=\"#!\">Forgot password?</a></p> */}\r\n                <button className=\"btn btn-outline-light btn-lg px-5\" type=\"submit\">Login</button>\r\n            </Form>\r\n        )\r\n    },\r\n    \"signup\": (action: string) => {\r\n        return (\r\n            <Form method=\"post\" action='/auth/signup' className=\"md-5\">\r\n                <h2 className=\"fw-bold mb-2 text-uppercase\">{action}</h2>\r\n                <p className=\"text-white-50\">Please enter your login and password!</p>\r\n                <div className=\"form-outline form-white\">\r\n                    <label className=\"form-label\" htmlFor=\"typeEmailX\">Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name='name'\r\n                        id=\"name\"\r\n                        className=\"form-control form-control-lg\"\r\n                        required={true}\r\n                    // value='test'\r\n                    />\r\n                </div>\r\n                <div className=\"form-outline form-white\">\r\n                    <label className=\"form-label\" htmlFor=\"typeEmailX\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name='email'\r\n                        id=\"typeEmailX\"\r\n                        className=\"form-control form-control-lg\"\r\n                        required={true}\r\n                    // value='alexanderguillen.adoc@gmail.com'\r\n                    />\r\n                </div>\r\n                <div className=\"form-outline form-white\">\r\n                    <label className=\"form-label\" htmlFor=\"typePasswordX\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"typePasswordX\"\r\n                        className=\"form-control form-control-lg\"\r\n                        required={true}\r\n                    // value='123456'\r\n                    />\r\n                </div>\r\n                <div className=\"form-outline form-white mb-4\">\r\n                    <label className=\"form-label\" htmlFor=\"typeConfrimPasswordX\">Confirm Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        id=\"typeConfrimPasswordX\"\r\n                        className=\"form-control form-control-lg\"\r\n                        required={true}\r\n                    // value='123456'\r\n                    />\r\n                </div>\r\n                <div className=\"d-flex justify-content-center text-center pt-1\">\r\n\r\n                </div>\r\n                <button className=\"btn btn-outline-light btn-lg px-5\" type=\"submit\">Sign Up</button>\r\n            </Form>\r\n        )\r\n    },\r\n    \"confirmationEmailSent\": (action: string) => {\r\n        return (\r\n            <div className=\"md-5\">\r\n                <>Confirmation email sent.</>\r\n            </div>\r\n        )\r\n    },\r\n    \"signout\": () => {\r\n        return (\r\n            <>You've been logged off.</>\r\n        )\r\n    }\r\n}\r\n\r\nexport const authForm = (action: string) => {\r\n    if (!action) return <>No action provided</>\r\n    const handler = renderForm[action]\r\n    if (!handler) return <>Not found</>\r\n    return renderForm[action](action)\r\n}", "export const increaseCount = (\r\n    i: number,\r\n    dish: any,\r\n    dishCounter: number,\r\n    dishCounters: number[],\r\n    setDishCounters: Function,\r\n    totalDishes: number,\r\n    setTotalDishes: Function,\r\n    selectedDishes: any,\r\n    setSelectedDishes: Function,\r\n    totalPrice: number,\r\n    setTotalPrice: Function\r\n) => {\r\n    if (dishCounter < 1) {\r\n        let dishes = [...selectedDishes]\r\n        delete dish!.category\r\n        delete dish!.createdAt\r\n        delete dish!.description\r\n        delete dish!.forToday\r\n        delete dish!.favoriteQuantity\r\n        delete dish!.ratingsAverage\r\n        delete dish!.ratingsQuantity\r\n        delete dish!.image\r\n        delete dish!.__v\r\n        delete dish!._id\r\n        dishes.push(dish)\r\n        setSelectedDishes(dishes)\r\n    }\r\n    dishCounter++;\r\n    let newdishCounters = [...dishCounters];\r\n    newdishCounters[i] = dishCounter;\r\n    setDishCounters(newdishCounters);\r\n    totalDishes++;\r\n    setTotalDishes(totalDishes);\r\n    totalPrice = totalPrice + dish!.price;\r\n    setTotalPrice(totalPrice);\r\n}\r\n\r\nexport const decreaseCount = (\r\n    i: number,\r\n    dish: any,\r\n    dishCounter: number,\r\n    dishCounters: number[],\r\n    setDishCounter: Function,\r\n    totalDishes: number,\r\n    setTotalDishes: Function,\r\n    selectedDishes: any,\r\n    setSelectedDishes: Function,\r\n    totalPrice: number,\r\n    setTotalPrice: Function\r\n) => {\r\n    if (dishCounter > 0) {\r\n        dishCounter--;\r\n        let newArray = [...dishCounters];\r\n        newArray[i] = dishCounter;\r\n        setDishCounter(newArray);\r\n        totalDishes--;\r\n        setTotalDishes(totalDishes);\r\n        totalPrice = totalPrice - dish!.price;\r\n        setTotalPrice(totalPrice);\r\n    }\r\n    if (dishCounter < 1) {\r\n        let dishes = [...selectedDishes]\r\n        const newDishes: any = dishes.filter((item: any) => {\r\n            if (item.name === dish!.name) {\r\n                return undefined\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setSelectedDishes(newDishes)\r\n    }\r\n}\r\n\r\nexport const processTransaction = async (\r\n    totalPrice: number,\r\n    totalDishes: number,\r\n    token: string,\r\n    userId: string,\r\n    selectedDishes: any,\r\n    dishCounters: number[],\r\n    items: any,\r\n    customer?: string,\r\n) => {\r\n    let dishes = [...selectedDishes]\r\n    dishes.forEach((dish: any) => {\r\n        const index = items.indexOf(dish)\r\n        if (index > -1) {\r\n            dish.quantity = dishCounters[index]\r\n            delete dish!.image\r\n        }\r\n    });\r\n\r\n    // const result = await fetch('/api/comedor/bills', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'content-type': 'application/json',\r\n    //         Authorization: `Bearer ${token}`\r\n    //     },\r\n    //     body: JSON.stringify({\r\n    //         userId,\r\n    //         customer: customer ?? userId,\r\n    //         totalDishes,\r\n    //         totalPrice,\r\n    //         status: 'isPending',\r\n    //         isPaid: false,\r\n    //         body: [...dishes]\r\n    //     })\r\n    // });\r\n    // const data = await result.json();\r\n    // if (result.ok) {\r\n    //     toast.success('Transaccion realizada');\r\n    // } else {\r\n    //     toast.error(data.error)\r\n    // }\r\n}\r\n\r\nexport const clearSellValues = (\r\n    setDishCounter: Function,\r\n    setTotalDishes: Function,\r\n    setSelectedDishes: Function,\r\n    setTotalPrice: Function\r\n) => {\r\n    setDishCounter([]);\r\n    setTotalDishes(0);\r\n    setSelectedDishes([]);\r\n    setTotalPrice(0);\r\n}", "const Carousel = ({ items }: any) => {\r\n    return (\r\n        <div className='slider'>\r\n            <br />\r\n            {\r\n                items.map((item: any, i: number) => {\r\n                    return (\r\n                        <span key={`slideButton${i}`}>\r\n                            <a className=\"slider-tags\" href={`#slide-${i}`}>{i + 1}</a>\r\n                        </span>\r\n                    )\r\n                })\r\n            }\r\n            <br />\r\n            <br />\r\n            <div className='slides'>\r\n                {\r\n                    items.map((item: any, i: number) => {\r\n                        return (\r\n                            <div key={`slide${i}`} id={`slide-${i}`}>\r\n                                <img className='img' src={item.image} alt={item.name} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel;", "/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable react-hooks/rules-of-hooks */\r\nimport { useEffect } from \"react\";\r\n\r\nexport const Modal = ({ children, isOpen, closeModal, wrapperId = 'default' }: any) => {\r\n    useEffect(() => {\r\n        /**\r\n    * If the target of the event is the modal, remove the event listener and close the modal.\r\n    * @param {any} event - any - the event that is passed to the function\r\n    */\r\n        function closeWhenClickOutside(event: Event) {\r\n            if (event.target == document.getElementById(`${wrapperId}-modal`)) {\r\n                window.removeEventListener('click', closeWhenClickOutside);\r\n                closeModal(false);\r\n            }\r\n        }\r\n        window.addEventListener('click', closeWhenClickOutside);\r\n    }, [])\r\n\r\n    if (!isOpen) return null;\r\n    return (\r\n        <div className=\"modal-container\" id={`${wrapperId}-modal`} style={{ display: isOpen ? 'block' : 'none' }}>\r\n            <div className=\"modal-content\">\r\n                <span className=\"modal-close-btn\" onClick={() => closeModal(false)}>\r\n                    &times;\r\n                </span>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}", "import { FaTrash, FaCog, FaAngleUp, FaRegFolderOpen, FaStar, FaAngleDown } from \"react-icons/fa\";\r\nimport { Link, useFetcher } from \"@remix-run/react\";\r\n\r\nexport const Card = ({ children, ...props }) => {\r\n    return (\r\n        <div className=\"card-wrapper\" {...props}>\r\n            <div className=\"card-container\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CatalogRowButtons = ({ fetcher, method, title, style, icon, action, ...props }: any) => {\r\n    return (\r\n        <span\r\n            title={title}\r\n            style={style}\r\n            onClick={() => fetcher ? fetcher.submit({ ...props }, { method }) : action(props.item)}\r\n        >\r\n            {icon}\r\n        </span >\r\n    )\r\n}\r\n\r\nexport const CatalogControls = (\r\n    item: any,\r\n    fetcher: any,\r\n    dishToModify: any,\r\n    setDishToModify: Function,\r\n    isOpen: boolean,\r\n    setIsOpen: Function,\r\n) => {\r\n    return (\r\n        <div className='control'>\r\n            <CatalogRowButtons\r\n                title=\"Delete\"\r\n                icon={<FaTrash />}\r\n                fetcher={fetcher}\r\n                dishId={item.id}\r\n                method={'DELETE'}\r\n            />\r\n            <CatalogRowButtons\r\n                title=\"Modify\"\r\n                icon={<FaCog onClick={() => setIsOpen(isOpen => !isOpen)} />}\r\n                action={() => {\r\n                    setDishToModify(dishToModify => item)\r\n                }}\r\n                item={item}\r\n            />\r\n            <CatalogRowButtons\r\n                title={item?.forToday ? \"Desactivar\" : \"Activar\"}\r\n                icon={item?.forToday ? <FaAngleDown /> : <FaAngleUp />}\r\n                style={{ color: item?.forToday ? 'green' : 'red' }}\r\n                fetcher={fetcher}\r\n                dishId={item.id}\r\n                forToday={!item.forToday}\r\n                method={'PATCH'}\r\n                type={'forToday'}\r\n            />\r\n            <CatalogRowButtons\r\n                title='Review'\r\n                icon={\r\n                    <Link to={`/projects/restaurant/review/${item?._id}`} >\r\n                        <FaRegFolderOpen />\r\n                    </Link>\r\n                }\r\n                fetcher={fetcher}\r\n            />\r\n            <CatalogRowButtons\r\n                title=\"Mark as favorite\"\r\n                icon={<FaStar />}\r\n                fetcher={fetcher}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const OrderCard = ({ orders, status }: any) => {\r\n    return (\r\n        <>\r\n            {\r\n                orders.map((order: any, i: number) => {\r\n                    return (\r\n                        <div key={order.id + i} className=\"card d-inline-block mb-2 ms-2\" style={{ width: \"18rem\" }}>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{order.user.name}</h5>\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">{order.status}</h6>\r\n                                <p className=\"card-text\">Dishes: {order.totalDishes} Payment: {order.totalPrice}</p>\r\n                                <p className=\"card-text\">Payment status: {order.isPaid ? 'Success' : 'Pending'}</p>\r\n                                {CardControls(order._id, order.status)}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst CardControls = (id: string, status: string) => {\r\n    const fetcher = useFetcher();\r\n    const renderButtons: any = {\r\n        \"isPending\": (id: string) => {\r\n            return (\r\n                <>\r\n                    <button\r\n                        className=\"btn btn-success m-2\"\r\n                        onClick={() => fetcher.submit({ id, type: 'status', status: 'isReady' }, { method: \"patch\" })}\r\n                    >\r\n                        Ready\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => fetcher.submit({ id, type: 'status', status: 'cancelled' }, { method: \"patch\" })}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </>\r\n            )\r\n        },\r\n        \"isReady\": (id: string) => {\r\n            return (\r\n                <>\r\n                    <button\r\n                        className=\"btn btn-success m-2\"\r\n                        onClick={() => fetcher.submit({ id, type: 'status', status: 'completed' }, { method: \"patch\" })}\r\n                    >\r\n                        Complete\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => fetcher.submit({ id, type: 'status', status: 'cancelled' }, { method: \"patch\" })}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </>\r\n            )\r\n        },\r\n        \"completed\": () => undefined,\r\n        \"cancelled\": () => undefined,\r\n        \"default\": () => undefined\r\n    }\r\n    return renderButtons[status ?? 'default'](id);\r\n}", "import type { LoaderFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from '@remix-run/react'\r\nimport { OrderCard } from \"~/components/Card\";\r\nimport { getOrders, actions } from \"~/controllers/orders\";\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Restaurant | Orders\",\r\n        description:\r\n            \"Check order status\",\r\n    };\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n    const orders = await getOrders({ status: params.status, limit: 5 });\r\n    return json({ orders, status: params.status })\r\n}\r\n\r\nexport async function action({ request }: any) {\r\n    let result = {};\r\n    const body = await request.formData();\r\n    //If there is a nested action inside a HTTP method, then the object will have a type property\r\n    if (body._fields.type[0]) {\r\n        const handler = actions[request.method][body._fields.type[0]]\r\n        if (!handler) return json({ status: \"error\", message: \"No method or action found\" })\r\n        //first propery or [] is the HTTP method (POST,PUT,DELETE), the second property or [] is for the nested action\r\n        result = await actions[request.method ?? 'default'][body._fields.type[0] ?? 'default']({ ...body._fields })\r\n    }\r\n    else {\r\n        const handler = actions[request.method]\r\n        if (!handler) return json({ status: \"error\", message: \"No method or action found\" })\r\n        //Properties for the object are HTTP methods (POST,PUT,DELETE)\r\n        result = await actions[request.method ?? 'default']({ ...body._fields })\r\n    }\r\n    return json(result);\r\n}\r\n\r\nconst Orders = () => {\r\n    const { orders, status } = useLoaderData();\r\n    return (\r\n        <div className=\"d-inline-block\">\r\n            <h2>Orders</h2>\r\n            <section id='StatusControls'>\r\n                <Link to={'/projects/restaurant/orders/isPending'} className='btn btn-outline-danger ms-2 mb-4'>\r\n                    Pending\r\n                </Link>\r\n                <Link to={'/projects/restaurant/orders/isReady'} className='btn btn-outline-success ms-2 mb-4'>\r\n                    Ready\r\n                </Link>\r\n                <Link to={'/projects/restaurant/orders/completed'} className='btn btn-outline-secondary ms-2 mb-4'>\r\n                    Completed\r\n                </Link>\r\n                <Link to={'/projects/restaurant/orders/cancelled'} className='btn btn-outline-secondary ms-2 mb-4'>\r\n                    Cancelled\r\n                </Link>\r\n            </section>\r\n            <section>\r\n                <OrderCard orders={orders} status={status} />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\nexport default Orders;", "import mongoose, { Types } from 'mongoose';\r\nimport User from './user';\r\n\r\nconst billingSchema = new mongoose.Schema(\r\n  {\r\n    //This billing Schema is the header for the bill, the details will be store in detail billing schema\r\n    //Logged user ['Admin', 'Helper']\r\n    user: {\r\n      type: Types.ObjectId,\r\n      ref: User,\r\n      required: [true, 'El recibo debe contener el ID del vendedor o comprador'],\r\n    },\r\n    createdAt: {\r\n      type: String,\r\n    },\r\n    customer: {\r\n      type: String,\r\n    },\r\n    totalDishes: {\r\n      type: Number,\r\n    },\r\n    totalPrice: {\r\n      type: Number,\r\n    },\r\n    isFiado: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    status: {\r\n      type: String,\r\n      default: 'Completed',\r\n    },\r\n    paymentIntent: {\r\n      type: String,\r\n    },\r\n    isPaid: { type: Boolean, default: false },\r\n    body: {\r\n      type: Object,\r\n    }\r\n  },\r\n  {\r\n    toJSON: { virtuals: true },\r\n    toObject: { virtuals: true },\r\n  }\r\n);\r\n\r\n// Virtual populate\r\nbillingSchema.virtual('dishes', {\r\n  ref: 'detailedBill',\r\n  foreignField: 'bill',\r\n  localField: '_id',\r\n});\r\n\r\nbillingSchema.pre(/^find/, function (next) {\r\n  this.populate({\r\n    path: 'user',\r\n    select: 'name tn',\r\n  });\r\n\r\n  next();\r\n});\r\n\r\nexport default mongoose.models.Bill || mongoose.model('Bill', billingSchema);\r\n", "import Bill from '../models/bill';\r\nimport dbConnect from '../utils/dbConnection';\r\n\r\n//For dataLoader\r\nexport const getOrders = async (props: any) => {\r\n    await dbConnect();\r\n    const orders = await Bill.find({ status: props.status }).limit(props.limit)\r\n    return orders;\r\n}\r\n\r\n//For actions loader\r\nexport const actions: any = {\r\n    \"PATCH\": {\r\n        \"status\": async (body: any) => {\r\n            await dbConnect();\r\n            const order = await Bill.findByIdAndUpdate({ _id: body.id[0] }, { status: body.status[0] })\r\n            return order;\r\n        },\r\n        \"default\": () => {\r\n            return 'Action not found'\r\n        }\r\n    },\r\n    \"default\": () => {\r\n        return 'Action not found'\r\n    }\r\n}", "import { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport toastStyle from 'react-toastify/dist/ReactToastify.min.css';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useActionData, useFetcher, useLoaderData } from \"@remix-run/react\";\r\nimport { Card, CatalogControls } from \"~/components/Card\";\r\nimport { getAllDishes, actions } from \"~/controllers/dishes\";\r\nimport catalogStyles from \"~/styles/catalog.css\";\r\nimport formStyles from \"~/styles/form.css\";\r\nimport CatalogModal from \"~/components/modals/CatalogModal\";\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Restaurant | Catalog\",\r\n        description:\r\n            \"Dishes we offere\",\r\n    };\r\n};\r\n\r\nexport const links = () => {\r\n    return [\r\n        { rel: 'stylesheet', href: catalogStyles },\r\n        { rel: 'stylesheet', href: formStyles },\r\n        { rel: \"stylesheet\", href: toastStyle }\r\n    ]\r\n}\r\n\r\nexport const loader = async () => {\r\n    const dishes = await getAllDishes({});\r\n    return json(dishes)\r\n}\r\n\r\nexport const action = async ({ request }) => {\r\n    /* Taking the form data from the request and putting it into an object. */\r\n    const body = await request.formData();\r\n    const data: any = {};\r\n\r\n    for (const pair of body.entries()) {\r\n        data[pair[0]] = pair[1]\r\n    }\r\n\r\n    /* Checking if the request method is in the actions object. If it is, it will return the data. If\r\n    not, it will return an error. */\r\n    const handler = actions[request.method];\r\n    if (!handler) return json({ status: \"error\", message: \"No method or action found\" }, { status: 404 });\r\n    return await actions[request.method](data);\r\n    // return json({});\r\n}\r\n\r\nexport function ErrorBoundary({ error }: any) {\r\n    return (\r\n        <main>\r\n            <h1>{error.message}</h1>\r\n        </main>\r\n    );\r\n}\r\n\r\nconst Catalog = () => {\r\n    const dishes = useLoaderData();\r\n    const fetcher = useFetcher();\r\n    const results = useActionData();\r\n    const [dishToModify, setDishToModify] = useState<any>(undefined);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const { data } = fetcher;\r\n    useEffect(() => {\r\n        if (data) {\r\n            //@ts-ignore\r\n            toast[data.status](data.message)\r\n            setIsOpen(isOpen => !isOpen);\r\n        } else if (results) {\r\n            //@ts-ignore\r\n            toast[results.status](results.message);\r\n            setIsOpen(isOpen => !isOpen);\r\n        }\r\n    }, [data, results]);\r\n    return (\r\n        <>\r\n            <main>\r\n                <h1>Catalog</h1>\r\n            </main>\r\n            <section className=\"items-container\">\r\n                {\r\n                    dishes?.map((dish: any) => {\r\n                        return (\r\n                            <Card key={dish.name}>\r\n                                {CatalogControls(dish, fetcher, dishToModify, setDishToModify, isOpen, setIsOpen)}\r\n                                <img\r\n                                    src={`https://images.weserv.nl/?url=${dish.image}&w=150&h=150`}\r\n                                    alt={dish.name}\r\n                                />\r\n                                <div>\r\n                                    <h1>{dish.name}</h1>\r\n                                    <p className=\"card-text\">{dish.description}</p>\r\n                                    <p className=\"card-text\">${dish.price}</p>\r\n                                </div>\r\n                            </Card>\r\n                        );\r\n                    })\r\n                }\r\n            </section>\r\n            <CatalogModal dishToModify={dishToModify} isModalOpen={isOpen} setIsModalOpen={setIsOpen} />\r\n            <ToastContainer />\r\n            <button\r\n                type='button'\r\n                className=\"bubble-btn\"\r\n                onClick={() => {\r\n                    setDishToModify(dishToModify => undefined)\r\n                    setIsOpen(isOpen => !isOpen)\r\n                }}\r\n            >\r\n                +\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Catalog;", "import { Form } from \"@remix-run/react\";\r\nimport { Modal } from \"~/components\";\r\n\r\nconst CatalogModal = (props: any) => {\r\n    return (\r\n        <Modal isOpen={props.isModalOpen} closeModal={props.setIsModalOpen} wrapperId='catalog-modal'>\r\n            <h1>{props.dishToModify ? 'Modify dish' : 'Add dish'}</h1>\r\n            <Form method={props.dishToModify ? 'patch' : 'post'} action=\"/projects/restaurant/catalog\">\r\n                <section>\r\n                    <div>\r\n                        <label htmlFor=\"dishName\" className=\"form-label\">Dish Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"name\"\r\n                            id=\"dishName\"\r\n                            aria-describedby=\"dishName\"\r\n                            //@ts-ignore\r\n                            defaultValue={props.dishToModify ? props.dishToModify.name : undefined}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"dishDescrption\" className=\"form-label\">Description</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"description\"\r\n                            id=\"dishDescrption\"\r\n                            //@ts-ignore\r\n                            defaultValue={props.dishToModify ? props.dishToModify.description : undefined}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"dishPrice\" className=\"form-label\">Price</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            name=\"price\"\r\n                            id=\"dishPrice\"\r\n                            step=\".01\"\r\n                            pattern=\"^\\d*(\\.\\d{0,2})?$\"\r\n                            //@ts-ignore\r\n                            defaultValue={props.dishToModify ? props.dishToModify.price : undefined}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"dishImage\" className=\"form-label\">Image</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"dishImage\"\r\n                            name=\"image\"\r\n                            aria-describedby=\"imageHelp\"\r\n                            //@ts-ignore\r\n                            defaultValue={props.dishToModify ? props.dishToModify.image : undefined}\r\n                        />\r\n                        <div id=\"imageHelp\" className=\"form-text\">Please search for images online</div>\r\n                    </div>\r\n                    {\r\n                        props.dishToModify\r\n                            ?\r\n                            <>\r\n                                <input type=\"text\" name=\"dishId\" value={props.dishToModify?.id} style={{ display: \"none\" }} />\r\n                                <input type=\"text\" name=\"type\" value='update' style={{ display: \"none\" }} />\r\n                            </>\r\n                            :\r\n                            undefined\r\n                    }\r\n                </section>\r\n                <div className=\"form-controls\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"form-cancel-button\"\r\n                        // data-bs-dismiss=\"modal\" \r\n                        // aria-label=\"Close\"\r\n                        onClick={() => props.setIsModalOpen(false)}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <input type=\"submit\" />\r\n                </div>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CatalogModal;", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport Carousel from \"~/components/Carousel\";\r\nimport caruselStyle from \"~/styles/carousel.css\"\r\nimport restaurantStyle from \"~/styles/restaurant.css\"\r\nimport { getForToday } from \"~/controllers/dishes\";\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Restaurant\",\r\n        description:\r\n            \"Welcome to the restaurant app\",\r\n    };\r\n};\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: caruselStyle },\r\n        { rel: \"stylesheet\", href: restaurantStyle },\r\n    ]\r\n}\r\n\r\nexport const loader = async () => {\r\n    const dishes = await getForToday({})\r\n    return json(dishes)\r\n}\r\n\r\nconst Restaurant = () => {\r\n    const dishes = useLoaderData();\r\n    return (\r\n        <div className=\"restaurant-landing-page\">\r\n            <main>\r\n                <h1>Restaurant</h1>\r\n                <img src='https://images.weserv.nl/?url=https://account.globaldatabase.com/logo/www.uwink.com/' alt=\"logo\" />\r\n                <h2>Enjoy!</h2>\r\n                <br />\r\n                <h2>Today's Menu</h2>\r\n                <br />\r\n                <Carousel items={dishes ?? []} />\r\n            </main>\r\n            <section className=\"offering-section\">\r\n                <div>\r\n                    <h4>Breakfast</h4>\r\n                    <img\r\n                        src='https://images.weserv.nl/?url=https://bigoven-res.cloudinary.com/image/upload/h_320,w_320,c_fill/english-breakfast.jpg&w=300&h=300'\r\n                        alt=\"breakfast\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>Lunch</h4>\r\n                    <img\r\n                        src='https://images.weserv.nl/?url=https://images.freshop.com/2022776539896086690/aeb9b0d3526652a7479aef0a91fa91ae_large.png&type=webp&w=300&h=300'\r\n                        alt=\"breakfast\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>Dinner</h4>\r\n                    <img\r\n                        src='https://images.weserv.nl/?url=https://bigoven-res.cloudinary.com/image/upload/h_320,w_320,c_fill/cheesy-hash-brown-skillet-dinner.jpg&w=300&h=300'\r\n                        alt=\"breakfast\"\r\n                    />\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Restaurant;", "import { json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport { Card } from \"~/components\";\r\nimport { getProjects } from \"~/controllers/projects\";\r\nimport projectsStyle from '~/styles/projects.css';\r\nimport buttonsStyle from '~/styles/buttons.css';\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Projects\",\r\n        description: \"Catalog of projects\", \"og:title\": \"Projects\",\r\n    };\r\n};\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: projectsStyle },\r\n        { rel: \"stylesheet\", href: buttonsStyle },\r\n    ]\r\n}\r\n\r\nexport const loader = async () => {\r\n    const projects = await getProjects({ locale: 'en' })\r\n    return json(projects)\r\n}\r\n\r\nconst Projects = () => {\r\n    const projects = useLoaderData();\r\n    return (\r\n        <>\r\n            <main>\r\n                <h1>Projects</h1>\r\n            </main>\r\n            <section className=\"items-container\">\r\n                {\r\n                    projects.map((project: any, i: number) => {\r\n                        return (\r\n                            <Card key={project.name}>\r\n                                <img\r\n                                    src={project.image}\r\n                                    alt={project.name} />\r\n                                <div>\r\n                                    <h1>{project.name}</h1>\r\n                                    <p>{project.description}</p>\r\n                                </div>\r\n                                {\r\n                                    project.link.includes('http' || 'https') ?\r\n                                        <a href={project.link} className=\"button success\" target=\"_blank\" rel='noreferrer' role=\"button\">Checkout</a>\r\n                                        :\r\n                                        <Link to={project.link} className=\"button success\">Checkout</Link>\r\n                                }\r\n                            </Card>\r\n                        )\r\n                    })\r\n                }\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects;", "import { json } from \"@remix-run/node\";\r\nimport Projects from '~/models/projects';\r\nimport dbConnect from '~/utils/dbConnection';\r\nimport { requestErrorHandler } from './errors';\r\n\r\nexport const getProjects = async (props: any) => {\r\n    await dbConnect();\r\n    const projects = await Projects.find({}).where('locale').equals(props.locale).limit(props.limit)\r\n    return projects;\r\n}\r\n\r\nexport const actions: any = {\r\n    \"GET\": async () => {\r\n        try {\r\n            await dbConnect();\r\n            return await Projects.find().where('locale').equals('en');\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"POST\": async (body: any) => {\r\n        try {\r\n            await dbConnect();\r\n            const newProject = new Projects({\r\n                name: body.name[0],\r\n                description: body.description[0],\r\n                category: body.category[0],\r\n                status: body.status[0],\r\n                link: body.link[0],\r\n                locale: body.locale[0],\r\n                image: body.image[0],\r\n            });\r\n            await newProject.save();\r\n            return json({ status: 'success', message: 'Posted succesfuly', newProject }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n}", "import mongoose from 'mongoose';\r\n\r\nconst projectSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: true,\r\n        maxlength: 50\r\n    },\r\n    description: {\r\n        type: String\r\n    },\r\n    image: {\r\n        type: String\r\n    },\r\n    category: {\r\n        type: String\r\n    },\r\n    status: {\r\n        type: String,\r\n    },\r\n    link: {\r\n        type: String\r\n    },\r\n    locale: {\r\n        type: String,\r\n        enum: ['en', 'es'],\r\n        required: true\r\n    }\r\n});\r\n\r\nexport default mongoose.models.Project || mongoose.model('Project', projectSchema);", "import { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport toastStyle from 'react-toastify/dist/ReactToastify.min.css';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useActionData, useLoaderData } from '@remix-run/react';\r\nimport { authForm } from \"~/components/authComponents\";\r\nimport { actions } from \"~/controllers/auth\";\r\nimport authStyles from \"~/styles/auth.css\";\r\n//@ts-ignore\r\nimport Cookies from 'js-cookie';\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Wachimingo | Auth\",\r\n        description:\r\n            \"User authentication to use this site features\",\r\n    };\r\n};\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: authStyles },\r\n        { rel: \"stylesheet\", href: toastStyle }\r\n    ]\r\n}\r\n\r\nexport const loader = async ({ params }: any) => {\r\n    return json(params)\r\n}\r\n\r\nexport const action = async ({ request, params }: any) => {\r\n    const body = await request.formData();\r\n    // If there is a nested action inside a HTTP method, then the object will have a type property\r\n    if (params) {\r\n        const handler = actions[request.method][params.action];\r\n        if (!handler) return json({ status: \"error\", message: \"No method or action found\" });\r\n        //first property or [] is the HTTP method (POST,PUT,DELETE), the second property or [] is for the nested action\r\n        return await actions[request.method][params.action]({ ...body._fields });\r\n    }\r\n    else {\r\n        const handler = actions[request.method];\r\n        if (!handler) return json({ status: \"error\", message: \"No method or action found\" }, { status: 404 });\r\n        //Properties for the object are HTTP methods (POST,PUT,DELETE)\r\n        return await actions[request.method]({ ...body._fields });\r\n    }\r\n    // return json({})\r\n}\r\n\r\nconst Auth = () => {\r\n    const data = useLoaderData();\r\n    const result = useActionData();\r\n    useEffect(() => {\r\n        if (data.action === 'signout') {\r\n            if (Cookies.get('token')) {\r\n                Cookies.remove('name');\r\n                Cookies.remove('email');\r\n                Cookies.remove('token');\r\n                Cookies.remove('role');\r\n                window.location.href = \"/\";\r\n            }\r\n        }\r\n        if (result) {\r\n            if (result.status === 'success') {\r\n                if (data.action === 'signup') {\r\n                    window.location.href = \"/auth/confirmationEmailSent\"\r\n                } else {\r\n                    Cookies.set('name', result.user?.name);\r\n                    Cookies.set('email', result.user?.email);\r\n                    Cookies.set('token', result?.token);\r\n                    Cookies.set('role', result.user?.role);\r\n                    window.location.href = \"/\";\r\n                    // //@ts-ignore\r\n                    // toast[result.status](`Succes! Welcome ${result.user.name}!`);\r\n                }\r\n            } else {\r\n                if (result.status) {\r\n                    //@ts-ignore\r\n                    toast[result.status](result.message)\r\n                }\r\n            }\r\n        }\r\n    }, [result, data.action])\r\n\r\n    return (\r\n        <section className=\"container mb-4 mt-4\">\r\n            <div className=\"row d-flex justify-content-center align-items-center\">\r\n                <div className=\"col-12 col-md-8 col-lg-6 col-xl-5\">\r\n                    <div className=\"card bg-dark text-white\" style={{ borderRadius: \"1rem\" }}>\r\n                        <div className=\"card-body p-5 text-center\">\r\n                            {authForm(data.action)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { Card } from \"~/components/Card\";\r\nimport { getSkills } from '~/controllers/skills';\r\nimport rootStyles from '~/styles/root.css';\r\nimport cardStyle from '~/styles/card.css';\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Skills\",\r\n        description:\r\n            \"Skillset\",\r\n    };\r\n};\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: rootStyles },\r\n        { rel: \"stylesheet\", href: cardStyle },\r\n    ]\r\n}\r\n\r\nexport const loader = async () => {\r\n    const [skills] = await Promise.all([\r\n        getSkills({\r\n            locale: \"en\"\r\n        }),\r\n    ])\r\n    return json(skills);\r\n};\r\n\r\nexport default function Index() {\r\n    const skills = useLoaderData<any>();\r\n    return (\r\n        <>\r\n            <main>\r\n                <div className=''>\r\n                    <h1 className=\"\">Skillset</h1>\r\n                    <p>This is a evergrowing collection of current skillsets I handle.</p>\r\n                </div>\r\n                <div className=\"items-container2\">\r\n                    {\r\n                        skills.map((item: any, i: number) => {\r\n                            return (\r\n                                <Card key={i} index={i}>\r\n                                    <img src={\r\n                                        item.icon\r\n                                            ? `https://images.weserv.nl/?url=${item.icon}&w=250&h=250`\r\n                                            : 'https://images.weserv.nl/?url=https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/256x256/plain/symbol_questionmark.png&w=250&h=250'\r\n                                    }\r\n                                        alt={item.name}\r\n                                    />\r\n                                    <div>\r\n                                        <h1>{item.name}</h1>\r\n                                        <p>\r\n                                            {item.description}\r\n                                        </p>\r\n                                        <progress value={item.level} max=\"100\"> {item.level}%</progress>\r\n                                    </div>\r\n                                </Card>\r\n                            )\r\n                        })\r\n\r\n                    }\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n", "const mongoose = require('mongoose');\r\n\r\nconst categoriesSchema = mongoose.Schema(\r\n    {\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        relatedTo: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        locale: {\r\n            type: String,\r\n            enum: ['en', 'es'],\r\n            required: true\r\n        }\r\n    },\r\n    {\r\n        toJSON: { virtuals: true },\r\n        toObject: { virtuals: true },\r\n    }\r\n);\r\n\r\nexport default mongoose.models.Categories || mongoose.model(\"Categories\", categoriesSchema);", "import categoriesModel from \"./categories\";\r\nconst mongoose = require('mongoose');\r\n\r\nconst skillsSchema = mongoose.Schema(\r\n    {\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        description: {\r\n            type: String,\r\n        },\r\n        level: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        icon: {\r\n            type: String\r\n        },\r\n        locale: {\r\n            type: String,\r\n            enum: ['en', 'es']\r\n        },\r\n        category: {\r\n            type: mongoose.Schema.Types.ObjectId,\r\n            ref: categoriesModel,\r\n            required: true\r\n        }\r\n    },\r\n    {\r\n        toJSON: { virtuals: true },\r\n        toObject: { virtuals: true },\r\n    }\r\n);\r\n\r\nexport default mongoose.models.Skills || mongoose.model(\"Skills\", skillsSchema);\r\n", "import Skills from '../models/skills';\r\nimport dbConnect from '../utils/dbConnection';\r\n\r\nexport const getSkills = async (props: any) => {\r\n    await dbConnect();\r\n    const skills = await Skills.find({}).where('locale').equals(props.locale).limit(props.limit)\r\n    return skills;\r\n}", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { Card } from \"~/components/Card\";\r\nimport rootStyles from '~/styles/root.css'\r\nimport cardStyle from '~/styles/card.css';\r\nimport { getCerts } from \"~/controllers/certs\";\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Certifications\",\r\n        description:\r\n            \"Learning path\",\r\n    };\r\n};\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: rootStyles },\r\n        { rel: \"stylesheet\", href: cardStyle },\r\n    ]\r\n}\r\n\r\nexport const loader = async () => {\r\n    const [skills] = await Promise.all([\r\n        getCerts({\r\n            locale: \"en\"\r\n        }),\r\n    ])\r\n    return json(skills);\r\n};\r\n\r\nexport default function Index() {\r\n    const certs = useLoaderData<any>();\r\n    return (\r\n        <>\r\n            <main>\r\n                <div className=''>\r\n                    <h1 className=\"\">Certifications</h1>\r\n                    <p>Keeping up with the ever changing technologies and knowledge.</p>\r\n                </div>\r\n                <div className=\"items-container2\">\r\n                    {\r\n                        certs.map((item: any, i: number) => {\r\n                            return (\r\n                                <Card key={i} index={i}>\r\n                                    <img src={\r\n                                        item.icon\r\n                                            ? `https://images.weserv.nl/?url=${item.icon}&w=250&h=250`\r\n                                            : 'https://images.weserv.nl/?url=https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/256x256/plain/symbol_questionmark.png&w=250&h=250'\r\n                                    }\r\n                                        alt={item.name}\r\n                                    />\r\n                                    <h1>{item.name}</h1>\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n", "const mongoose = require('mongoose');\r\n\r\nconst certificationsSchema = mongoose.Schema(\r\n    {\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        description: {\r\n            type: String,\r\n        },\r\n        link: {\r\n            type: String,\r\n        },\r\n        icon: {\r\n            type: String\r\n        },\r\n        locale: {\r\n            type: String,\r\n            enum: ['en', 'es']\r\n        },\r\n    }\r\n);\r\n\r\nexport default mongoose.models.Certifications || mongoose.model(\"Certifications\", certificationsSchema);\r\n", "import Certifications from '../models/certifications';\r\nimport dbConnect from '../utils/dbConnection';\r\n\r\nexport const getCerts = async (props: any) => {\r\n    await dbConnect();\r\n    const certs = await Certifications.find({}).where('locale').equals(props.locale).limit(props.limit)\r\n    return certs;\r\n}", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport { Card } from \"~/components\";\r\nimport { getSkills } from '~/controllers/skills';\r\nimport { getCategories } from '~/controllers/categories';\r\nimport rootStyles from '~/styles/root.css';\r\nimport cardStyle from '~/styles/card.css';\r\nimport { FaArrowDown } from \"react-icons/fa\";\r\nimport { getCerts } from \"~/controllers/certs\";\r\n\r\nexport const meta = () => {\r\n  return {\r\n    title: \"Welcome\",\r\n    description:\r\n      \"Welcome to my portfolio\",\r\n  };\r\n};\r\n\r\nexport function links() {\r\n  return [\r\n    { rel: \"stylesheet\", href: rootStyles },\r\n    { rel: \"stylesheet\", href: cardStyle },\r\n  ]\r\n}\r\n\r\nexport const loader = async () => {\r\n  const [categories, skills, certs] = await Promise.all([\r\n    getCategories({\r\n      locale: \"en\",\r\n      relatedTo: 'skills',\r\n      limit: 2\r\n    }),\r\n    getSkills({\r\n      locale: \"en\"\r\n    }),\r\n    getCerts({\r\n      locale: \"en\",\r\n      limit: 3\r\n    })\r\n  ])\r\n  return json({ categories, skills, certs });\r\n};\r\n\r\nexport default function Index() {\r\n  const { categories, skills, certs } = useLoaderData<any>();\r\n  return (\r\n    <main>\r\n      <div className='welcome curve'>\r\n        <h1 className=\"\">Wachimingo</h1>\r\n        <img\r\n          className=\"profile-pic\"\r\n          src=\"https://media-exp2.licdn.com/dms/image/C5603AQES3-9HfjZVfw/profile-displayphoto-shrink_800_800/0/1657112157152?e=1663200000&v=beta&t=yIGWZeFSz7QTg_7N3SJ6xG-Se1GB_6y16UkouWvONTw\"\r\n          alt=\"profile\"\r\n        />\r\n      </div>\r\n      <div className=\"items-container\">\r\n        {\r\n          // eslint-disable-next-line array-callback-return\r\n          categories.map((cat: any) => {\r\n            if (cat.relatedTo === 'skills') {\r\n              return (\r\n                <section key={cat.name}>\r\n                  <h2 className=\"\">{cat.name}</h2>\r\n                  {\r\n                    skills.filter((skill: any) => skill.category === cat._id).map((item: any, i: number) => {\r\n                      return (\r\n                        <Card key={i} index={i}>\r\n                          <img src={\r\n                            item.icon\r\n                              ? `https://images.weserv.nl/?url=${item.icon}&w=250&h=250`\r\n                              : 'https://images.weserv.nl/?url=https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/256x256/plain/symbol_questionmark.png&w=250&h=250'\r\n                          }\r\n                            alt={item.name}\r\n                          />\r\n                          <div>\r\n                            <h3>{item.name}</h3>\r\n                            <br />\r\n                            <p>\r\n                              {item.description}\r\n                            </p>\r\n                            <progress value={item.level} max=\"100\"> {item.level}%</progress>\r\n                          </div>\r\n                        </Card>\r\n                      )\r\n                    })\r\n                  }\r\n                </section>\r\n              )\r\n            } else return undefined\r\n          })\r\n        }\r\n        <div className=''>\r\n          <div className=''>\r\n            <FaArrowDown />\r\n          </div>\r\n          <Link to={'/skills'} className='btn btn-outline-primary'>\r\n            See More\r\n          </Link>\r\n        </div>\r\n\r\n        <section className=\"\">\r\n          <div className=\"semicircle\">\r\n            <h2 className=''>Certifications</h2>\r\n          </div>\r\n          {\r\n            certs.map((item: any, i: number) => {\r\n              return (\r\n                <Card key={i} index={i}>\r\n                  <img src={\r\n                    item.icon\r\n                      ? `https://images.weserv.nl/?url=${item.icon}&w=250&h=250`\r\n                      : 'https://images.weserv.nl/?url=https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/256x256/plain/symbol_questionmark.png&w=250&h=250'\r\n                  }\r\n                    alt={item.name}\r\n                  />\r\n                  <h3>{item.name}</h3>\r\n                  <br />\r\n                </Card>\r\n              )\r\n            })\r\n          }\r\n          <div className=''>\r\n            <div className=''>\r\n              <FaArrowDown />\r\n            </div>\r\n            <Link to={'/certs'} className='btn btn-outline-primary'>\r\n              See More\r\n            </Link>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n", "import Categories from '../models/categories';\r\nimport dbConnect from '../utils/dbConnection';\r\n\r\nexport const getCategories = async (props: any) => {\r\n    await dbConnect();\r\n    const categories = await Categories.find().where('locale').equals(props.locale).where('relatedTo').equals(props.relatedTo).limit(props.limit)\r\n    return categories;\r\n}", "export default {'version':'f7ebed62','entry':{'module':'/build/entry.client-CZUFCGYX.js','imports':['/build/_shared/chunk-7FSECQX2.js','/build/_shared/chunk-KIPHPC4D.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-KCMYZ5NB.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index':{'id':'routes/__index','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index-FMB7BUS2.js','imports':['/build/_shared/chunk-P4TOQTV7.js','/build/_shared/chunk-2Z2IQIQF.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/auth/$action':{'id':'routes/__index/auth/$action','parentId':'routes/__index','path':'auth/:action','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/auth/$action-FBIHBLIN.js','imports':['/build/_shared/chunk-IZBEPVZD.js','/build/_shared/chunk-UDOZW62G.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/certs':{'id':'routes/__index/certs','parentId':'routes/__index','path':'certs','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/certs-RXPJZCFE.js','imports':['/build/_shared/chunk-JOMQK57N.js','/build/_shared/chunk-HCSR4HM7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/index':{'id':'routes/__index/index','parentId':'routes/__index','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__index/index-H3QWY2IF.js','imports':['/build/_shared/chunk-JOMQK57N.js','/build/_shared/chunk-HCSR4HM7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/projects/index':{'id':'routes/__index/projects/index','parentId':'routes/__index','path':'projects','index':true,'caseSensitive':undefined,'module':'/build/routes/__index/projects/index-AIKRTPP4.js','imports':['/build/_shared/chunk-HCSR4HM7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/projects/restaurant':{'id':'routes/__index/projects/restaurant','parentId':'routes/__index','path':'projects/restaurant','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/projects/restaurant-L5OOY5KC.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/projects/restaurant/billing/$transaction':{'id':'routes/__index/projects/restaurant/billing/$transaction','parentId':'routes/__index/projects/restaurant','path':'billing/:transaction','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/projects/restaurant/billing/$transaction-MP3RIADR.js','imports':['/build/_shared/chunk-RRCTTVPE.js','/build/_shared/chunk-HCSR4HM7.js','/build/_shared/chunk-2Z2IQIQF.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__index/projects/restaurant/catalog':{'id':'routes/__index/projects/restaurant/catalog','parentId':'routes/__index/projects/restaurant','path':'catalog','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/projects/restaurant/catalog-55OZBIAX.js','imports':['/build/_shared/chunk-UDOZW62G.js','/build/_shared/chunk-RRCTTVPE.js','/build/_shared/chunk-HCSR4HM7.js','/build/_shared/chunk-2Z2IQIQF.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__index/projects/restaurant/index':{'id':'routes/__index/projects/restaurant/index','parentId':'routes/__index/projects/restaurant','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__index/projects/restaurant/index-IFRCTPI4.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/projects/restaurant/orders/$status':{'id':'routes/__index/projects/restaurant/orders/$status','parentId':'routes/__index/projects/restaurant','path':'orders/:status','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/projects/restaurant/orders/$status-BIBKAHA6.js','imports':['/build/_shared/chunk-HCSR4HM7.js','/build/_shared/chunk-2Z2IQIQF.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/skills':{'id':'routes/__index/skills','parentId':'routes/__index','path':'skills','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/skills-VDAETTKE.js','imports':['/build/_shared/chunk-JOMQK57N.js','/build/_shared/chunk-HCSR4HM7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/user/$email':{'id':'routes/api/user/$email','parentId':'root','path':'api/user/:email','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/user/$email-ESYXYYTX.js','imports':['/build/_shared/chunk-IZBEPVZD.js','/build/_shared/chunk-P4TOQTV7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true}},'url':'/build/manifest-F7EBED62.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\api\\\\user\\\\$email.tsx\";\nimport * as route2 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index.tsx\";\nimport * as route3 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\projects\\\\restaurant.tsx\";\nimport * as route4 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\projects\\\\restaurant\\\\billing\\\\$transaction.tsx\";\nimport * as route5 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\projects\\\\restaurant\\\\orders\\\\$status.tsx\";\nimport * as route6 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\projects\\\\restaurant\\\\catalog.tsx\";\nimport * as route7 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\projects\\\\restaurant\\\\index.tsx\";\nimport * as route8 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\projects\\\\index.tsx\";\nimport * as route9 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\auth\\\\$action.tsx\";\nimport * as route10 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\skills.tsx\";\nimport * as route11 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\certs.tsx\";\nimport * as route12 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/api/user/$email\": {\n      id: \"routes/api/user/$email\",\n      parentId: \"root\",\n      path: \"api/user/:email\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/__index\": {\n      id: \"routes/__index\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/__index/projects/restaurant\": {\n      id: \"routes/__index/projects/restaurant\",\n      parentId: \"routes/__index\",\n      path: \"projects/restaurant\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/__index/projects/restaurant/billing/$transaction\": {\n      id: \"routes/__index/projects/restaurant/billing/$transaction\",\n      parentId: \"routes/__index/projects/restaurant\",\n      path: \"billing/:transaction\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/__index/projects/restaurant/orders/$status\": {\n      id: \"routes/__index/projects/restaurant/orders/$status\",\n      parentId: \"routes/__index/projects/restaurant\",\n      path: \"orders/:status\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/__index/projects/restaurant/catalog\": {\n      id: \"routes/__index/projects/restaurant/catalog\",\n      parentId: \"routes/__index/projects/restaurant\",\n      path: \"catalog\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/__index/projects/restaurant/index\": {\n      id: \"routes/__index/projects/restaurant/index\",\n      parentId: \"routes/__index/projects/restaurant\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/__index/projects/index\": {\n      id: \"routes/__index/projects/index\",\n      parentId: \"routes/__index\",\n      path: \"projects\",\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/__index/auth/$action\": {\n      id: \"routes/__index/auth/$action\",\n      parentId: \"routes/__index\",\n      path: \"auth/:action\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/__index/skills\": {\n      id: \"routes/__index/skills\",\n      parentId: \"routes/__index\",\n      path: \"skills\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/__index/certs\": {\n      id: \"routes/__index/certs\",\n      parentId: \"routes/__index\",\n      path: \"certs\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/__index/index\": {\n      id: \"routes/__index/index\",\n      parentId: \"routes/__index\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    }\n  };"],
  "mappings": "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",
  "names": []
}
