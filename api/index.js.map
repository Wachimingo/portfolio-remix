{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\root.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\api\\user\\$email.tsx", "../app/controllers/auth.ts", "../app/models/user.ts", "../app/utils/dbConnection.ts", "../app/controllers/mail.ts", "../app/controllers/errors.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index.tsx", "../app/components/common/Modal.tsx", "../app/components/common/Card.tsx", "../app/components/common/Footer.tsx", "../app/components/common/NavBar.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\admin\\Skills.tsx", "../app/controllers/skills.ts", "../app/models/categories.ts", "../app/models/skills.ts", "../app/components/skills/card.tsx", "../app/components/skills/modal.tsx", "../app/controllers/categories.ts", "../app/utils/cookie.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\auth\\$action.tsx", "../app/components/auth/form.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\admin\\Certs.tsx", "../app/components/certs/card.tsx", "../app/components/certs/modal.tsx", "../app/controllers/certs.ts", "../app/models/certifications.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\Projects.tsx", "../app/controllers/projects.ts", "../app/models/projects.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\Skills.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\Certs.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\index.tsx", "../app/components/landingPage/seeMoreLink.tsx", "../app/components/skills/list.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport type { EntryContext } from \"@remix-run/node\";\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  let markup = renderToString(\r\n    <RemixServer context={remixContext} url={request.url} />\r\n  );\r\n\r\n  responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n  return new Response(\"<!DOCTYPE html>\" + markup, {\r\n    status: responseStatusCode,\r\n    headers: responseHeaders,\r\n  });\r\n}\r\n", "import {\r\n  Links,\r\n  Meta,\r\n  Outlet,\r\n} from \"@remix-run/react\";\r\nimport type { MetaFunction, LinksFunction } from \"@remix-run/node\";\r\nimport type { FC } from \"react\";\r\nimport appStyle from '~/styles/min/app.css';\r\nimport navBarStyle from '~/styles/min/navbar.css';\r\nimport footerStyle from '~/styles/min/footer.css';\r\n\r\nexport const meta: MetaFunction = () => ({\r\n  charset: \"utf-8\",\r\n  title: \"Portfolio\",\r\n  viewport: \"width=device-width,initial-scale=1\",\r\n});\r\n\r\n\r\nexport const links: LinksFunction = () => {\r\n  return [\r\n    { rel: \"stylesheet\", href: appStyle, media: process.env.MEDIA_CSS },\r\n    { rel: \"stylesheet\", href: navBarStyle, media: process.env.MEDIA_CSS },\r\n    { rel: \"stylesheet\", href: footerStyle, media: process.env.MEDIA_CSS },\r\n  ]\r\n}\r\n\r\nexport const App: FC = () => {\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Outlet />\r\n      </body>\r\n    </html >\r\n  );\r\n}\r\nexport default App;", "import { useEffect } from \"react\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport { activateUser } from \"~/controllers/auth\";\r\nimport authStyles from \"~/styles/auth.css\";\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: authStyles }\r\n    ]\r\n}\r\n\r\nexport const loader = async ({ params }: any) => {\r\n    const user = await activateUser(params.email);\r\n    return json(user);\r\n}\r\n\r\nexport function ErrorBoundary({ error }: any) {\r\n    return (\r\n        <html>\r\n            <head>\r\n                <title>Oh no!</title>\r\n            </head>\r\n            <body>\r\n            </body>\r\n        </html>\r\n    );\r\n}\r\n\r\nconst EmailConfirmation = () => {\r\n    const result = useLoaderData<any>();\r\n    useEffect(() => {\r\n        if (result) {\r\n            if (result.error) return undefined\r\n            Cookies.set('name', result.user?.name);\r\n            Cookies.set('email', result.user?.email);\r\n            Cookies.set('token', result.user.token);\r\n            Cookies.set('role', result.user?.role);\r\n        }\r\n    })\r\n    return (\r\n        <section>\r\n            {\r\n                result.error\r\n                    ? <>\r\n                        <p>{result.error}</p>\r\n                        <Link to=\"/\">Go to Home</Link>\r\n                    </>\r\n                    : <>\r\n                        <p>Thanks for confirming your account.</p>\r\n                        <p>You can close this page.</p>\r\n                        <Link to=\"/\">Go to Home</Link>\r\n                    </>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EmailConfirmation;", "import { json } from \"@remix-run/node\";\r\nimport User from '~/models/user';\r\nimport dbConnect from '~/utils/dbConnection';\r\nimport mail from '~/controllers/mail';\r\nimport { requestErrorHandler } from './errors';\r\nconst bcrypt = require('bcryptjs');\r\n\r\nexport const activateUser = async (email: string) => {\r\n    try {\r\n        await dbConnect();\r\n        const jwt = require('jsonwebtoken');\r\n        const user = await User.findOneAndUpdate({ email }, { isActive: true }).select('name email role isActive');\r\n        if (!user) throw 'Not Found'\r\n        if (user.isActive) throw 'Cannot re-use link'\r\n        user.isActive = undefined;\r\n        const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, {\r\n            expiresIn: process.env.JWT_EXPIRES_IN,\r\n        });\r\n        return { user, token };\r\n    } catch (error) {\r\n        return { error, status: \"error\" }\r\n    }\r\n}\r\n\r\nexport const actions: any = {\r\n    \"POST\": async ({ params, ...props }) => {\r\n        try {\r\n            await dbConnect();\r\n            const jwt = require('jsonwebtoken');\r\n            if (params.action === 'signin') {\r\n                const user = await User.findOne({ email: props.email }).select('+password');\r\n\r\n                if (!user || user.password === undefined || !(await user.correctPassword(props.password, user.password))) {\r\n                    return json({ status: 'error', message: 'User doesn\\'t exists' }, { status: 404 });\r\n                }\r\n                //remove password from output\r\n                user.password = undefined;\r\n                const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, {\r\n                    expiresIn: process.env.JWT_EXPIRES_IN,\r\n                });\r\n                return json({ status: 'success', user, token }, { status: 200 });\r\n            }\r\n            if (params.action === 'signup') {\r\n                if (props.password !== props.confirmPassword) throw \"Passwords don't match\";\r\n                const [, pass] = await Promise.all([dbConnect(), bcrypt.hash(props.password, 2)])\r\n                const newUser = new User({\r\n                    name: props.name,\r\n                    email: props.email,\r\n                    password: pass,\r\n                    role: 'user',\r\n                    isActive: false,\r\n                    externalId: stripeUser.id\r\n                })\r\n                await newUser.save();\r\n                mail(props.email).catch(console.error);\r\n                return json({ status: 'success', message: 'Success', user: {} }, { status: 201 });\r\n            }\r\n            return json({});\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    }\r\n}", "const mongoose = require('mongoose');\r\nconst validator = require('validator');\r\nconst bcrypt = require('bcryptjs');\r\nconst userSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: [true, 'Por favor ingrese un nombre de usuario'],\r\n    },\r\n    email: {\r\n        type: String,\r\n        required: [true, 'Por favor ingrese un correo'],\r\n        unique: true,\r\n        lowercase: true,\r\n        validate: [validator.isEmail, 'Por favor ingrese un correo valido'],\r\n    },\r\n    tn: {\r\n        type: String,\r\n        maxlength: [8, 'El telefono debe tener 8 digitos'],\r\n    },\r\n    photo: String,\r\n    password: {\r\n        type: String,\r\n        required: [true, 'Por favor ingrese una clave'],\r\n        minlength: 4,\r\n        select: false,\r\n    },\r\n    passwordChangedAt: Date,\r\n    role: {\r\n        type: String,\r\n        enum: ['user', 'helper', 'admin'],\r\n        default: 'user',\r\n    },\r\n    balance: {\r\n        type: Number,\r\n        default: 0\r\n    },\r\n    isActive: {\r\n        type: Boolean,\r\n        default: true,\r\n        select: false,\r\n    },\r\n    isValidated: {\r\n        type: Boolean,\r\n        default: false,\r\n        select: false,\r\n    },\r\n    canBorrow: {\r\n        type: Boolean,\r\n        default: false,\r\n    },\r\n    externalId: {\r\n        type: String,\r\n    }\r\n});\r\n\r\n// userSchema.pre('save', async function (next: any) {\r\n//     //Only run if password has changed\r\n//     // if (!userSchema.isModified('password')) return next;\r\n//     //Hash the password with bcrypt\r\n//     userSchema.password = await bcrypt.hash(userSchema.password, 2);\r\n//     //Delete passwordConfirm field, to not be save in DB\r\n//     // userSchema.passwordConfirm = undefined;\r\n//     next();\r\n// });\r\n\r\nuserSchema.pre(/^'find'/, function (next: any) {\r\n    userSchema.find({ active: { $ne: false } });\r\n    next();\r\n});\r\n\r\nuserSchema.methods.correctPassword = async function (\r\n    inputPassword: any,\r\n    userPassword: any\r\n) {\r\n    return await bcrypt.compare(inputPassword, userPassword);\r\n};\r\n\r\n// userSchema.methods.changedPasswordAfter = function (JWTTimestamp: any) {\r\n//     if (userSchema.passwordChangedAt) {\r\n//         const changedTimestamp = parseInt(\r\n//             userSchema.passwordChangedAt.getTime() / 1000,\r\n//             10\r\n//         );\r\n//         return JWTTimestamp < changedTimestamp;\r\n//     }\r\n\r\n//     return false;\r\n// };\r\n\r\nexport default mongoose.models.User || mongoose.model('User', userSchema);\r\n", "// /lib/dbConnect.js\r\nimport mongoose from 'mongoose'\r\n\r\n/** \r\nSource : \r\nhttps://github.com/vercel/next.js/blob/canary/examples/with-mongodb-mongoose/utils/dbConnect.js \r\n**/\r\n\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\r\n    'Please define the MONGODB_URI environment variable inside .env.local'\r\n  )\r\n}\r\n\r\n/**\r\n * Global is used here to maintain a cached connection across hot reloads\r\n * in development. This prevents connections growing exponentially\r\n * during API Route usage.\r\n */\r\n//@ts-ignore\r\nlet cached = global.mongoose\r\n\r\nif (!cached) {\r\n  //@ts-ignore\r\n  cached = global.mongoose = { conn: null, promise: null }\r\n}\r\n\r\nasync function dbConnect() {\r\n  if (cached.conn) {\r\n    return cached.conn\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    const opts = {\r\n      useNewUrlParser: true,\r\n      useUnifiedTopology: true,\r\n    }\r\n    //@ts-ignore\r\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then(mongoose => {\r\n      return mongoose\r\n    })\r\n  }\r\n  cached.conn = await cached.promise\r\n  return cached.conn\r\n}\r\n\r\nexport default dbConnect;\r\n", "const nodemailer = require(\"nodemailer\");\r\n\r\n// async..await is not allowed in global scope, must use a wrapper\r\nasync function mail(sentTo: string) {\r\n    // Generate test SMTP service account from ethereal.email\r\n    // Only needed if you don't have a real mail account for testing\r\n    // let testAccount = await nodemailer.createTestAccount();\r\n\r\n    // create reusable transporter object using the default SMTP transport\r\n    let transporter = nodemailer.createTransport({\r\n        host: process.env.EMAIL_HOST,\r\n        port: process.env.EMAIL_PORT,\r\n        secure: false, // true for 465, false for other ports\r\n        auth: {\r\n            user: process.env.EMAIL_USER,\r\n            pass: process.env.EMAIL_PASS,\r\n        },\r\n    });\r\n    // let transporter = nodemailer.createTransport({\r\n    //     host: \"smtp.ethereal.email\",\r\n    //     port: 587,\r\n    //     secure: false, // true for 465, false for other ports\r\n    //     auth: {\r\n    //         user: testAccount.user, // generated ethereal user\r\n    //         pass: testAccount.pass, // generated ethereal password\r\n    //     },\r\n    // });\r\n\r\n    let link = 'https://wachimingo.vercel.app/api/user/'\r\n    // send mail with defined transport object\r\n    let info = await transporter.sendMail({\r\n        from: process.env.EMAIL_FROM, // sender address\r\n        to: sentTo, // list of receivers\r\n        subject: \"Confirm your account\", // Subject line\r\n        text: \"Finish Sign Up\", // plain text body\r\n        html: `<h1>Finish Sign Up</h1>\r\n        <p>Click the link below to active your account</p>\r\n        <a>${link + sentTo}</a>`, // html body\r\n    });\r\n\r\n    console.log(\"Message sent: %s\", info.messageId);\r\n    // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\r\n\r\n    // Preview only available when sending through an Ethereal account\r\n    // console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\r\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\r\n}\r\n\r\n// mail().catch(console.error);\r\n\r\nexport default mail;", "export const requestErrorHandler = (error: any) => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n        throw new Error('Ups, something when wrong...');\r\n    } else {\r\n        throw new Error(error);\r\n    }\r\n}", "import { Outlet } from \"@remix-run/react\";\r\nimport type { FC } from \"react\";\r\nimport { NavBar, Footer } from \"~/components\";\r\n\r\nconst Portfolio: FC = () => {\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <Outlet />\r\n            <Footer />\r\n            {\r\n                process.env.NODE_ENV === 'development'\r\n                    //@ts-ignore\r\n                    ? <script defer={true} src='/scripts/index.js' media={process.env.MEDIA_CSS} />\r\n                    //@ts-ignore\r\n                    : <script defer={true} src='/scripts/min/index-min.js' media={process.env.MEDIA_CSS} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Portfolio;", "import type { ReactChild } from 'react';\r\n\r\ntype Props = {\r\n    children?: ReactChild | ReactChild[],\r\n    id?: string,\r\n    props?: {}\r\n}\r\n\r\nexport const Modal = ({ children, id = 'default', ...props }: Props) => {\r\n    return (\r\n        <div className=\"modal-container none\" id={`${id}-modal`}>\r\n            <div className=\"modal-content\">\r\n                <span className=\"modal-close-btn\">\r\n                    &times;\r\n                </span>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}", "import type { ReactChild } from \"react\";\r\n\r\ntype Props = {\r\n    children?: ReactChild | ReactChild[],\r\n    props?: {}\r\n}\r\n\r\nexport const Card = ({ children, ...props }: Props) => {\r\n    return (\r\n        <div className=\"card-wrapper\" {...props}>\r\n            <div className=\"card-container\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}", "import { FaFacebookF, FaGithubAlt, FaLinkedinIn, FaRegEnvelope } from \"react-icons/fa\";\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"footer-wrapper\">\r\n            <div className=\"footer-container\">\r\n                <section className=\"social-media\">\r\n                    <a href=\"https://www.facebook.com/halex007/\" target=\"_blank\" rel='noreferrer' role=\"button\">\r\n                        <FaFacebookF />\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/in/joshua-guillen-755143a7/\" target=\"_blank\" rel='noreferrer' role=\"button\">\r\n                        <FaLinkedinIn />\r\n                    </a>\r\n                    <a href=\"https://github.com/Wachimingo\" target=\"_blank\" rel='noreferrer' role=\"button\">\r\n                        <FaGithubAlt />\r\n                    </a>\r\n                </section>\r\n                <a href=\"mailto: joshua.herrera2@outlook.com\">\r\n                    <FaRegEnvelope /> joshua.herrera2@outlook.com\r\n                </a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}", "\r\nimport { Link } from \"@remix-run/react\";\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <div\r\n                id=\"hamburger-menu\"\r\n                className=\"hamburger-menu\"\r\n            >\r\n                <div className=\"ham-divs\" />\r\n                <div className=\"ham-divs\" />\r\n                <div className=\"ham-divs\" />\r\n            </div>\r\n            <div\r\n                id=\"menu-child-div\"\r\n                className='menu-child-div navbar-item-none'\r\n            >\r\n                <Link className=\"link\" to=\"/\">Home</Link>\r\n                <Link className=\"link\" to=\"/projects\">Projects</Link>\r\n                <Link className=\"link\" to=\"/skills\">Skills</Link>\r\n                <Link className=\"link\" to=\"/certs\">Certifications</Link>\r\n            </div>\r\n            <div\r\n                id=\"menu-child-div\"\r\n                className='menu-child-div navbar-item-none'\r\n            >\r\n                <Link id='signup' className=\"link\" to=\"/auth/signup\">Sign Up</Link>\r\n                <Link id='login_logout' className=\"link\" to=\"/auth/signin\">Sign In</Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n", "import { json } from '@remix-run/node';\r\nimport { useLoaderData } from '@remix-run/react';\r\nimport { actions, getSkills } from '~/controllers/skills';\r\nimport { adminSkillCard as Card } from '~/components/skills/card';\r\nimport Modal from '~/components/skills/modal';\r\nimport { getCategories } from '~/controllers/categories';\r\nimport type { Category, Skill } from '~/types/skillsAndCerts';\r\nimport type { LinksFunction, LoaderFunction, ActionFunction, ErrorBoundaryComponent } from '@remix-run/node';\r\nimport type { FC } from \"react\";\r\nimport rootStyles from '~/styles/min/root.css';\r\nimport formStyles from '~/styles/min/form.css';\r\nimport cardStyles from '~/styles/min/card.css';\r\nimport { getCookie } from '~/utils/cookie';\r\n\r\nexport const links: LinksFunction = () => {\r\n    return [\r\n        { rel: \"stylesheet\", href: rootStyles, media: process.env.MEDIA_CSS },\r\n        { rel: \"stylesheet\", href: cardStyles, media: process.env.MEDIA_CSS },\r\n        { rel: \"stylesheet\", href: formStyles, media: process.env.MEDIA_CSS },\r\n    ]\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n    const cookie = request.headers.get(\"cookie\");\r\n    const name = getCookie(\"name\", cookie);\r\n    const token = getCookie(\"token\", cookie);\r\n\r\n    if (name === 'Joshua Herrera' && token) {\r\n        const skills = await getSkills({\r\n            locale: 'en'\r\n        });\r\n        const categories = await getCategories({\r\n            locale: \"en\",\r\n            relatedTo: 'skills',\r\n        });\r\n        return json({ skills, categories })\r\n    }\r\n    throw new Error('No authorize user');\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n    const url = new URL(request.url);\r\n\r\n    const method: string = url.searchParams.get(\"method\")?.toUpperCase() ?? 'none';\r\n\r\n    if (!actions[method]) return json({});\r\n    let formData: any;\r\n    let data: any = {\r\n        _id: url.searchParams.get(\"_id\"),\r\n        locale: 'en'\r\n    };\r\n\r\n    try {\r\n        formData = await request?.formData();\r\n        for (const pair of formData.entries()) {\r\n            data[pair[0]] = pair[1]\r\n        }\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n    return await actions[method](data);\r\n}\r\n\r\nexport const ErrorBoundary: ErrorBoundaryComponent = ({ error }) => {\r\n    return (\r\n        <main>\r\n            <h1>{error.message}</h1>\r\n        </main>\r\n    );\r\n}\r\n\r\ntype Loader = {\r\n    skills: Skill[],\r\n    categories: Category[],\r\n}\r\n\r\nconst Skills: FC = () => {\r\n    const { skills, categories } = useLoaderData<Loader>();\r\n\r\n    const List = skills.map((skill: Skill) => {\r\n        return <Card key={skill.name} skill={skill} />\r\n    })\r\n\r\n    const renderScript = () => {\r\n        if (process.env.NODE_ENV === 'development') return <script defer={true} src='/scripts/skills.js' />;\r\n\r\n        return <script defer={true} src='/scripts/min/skills-min.js' />\r\n    }\r\n\r\n    return <>\r\n        <main>\r\n            <h1>Manage skills</h1>\r\n        </main>\r\n        <section className='items-container2'>\r\n            {List}\r\n            <button id='addNewSkillBtn' type='button' className=\"bubble-btn\">+</button>\r\n        </section>\r\n        {renderScript()}\r\n        <Modal categories={categories} />\r\n    </>\r\n}\r\n\r\nexport default Skills;", "import { json } from '@remix-run/node';\r\nimport Skills from '../models/skills';\r\nimport dbConnect from '../utils/dbConnection';\r\nimport { requestErrorHandler } from './errors';\r\n\r\nexport const getSkills = async (props: any) => {\r\n    await dbConnect();\r\n    const skills = await Skills.find({}).where('locale').equals(props.locale).limit(props.limit)\r\n    return skills;\r\n}\r\n\r\nexport const actions: any = {\r\n    \"POST\": async (data) => {\r\n        try {\r\n            data._id = undefined;\r\n            await dbConnect();\r\n            const newSkill = await Skills.create(data);\r\n            return json({ status: 'success', message: 'Posted succesfully', skill: newSkill }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"PATCH\": async ({ _id, ...props }) => {\r\n        try {\r\n            await dbConnect();\r\n            const updatedSkill = await Skills.findByIdAndUpdate(_id, props);\r\n            if (!updatedSkill) throw new Error('Not found');\r\n            return json({ status: 'success', message: 'Posted succesfully', skill: updatedSkill }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"DELETE\": async ({ _id }) => {\r\n        try {\r\n            await dbConnect();\r\n            await Skills.findByIdAndDelete(_id)\r\n            return json({ message: 'success' }, { status: 204 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    }\r\n}", "const mongoose = require('mongoose');\r\n\r\nconst categoriesSchema = mongoose.Schema(\r\n    {\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        relatedTo: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        locale: {\r\n            type: String,\r\n            enum: ['en', 'es'],\r\n            required: true\r\n        }\r\n    },\r\n    {\r\n        toJSON: { virtuals: true },\r\n        toObject: { virtuals: true },\r\n    }\r\n);\r\n\r\nexport default mongoose.models.Categories || mongoose.model(\"Categories\", categoriesSchema);", "import categoriesModel from \"./categories\";\r\nconst mongoose = require('mongoose');\r\n\r\nconst skillsSchema = mongoose.Schema(\r\n    {\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        description: {\r\n            type: String,\r\n        },\r\n        level: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        icon: {\r\n            type: String\r\n        },\r\n        locale: {\r\n            type: String,\r\n            enum: ['en', 'es']\r\n        },\r\n        category: {\r\n            type: mongoose.Schema.Types.ObjectId,\r\n            ref: categoriesModel,\r\n            required: true\r\n        }\r\n    },\r\n    {\r\n        toJSON: { virtuals: true },\r\n        toObject: { virtuals: true },\r\n    }\r\n);\r\n\r\nexport default mongoose.models.Skills || mongoose.model(\"Skills\", skillsSchema);\r\n", "/* eslint-disable react/display-name */\r\nimport type { ReactChild } from \"react\";\r\nimport type { Skill } from \"~/types/skillsAndCerts\";\r\nimport { Card } from \"../common/Card\";\r\nimport { FaCog, FaTrash } from \"react-icons/fa\";\r\n\r\ntype Props = {\r\n    children?: ReactChild | ReactChild[],\r\n    skill: Skill,\r\n}\r\n\r\nexport const SkillCardTemplate = () => {\r\n    return <Card>\r\n        <img\r\n            loading=\"lazy\"\r\n            src=\"\"\r\n            alt=\"\"\r\n            width=\"150px\"\r\n            height=\"150px\"\r\n        />\r\n        <div>\r\n            <h1></h1>\r\n            <p>\r\n            </p>\r\n            <progress value={0} max=\"100\">0%</progress>\r\n        </div>\r\n    </Card>\r\n}\r\n\r\n\r\nconst SkillCard = ({ children, skill, ...props }: Props) => {\r\n    return <Card key={skill.name}>\r\n        <img\r\n            loading=\"lazy\"\r\n            src={skill.icon ? skill.icon : '/assets/skills/default.webp'}\r\n            alt={skill.name}\r\n            width=\"150px\"\r\n            height=\"150px\"\r\n        />\r\n        <div>\r\n            <h1>{skill.name}</h1>\r\n            <p>\r\n                {skill.description}\r\n            </p>\r\n            <progress value={skill.level} max=\"100\"> {skill.level}%</progress>\r\n        </div>\r\n        <>\r\n            {children}\r\n        </>\r\n    </Card>\r\n}\r\n\r\nexport const adminSkillCard = ({ skill }: Props) => {\r\n    return <SkillCard skill={skill}>\r\n        <FaCog\r\n            id={`${skill.name}_modify_btn`}\r\n            className='card-modify-btn'\r\n            data-skill-id={skill._id}\r\n            data-skill-name={skill.name}\r\n            data-skill-description={skill.description}\r\n            data-skill-category={skill.category}\r\n            data-skill-level={skill.level}\r\n            data-skill-icon={skill.icon}\r\n        >\r\n            Modify\r\n        </FaCog>\r\n        <FaTrash\r\n            id={`${skill.name}_remove_btn`}\r\n            className='card-remove-btn'\r\n            data-skill-id={skill._id}\r\n        >\r\n            Remove\r\n        </FaTrash>\r\n    </SkillCard>\r\n}\r\n\r\nexport default SkillCard;", "/* eslint-disable react/display-name */\r\nimport { Form } from \"@remix-run/react\";\r\nimport { Modal } from \"~/components\";\r\n\r\nexport default ({ categories }) => {\r\n    return <Modal id='skills'>\r\n        <h1 id='formTitle'></h1>\r\n        <Form id='skillsForm' method=\"post\" action=\"/admin/skills\" className=\"gray\">\r\n            <section>\r\n                <div>\r\n                    <label htmlFor=\"skillNameInput\" className=\"form-label\">Skill Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"name\"\r\n                        id=\"skillNameInput\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"skillDescriptionInput\" className=\"form-label\">Description</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"description\"\r\n                        id=\"skillDescriptionInput\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"skillCategoriesInput\" className=\"form-label\">Category</label>\r\n                    <select id='skillCategoriesInput' name=\"category\">\r\n                        {categories.map(cat => <option key={cat._id} value={cat._id}>{cat.name}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"skillLevelInput\" className=\"form-label\">Level</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        name=\"level\"\r\n                        id=\"skillLevelInput\"\r\n                        max={100}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"skillIconInput\" className=\"form-label\">Image</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"skillIconInput\"\r\n                        name=\"icon\"\r\n                    />\r\n                    <div id=\"imageHelp\" className=\"form-text\">Please search for images online</div>\r\n                    <img src='' id=\"imgPreview\" alt=\"preview\" width={100} height={100} />\r\n                </div>\r\n                <input type=\"text\" name=\"_id\" id='skillIdInput' style={{ display: \"none\" }} />\r\n            </section>\r\n            <div className=\"form-controls\">\r\n                <button\r\n                    id='formCancelBtn'\r\n                    type=\"button\"\r\n                    className=\"form-cancel-button\"\r\n                >\r\n                    Cancel\r\n                </button>\r\n                <input id='formSubmitBtn' type=\"submit\" value='Submit' />\r\n            </div>\r\n        </Form>\r\n    </Modal>\r\n};", "import Categories from '../models/categories';\r\nimport dbConnect from '../utils/dbConnection';\r\n\r\nexport const getCategories = async (props: any) => {\r\n    await dbConnect();\r\n    const categories = await Categories.find().where('locale').equals(props.locale).where('relatedTo').equals(props.relatedTo).limit(props.limit)\r\n    return categories;\r\n}", "export const getCookie = (cname: string | null, cookie: string | null) => {\r\n    let name = cname + \"=\";\r\n    let decodedCookie = decodeURIComponent(cookie ?? '');\r\n    let ca = decodedCookie.split(';');\r\n    for (let i = 0; i < ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n", "import { json } from \"@remix-run/node\";\r\nimport { useActionData, useLoaderData } from '@remix-run/react';\r\nimport type { MetaFunction, LinksFunction, LoaderFunction, ActionFunction } from '@remix-run/node';\r\nimport type { FC } from \"react\";\r\nimport AuthForm from \"~/components/auth/form\";\r\nimport { actions } from \"~/controllers/auth\";\r\nimport authStyles from \"~/styles/min/auth.css\";\r\nimport formStyles from \"~/styles/min/form.css\";\r\n\r\n// export const handle = { hydrate: true };\r\n\r\nexport const meta: MetaFunction = () => {\r\n    return {\r\n        title: \"Wachimingo | Auth\",\r\n        description:\r\n            \"User authentication to use this site features\",\r\n    };\r\n};\r\n\r\nexport const links: LinksFunction = () => {\r\n    return [\r\n        { rel: \"stylesheet\", href: authStyles, media: process.env.MEDIA_CSS },\r\n        { rel: \"stylesheet\", href: formStyles, media: process.env.MEDIA_CSS },\r\n    ]\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ params }: any) => {\r\n    return json(params)\r\n}\r\n\r\n\r\nexport const action: ActionFunction = async ({ request, params }) => {\r\n    /* Taking the form data from the request and putting it into an object. */\r\n    const body = await request.formData();\r\n    const data: any = { params };\r\n\r\n    for (const pair of body.entries()) {\r\n        data[pair[0]] = pair[1]\r\n    }\r\n\r\n    const handler = actions[request.method];\r\n    if (!handler) return json({ status: \"error\", message: \"No method or action found\" }, { status: 404 });\r\n    //Properties for the object are HTTP methods (POST,PUT,DELETE)\r\n    return await actions[request.method](data);\r\n    // return json({})\r\n}\r\n\r\nconst Auth: FC = () => {\r\n    const data = useLoaderData();\r\n    const result = useActionData();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"items-container\">\r\n                {AuthForm(data.action)}\r\n            </div>\r\n            {process.env.NODE_ENV === 'development'\r\n                ? <script\r\n                    defer={true}\r\n                    //@ts-ignore\r\n                    action={data?.action}\r\n                    status={result?.status}\r\n                    user={JSON.stringify(result?.user)}\r\n                    token={result?.token}\r\n                    src='/scripts/auth.js'\r\n                />\r\n                : <script\r\n                    defer={true}\r\n                    //@ts-ignore\r\n                    action={data?.action}\r\n                    status={result?.status}\r\n                    src='/scripts/min/auth-min.js'\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n", "/* eslint-disable react/display-name */\r\nimport { Form, Link } from \"@remix-run/react\";\r\n\r\nconst renderForm: any = {\r\n    \"signin\": (action: string, title: string) => {\r\n        return (\r\n            <Form method=\"post\" action='/auth/signin' className=\"dark form-width-90vw\">\r\n                <h1>{title}</h1>\r\n                <p >Please enter your login and password!</p>\r\n                <div>\r\n                    <input\r\n                        type=\"email\"\r\n                        name='email'\r\n                        id=\"email\"\r\n                        required={true}\r\n                    />\r\n                    <label htmlFor=\"email\">Email</label>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        required={true}\r\n                    />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                </div>\r\n                <div>\r\n                    <p>Don't have an account? <Link to=\"/auth/signup\">Sign Up</Link></p>\r\n                </div>\r\n                <div>\r\n                    <input type=\"submit\" value='Login' />\r\n                </div>\r\n            </Form>\r\n        )\r\n    },\r\n    \"signup\": (action: string, title: string) => {\r\n        return (\r\n            <Form method=\"post\" action='/auth/signup' className=\"dark form-width-90vw\">\r\n                <h2>{title}</h2>\r\n                <p>Please enter your login and password!</p>\r\n                <div>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name='name'\r\n                        id=\"name\"\r\n                        required={true}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name='email'\r\n                        id=\"email\"\r\n                        required={true}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        required={true}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        id=\"confirmPassword\"\r\n                        required={true}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input type=\"submit\" value='Sign Up' />\r\n                </div>\r\n            </Form>\r\n        )\r\n    },\r\n    \"confirmationEmailSent\": (action: string) => {\r\n        return (\r\n            <div>\r\n                <h1>Confirmation email sent.</h1>\r\n            </div>\r\n        )\r\n    },\r\n    \"logout\": (action: string, title: string) => {\r\n        return (\r\n            <div>\r\n                <h2>{title}</h2>\r\n                <h3>You've been logged off.</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (action: string) => {\r\n    const title = action.charAt(0).toUpperCase() + action.slice(1);\r\n    if (!action) return <>No action provided</>\r\n    const handler = renderForm[action]\r\n    if (!handler) return <>Not found</>\r\n    return renderForm[action](action, title)\r\n}", "import { json } from '@remix-run/node';\r\nimport { useLoaderData } from '@remix-run/react';\r\nimport { AdminCertCard as Card } from '~/components/certs/card';\r\nimport Modal from '~/components/certs/modal';\r\nimport { actions, getCerts } from '~/controllers/certs';\r\nimport type { LinksFunction, LoaderFunction, ActionFunction, ErrorBoundaryComponent } from '@remix-run/node';\r\nimport type { FC } from \"react\";\r\nimport rootStyles from '~/styles/min/root.css';\r\nimport formStyles from '~/styles/min/form.css';\r\nimport cardStyles from '~/styles/min/card.css';\r\nimport { getCookie } from '~/utils/cookie';\r\nimport type { Certification } from '~/types/skillsAndCerts';\r\n\r\nexport const links: LinksFunction = () => {\r\n    return [\r\n        { rel: \"stylesheet\", href: rootStyles, media: process.env.MEDIA_CSS },\r\n        { rel: \"stylesheet\", href: cardStyles, media: process.env.MEDIA_CSS },\r\n        { rel: \"stylesheet\", href: formStyles, media: process.env.MEDIA_CSS },\r\n    ]\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n    const cookie = request.headers.get('cookie');\r\n    const name = getCookie('name', cookie);\r\n    const token = getCookie('token', cookie);\r\n\r\n    if (name === 'Joshua Herrera' && token) {\r\n        const certs = await getCerts({\r\n            locale: 'en'\r\n        });\r\n        return json(certs)\r\n    }\r\n    throw new Error('No authorize user');\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n    const url = new URL(request.url);\r\n\r\n    const method: string = url.searchParams.get(\"method\")?.toUpperCase() ?? 'none';\r\n\r\n    if (!actions[method]) return json({});\r\n    let formData: any;\r\n    let data: any = {\r\n        _id: url.searchParams.get(\"_id\"),\r\n        locale: 'en'\r\n    };\r\n\r\n    try {\r\n        formData = await request?.formData();\r\n        for (const pair of formData.entries()) {\r\n            data[pair[0]] = pair[1]\r\n        }\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n    return await actions[method](data);\r\n}\r\n\r\nexport const ErrorBoundary: ErrorBoundaryComponent = ({ error }) => {\r\n    return (\r\n        <main>\r\n            <h1>{error.message}</h1>\r\n        </main>\r\n    );\r\n}\r\n\r\nconst Certs: FC = () => {\r\n    const certs = useLoaderData();\r\n    const List = certs.map((cert: Certification) => {\r\n        return <Card key={cert.name} cert={cert} />\r\n    })\r\n    return <>\r\n        <main>\r\n            <h1>Manage certifications</h1>\r\n        </main>\r\n        <section className='items-container2'>\r\n            {List}\r\n            <button id='addNewCertBtn' type='button' className=\"bubble-btn\">+</button>\r\n        </section>\r\n        <Modal />\r\n        {\r\n            process.env.NODE_ENV === 'development'\r\n                ? <script defer={true} src='/scripts/certs.js' />\r\n                : <script defer={true} src='/scripts/min/certs-min.js' />\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Certs;", "/* eslint-disable react/display-name */\r\nimport type { ReactChild } from \"react\";\r\nimport { FaCog, FaTrash } from \"react-icons/fa\";\r\nimport { Card } from \"~/components\";\r\nimport type { Certification } from \"~/types/skillsAndCerts\"\r\n\r\ntype Props = {\r\n    children?: ReactChild | ReactChild[],\r\n    cert: Certification,\r\n}\r\n\r\n\r\n\r\nexport const CertCard = ({ children, cert }: Props) => {\r\n    return <Card key={cert.name}>\r\n        <img\r\n            loading=\"lazy\"\r\n            src={cert.icon ? cert.icon : '/assets/skills/default.webp'}\r\n            alt={cert.name}\r\n            width='150px'\r\n            height='150px'\r\n        />\r\n        <div>\r\n            <h3>{cert.name}</h3>\r\n        </div>\r\n        <>\r\n            {children}\r\n        </>\r\n    </Card>\r\n}\r\n\r\nexport const AdminCertCard = ({ cert }: Props) => {\r\n    return <CertCard cert={cert}>\r\n        <FaCog\r\n            id={`${cert.name}_modify_btn`}\r\n            className='card-modify-btn'\r\n            data-cert-id={cert._id}\r\n            data-cert-name={cert.name}\r\n            data-cert-description={cert.description}\r\n            data-cert-icon={cert.icon}\r\n        >\r\n            Modify\r\n        </FaCog>\r\n        <FaTrash\r\n            id={`${cert.name}_remove_btn`}\r\n            className='card-remove-btn'\r\n            data-cert-id={cert._id}\r\n        >\r\n            Remove\r\n        </FaTrash>\r\n    </CertCard>\r\n}\r\n\r\nexport default CertCard;", "/* eslint-disable react/display-name */\r\nimport { Form } from \"@remix-run/react\";\r\nimport { Modal } from \"~/components\";\r\n\r\nexport default () => {\r\n    return <Modal id='certs'>\r\n        <h1 id='formTitle'></h1>\r\n        <Form id='certsForm' method=\"post\" action=\"/admin/certs\" className=\"gray\">\r\n            <section>\r\n                <div>\r\n                    <label htmlFor=\"certNameInput\" className=\"form-label\">cert Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"name\"\r\n                        id=\"certNameInput\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"certDescriptionInput\" className=\"form-label\">Description</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"description\"\r\n                        id=\"certDescriptionInput\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"certIconInput\" className=\"form-label\">Image</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"certIconInput\"\r\n                        name=\"icon\"\r\n                    />\r\n                    <div id=\"imageHelp\" className=\"form-text\">Please search for images online</div>\r\n                </div>\r\n                <input type=\"text\" name=\"_id\" id='certIdInput' style={{ display: \"none\" }} />\r\n            </section>\r\n            <div className=\"form-controls\">\r\n                <button\r\n                    id='formCancelBtn'\r\n                    type=\"button\"\r\n                    className=\"form-cancel-button\"\r\n                >\r\n                    Cancel\r\n                </button>\r\n                <input id='formSubmitBtn' type=\"submit\" value='Submit' />\r\n            </div>\r\n        </Form>\r\n    </Modal>\r\n};", "import { json } from '@remix-run/node';\r\nimport Certifications from '../models/certifications';\r\nimport dbConnect from '../utils/dbConnection';\r\nimport { requestErrorHandler } from './errors';\r\n\r\nexport const getCerts = async (props: any) => {\r\n    await dbConnect();\r\n    const certs = await Certifications.find({}).where('locale').equals(props.locale).limit(props.limit)\r\n    return certs;\r\n}\r\n\r\nexport const actions: any = {\r\n    \"POST\": async (data) => {\r\n        try {\r\n            data._id = undefined;\r\n            await dbConnect();\r\n            const newCert = await Certifications.create(data);\r\n            return json({ status: 'success', message: 'Posted succesfully', cert: newCert }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"PATCH\": async ({ _id, ...props }) => {\r\n        try {\r\n            await dbConnect();\r\n            const updatedCert = await Certifications.findByIdAndUpdate(_id, props);\r\n            if (!updatedCert) throw new Error('Not found');\r\n            return json({ status: 'success', message: 'Posted succesfully', cert: updatedCert }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"DELETE\": async ({ _id }) => {\r\n        try {\r\n            await dbConnect();\r\n            await Certifications.findByIdAndDelete(_id)\r\n            return json({ message: 'success' }, { status: 204 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    }\r\n}", "const mongoose = require('mongoose');\r\n\r\nconst certificationsSchema = mongoose.Schema(\r\n    {\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        description: {\r\n            type: String,\r\n        },\r\n        link: {\r\n            type: String,\r\n        },\r\n        icon: {\r\n            type: String\r\n        },\r\n        locale: {\r\n            type: String,\r\n            enum: ['en', 'es']\r\n        },\r\n    }\r\n);\r\n\r\nexport default mongoose.models.Certifications || mongoose.model(\"Certifications\", certificationsSchema);\r\n", "import { json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport { Card } from \"~/components\";\r\nimport { getProjects } from \"~/controllers/projects\";\r\nimport type { MetaFunction, LinksFunction, LoaderFunction } from '@remix-run/node';\r\nimport type { FC } from \"react\";\r\nimport projectsStyle from '~/styles/min/projects.css';\r\nimport buttonsStyle from '~/styles/min/buttons.css';\r\n\r\nexport const meta: MetaFunction = () => {\r\n    return {\r\n        title: \"Projects\",\r\n        description: \"Catalog of projects\", \"og:title\": \"Projects\",\r\n    };\r\n};\r\n\r\nexport const links: LinksFunction = () => {\r\n    return [\r\n        { rel: \"stylesheet\", href: projectsStyle, media: process.env.MEDIA_CSS },\r\n        { rel: \"stylesheet\", href: buttonsStyle, media: process.env.MEDIA_CSS },\r\n    ]\r\n}\r\n\r\nexport const loader: LoaderFunction = async () => {\r\n    const projects = await getProjects({ locale: 'en' })\r\n    return json(projects)\r\n}\r\n\r\nconst Projects: FC = () => {\r\n    const projects = useLoaderData();\r\n    return (\r\n        <>\r\n            <main>\r\n                <h1>Projects</h1>\r\n            </main>\r\n            <section className=\"items-container\">\r\n                {\r\n                    projects.map((project: any, i: number) => {\r\n                        return (\r\n                            <Card key={project.name}>\r\n                                <img\r\n                                    src={project.image}\r\n                                    alt={project.name}\r\n                                    width=\"auto\"\r\n                                    height=\"auto\"\r\n                                />\r\n                                <div>\r\n                                    <h1>{project.name}</h1>\r\n                                    <p>{project.description}</p>\r\n                                </div>\r\n                                {\r\n                                    project.link.includes('http' || 'https') ?\r\n                                        <a href={project.link} className=\"button success\" target=\"_blank\" rel='noreferrer' role=\"button\">Checkout</a>\r\n                                        :\r\n                                        <Link to={project.link} className=\"button success\">Checkout</Link>\r\n                                }\r\n                            </Card>\r\n                        )\r\n                    })\r\n                }\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects;", "import { json } from \"@remix-run/node\";\r\nimport Projects from '~/models/projects';\r\nimport dbConnect from '~/utils/dbConnection';\r\nimport { requestErrorHandler } from './errors';\r\n\r\nexport const getProjects = async (props: any) => {\r\n    await dbConnect();\r\n    const projects = await Projects.find({}).where('locale').equals(props.locale).limit(props.limit)\r\n    return projects;\r\n}\r\n\r\nexport const actions: any = {\r\n    \"GET\": async () => {\r\n        try {\r\n            await dbConnect();\r\n            return await Projects.find().where('locale').equals('en');\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"POST\": async (body: any) => {\r\n        try {\r\n            await dbConnect();\r\n            const newProject = new Projects({\r\n                name: body.name[0],\r\n                description: body.description[0],\r\n                category: body.category[0],\r\n                status: body.status[0],\r\n                link: body.link[0],\r\n                locale: body.locale[0],\r\n                image: body.image[0],\r\n            });\r\n            await newProject.save();\r\n            return json({ status: 'success', message: 'Posted succesfuly', newProject }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n}", "import mongoose from 'mongoose';\r\n\r\nconst projectSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: true,\r\n        maxlength: 50\r\n    },\r\n    description: {\r\n        type: String\r\n    },\r\n    image: {\r\n        type: String\r\n    },\r\n    category: {\r\n        type: String\r\n    },\r\n    status: {\r\n        type: String,\r\n    },\r\n    link: {\r\n        type: String\r\n    },\r\n    locale: {\r\n        type: String,\r\n        enum: ['en', 'es'],\r\n        required: true\r\n    }\r\n});\r\n\r\nexport default mongoose.models.Project || mongoose.model('Project', projectSchema);", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { getSkills } from '~/controllers/skills';\r\nimport Card from \"~/components/skills/card\";\r\nimport type { MetaFunction, LinksFunction, LoaderFunction } from '@remix-run/node';\r\nimport type { FC } from \"react\";\r\nimport type { Skill } from \"~/types/skillsAndCerts\";\r\nimport rootStyles from '~/styles/min/root.css';\r\nimport cardStyle from '~/styles/min/card.css';\r\n\r\nexport const meta: MetaFunction = () => {\r\n    return {\r\n        title: \"Skills\",\r\n        description:\r\n            \"Skillset\",\r\n    };\r\n};\r\n\r\nexport const links: LinksFunction = () => {\r\n    return [\r\n        { rel: \"stylesheet\", href: rootStyles, media: process.env.MEDIA_CSS },\r\n        { rel: \"stylesheet\", href: cardStyle, media: process.env.MEDIA_CSS },\r\n    ]\r\n}\r\n\r\nexport const loader: LoaderFunction = async () => {\r\n    const [skills] = await Promise.all([\r\n        getSkills({\r\n            locale: \"en\"\r\n        }),\r\n    ])\r\n    return json(skills);\r\n};\r\n\r\nconst Skills: FC = () => {\r\n    const skills = useLoaderData<Skill[]>();\r\n    const List = skills.map((skill: Skill) => {\r\n        return <Card key={skill.name} skill={skill} />\r\n    })\r\n    return (\r\n        <>\r\n            <main>\r\n                <div>\r\n                    <h1>Skillset</h1>\r\n                    <p>This is a evergrowing collection of current skillsets I handle.</p>\r\n                </div>\r\n                <div className=\"items-container2\">\r\n                    {List}\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Skills;\r\n", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { getCerts } from \"~/controllers/certs\";\r\nimport Card from \"~/components/certs/card\";\r\nimport type { MetaFunction, LinksFunction, LoaderFunction } from '@remix-run/node';\r\nimport type { FC } from \"react\";\r\nimport type { Certification } from \"~/types/skillsAndCerts\";\r\nimport rootStyles from '~/styles/min/root.css';\r\nimport cardStyle from '~/styles/min/card.css';\r\n\r\nexport const meta: MetaFunction = () => {\r\n    return {\r\n        title: \"Certifications\",\r\n        description:\r\n            \"Learning path\",\r\n    };\r\n};\r\n\r\nexport const links: LinksFunction = () => {\r\n    return [\r\n        { rel: \"stylesheet\", href: rootStyles, media: process.env.MEDIA_CSS },\r\n        { rel: \"stylesheet\", href: cardStyle, media: process.env.MEDIA_CSS },\r\n    ]\r\n}\r\n\r\nexport const loader: LoaderFunction = async () => {\r\n    const [skills] = await Promise.all([\r\n        getCerts({\r\n            locale: \"en\"\r\n        }),\r\n    ])\r\n    return json(skills);\r\n};\r\n\r\nconst Certs: FC = () => {\r\n    const certs = useLoaderData<any>();\r\n    const List = certs.map((cert: Certification) => {\r\n        return <Card key={cert.name} cert={cert} />\r\n    });\r\n    return (\r\n        <>\r\n            <main>\r\n                <div>\r\n                    <h1>Certifications</h1>\r\n                    <p>Keeping up with the ever changing technologies and knowledge.</p>\r\n                </div>\r\n\r\n            </main>\r\n            <div className=\"items-container2\">\r\n                {List}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Certs;", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { getSkills } from '~/controllers/skills';\r\nimport { getCategories } from '~/controllers/categories';\r\nimport { getCerts } from \"~/controllers/certs\";\r\nimport CertCard from \"~/components/certs/card\";\r\nimport { SeeMoreLinks } from \"~/components/landingPage/seeMoreLink\";\r\nimport { SkillListByCategory as Skills } from \"~/components/skills/list\";\r\nimport type { Category, Certification, Skill } from \"~/types/skillsAndCerts\";\r\nimport type { MetaFunction, LinksFunction, LoaderFunction, ErrorBoundaryComponent } from '@remix-run/node';\r\nimport type { FC } from \"react\";\r\nimport rootStyles from '~/styles/min/root.css';\r\nimport cardStyle from '~/styles/min/card.css';\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return {\r\n    title: \"Welcome\",\r\n    description:\r\n      \"Welcome to my portfolio\",\r\n  };\r\n};\r\n\r\nexport const links: LinksFunction = () => {\r\n  return [\r\n    { rel: \"stylesheet\", href: rootStyles, media: process.env.MEDIA_CSS },\r\n    { rel: \"stylesheet\", href: cardStyle, media: process.env.MEDIA_CSS },\r\n  ]\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const [categories, skills, certs] = await Promise.all([\r\n    getCategories({\r\n      locale: \"en\",\r\n      relatedTo: 'skills',\r\n      limit: 2\r\n    }),\r\n    getSkills({\r\n      locale: \"en\"\r\n    }),\r\n    getCerts({\r\n      locale: \"en\",\r\n      limit: 3\r\n    })\r\n  ])\r\n  return json({ categories, skills, certs });\r\n};\r\n\r\nexport const ErrorBoundary: ErrorBoundaryComponent = ({ error }) => {\r\n  return (\r\n    <main>\r\n      <h1>{error.message}</h1>\r\n    </main>\r\n  );\r\n}\r\n\r\ntype Loader = {\r\n  categories: Category[],\r\n  skills: Skill[],\r\n  certs: Certification[]\r\n}\r\n\r\nexport const Index: FC = () => {\r\n  const { categories, skills, certs } = useLoaderData<Loader>();\r\n  const certList = certs.map((cert: Certification) => {\r\n    return <CertCard key={cert.name} cert={cert} />\r\n  })\r\n  return <>\r\n    <main>\r\n      <div className='welcome curve'>\r\n        <h1>Wachimingo</h1>\r\n        <img\r\n          className=\"profile-pic\"\r\n          src=\"/assets/profile/profile-pic.webp\"\r\n          alt=\"profile\"\r\n          loading=\"lazy\"\r\n        />\r\n      </div>\r\n      <div className=\"items-container\">\r\n        {/* @ts-ignore */}\r\n        <Skills categories={categories} skills={skills} />\r\n        <SeeMoreLinks link='/skills' />\r\n        <section>\r\n          <div className=\"semicircle\">\r\n            <h2>Certifications</h2>\r\n          </div>\r\n          {certList}\r\n          <SeeMoreLinks link='/certs' />\r\n        </section>\r\n      </div>\r\n    </main>\r\n  </>\r\n}\r\n\r\nexport default Index;\r\n", "import { Link } from \"@remix-run/react\"\r\nimport { FaArrowDown } from \"react-icons/fa\"\r\n\r\nexport const SeeMoreLinks = ({ link }: { link: string }) => {\r\n    return <div className=''>\r\n        <div className=''>\r\n            <FaArrowDown />\r\n        </div>\r\n        <Link to={link} style={{}}>\r\n            See More\r\n        </Link>\r\n    </div>\r\n}", "import Card from \"./card\";\r\nimport type { Category, Skill } from \"~/types/skillsAndCerts\"\r\n\r\ntype Props = {\r\n    skills: Skill[],\r\n    categories: Category[]\r\n}\r\n\r\nexport const SkillListByCategory = ({ skills, categories }: Props) => {\r\n    const List = categories.map((cat: Category) => {\r\n        if (cat.relatedTo === 'skills') {\r\n            return (\r\n                <section key={cat.name}>\r\n                    <h2>{cat.name}</h2>\r\n                    {\r\n                        skills.filter((skill: Skill) => skill.category === cat._id).map((skill: Skill) => {\r\n                            return <Card skill={skill} key={skill.name} />\r\n                        })\r\n                    }\r\n                </section>\r\n            )\r\n        } else return undefined;\r\n    })\r\n    return List;\r\n}", "export default {'version':'63ef28cb','entry':{'module':'/build/entry.client-CY2UA36H.js','imports':['/build/_shared/chunk-TQY4R4EP.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-5IQDNZ2Y.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index':{'id':'routes/__index','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index-MHK46AM2.js','imports':['/build/_shared/chunk-4STGL6LS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/Certs':{'id':'routes/__index/Certs','parentId':'routes/__index','path':'Certs','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/Certs-O6SINWT7.js','imports':['/build/_shared/chunk-G65NP3OI.js','/build/_shared/chunk-IATN7CZG.js','/build/_shared/chunk-BG2E5RIY.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/Projects':{'id':'routes/__index/Projects','parentId':'routes/__index','path':'Projects','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/Projects-BWOELGCJ.js','imports':['/build/_shared/chunk-BG2E5RIY.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/Skills':{'id':'routes/__index/Skills','parentId':'routes/__index','path':'Skills','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/Skills-2U75H3BS.js','imports':['/build/_shared/chunk-KPUOCOUH.js','/build/_shared/chunk-IATN7CZG.js','/build/_shared/chunk-BG2E5RIY.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/admin/Certs':{'id':'routes/__index/admin/Certs','parentId':'routes/__index','path':'admin/Certs','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/admin/Certs-PY3X7OK4.js','imports':['/build/_shared/chunk-G65NP3OI.js','/build/_shared/chunk-HDETZZGC.js','/build/_shared/chunk-IATN7CZG.js','/build/_shared/chunk-RSMRZNID.js','/build/_shared/chunk-BG2E5RIY.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__index/admin/Skills':{'id':'routes/__index/admin/Skills','parentId':'routes/__index','path':'admin/Skills','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/admin/Skills-QBYP6EC7.js','imports':['/build/_shared/chunk-KPUOCOUH.js','/build/_shared/chunk-HDETZZGC.js','/build/_shared/chunk-IATN7CZG.js','/build/_shared/chunk-RSMRZNID.js','/build/_shared/chunk-BG2E5RIY.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__index/auth/$action':{'id':'routes/__index/auth/$action','parentId':'routes/__index','path':'auth/:action','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/auth/$action-7LM3HAFN.js','imports':['/build/_shared/chunk-RSMRZNID.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/index':{'id':'routes/__index/index','parentId':'routes/__index','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__index/index-BNY6JVYK.js','imports':['/build/_shared/chunk-KPUOCOUH.js','/build/_shared/chunk-G65NP3OI.js','/build/_shared/chunk-IATN7CZG.js','/build/_shared/chunk-BG2E5RIY.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/api/user/$email':{'id':'routes/api/user/$email','parentId':'root','path':'api/user/:email','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/user/$email-WXJQTSNV.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true}},'url':'/build/manifest-63EF28CB.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\api\\\\user\\\\$email.tsx\";\nimport * as route2 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index.tsx\";\nimport * as route3 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\admin\\\\Skills.tsx\";\nimport * as route4 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\auth\\\\$action.tsx\";\nimport * as route5 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\admin\\\\Certs.tsx\";\nimport * as route6 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\Projects.tsx\";\nimport * as route7 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\Skills.tsx\";\nimport * as route8 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\Certs.tsx\";\nimport * as route9 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/api/user/$email\": {\n      id: \"routes/api/user/$email\",\n      parentId: \"root\",\n      path: \"api/user/:email\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/__index\": {\n      id: \"routes/__index\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/__index/admin/Skills\": {\n      id: \"routes/__index/admin/Skills\",\n      parentId: \"routes/__index\",\n      path: \"admin/Skills\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/__index/auth/$action\": {\n      id: \"routes/__index/auth/$action\",\n      parentId: \"routes/__index\",\n      path: \"auth/:action\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/__index/admin/Certs\": {\n      id: \"routes/__index/admin/Certs\",\n      parentId: \"routes/__index\",\n      path: \"admin/Certs\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/__index/Projects\": {\n      id: \"routes/__index/Projects\",\n      parentId: \"routes/__index\",\n      path: \"Projects\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/__index/Skills\": {\n      id: \"routes/__index/Skills\",\n      parentId: \"routes/__index\",\n      path: \"Skills\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/__index/Certs\": {\n      id: \"routes/__index/Certs\",\n      parentId: \"routes/__index\",\n      path: \"Certs\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/__index/index\": {\n      id: \"routes/__index/index\",\n      parentId: \"routes/__index\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    }\n  };"],
  "mappings": "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",
  "names": []
}
