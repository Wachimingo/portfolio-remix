{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\root.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\api\\user\\$email.tsx", "../app/controllers/auth.ts", "../app/models/user.ts", "../app/utils/dbConnection.ts", "../app/controllers/mail.ts", "../app/controllers/errors.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index.tsx", "../app/components/common/authComponents.tsx", "../app/controllers/billing.ts", "../app/components/common/Carousel.tsx", "../app/components/common/Modal.tsx", "../app/components/common/Card.tsx", "../app/components/skills/modal.tsx", "../app/components/common/Footer.tsx", "../app/components/common/NavBar.tsx", "../app/components/common/sideBar.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\projects\\restaurant.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\projects\\restaurant\\billing\\$transaction.tsx", "../app/controllers/dishes.ts", "../app/models/dishes.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\projects\\restaurant\\orders\\$status.tsx", "../app/models/bill.ts", "../app/controllers/orders.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\projects\\restaurant\\catalog.tsx", "../app/components/modals/CatalogModal.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\projects\\restaurant\\index.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\projects\\index.tsx", "../app/controllers/projects.ts", "../app/models/projects.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\admin\\Skills.tsx", "../app/controllers/skills.ts", "../app/models/categories.ts", "../app/models/skills.ts", "../app/components/skills/card.tsx", "../app/controllers/categories.ts", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\auth\\$action.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\skills.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\certs.tsx", "../app/models/certifications.ts", "../app/controllers/certs.ts", "../app/components/certs/index.tsx", "C:\\Users\\joshua.herrera1\\Documents\\portfolio-remix\\app\\routes\\__index\\index.tsx", "../app/components/landingPage/index.tsx", "../app/components/skills/list.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport type { EntryContext } from \"@remix-run/node\";\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  let markup = renderToString(\r\n    <RemixServer context={remixContext} url={request.url} />\r\n  );\r\n\r\n  responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n  return new Response(\"<!DOCTYPE html>\" + markup, {\r\n    status: responseStatusCode,\r\n    headers: responseHeaders,\r\n  });\r\n}\r\n", "import {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  useMatches,\r\n  ScrollRestoration,\r\n} from \"@remix-run/react\";\r\nimport type { MetaFunction } from \"@remix-run/node\";\r\nimport appStyle from '~/styles/app.css';\r\nimport navBarStyle from '~/styles/navbar.css';\r\nimport footerStyle from '~/styles/footer.css';\r\n\r\nexport const meta: MetaFunction = () => ({\r\n  charset: \"utf-8\",\r\n  title: \"Portfolio\",\r\n  viewport: \"width=device-width,initial-scale=1\",\r\n});\r\n\r\n\r\nexport function links() {\r\n  return [\r\n    { rel: \"stylesheet\", href: appStyle, media: \"none\" },\r\n    { rel: \"stylesheet\", href: navBarStyle, media: \"none\" },\r\n    { rel: \"stylesheet\", href: footerStyle, media: \"none\" },\r\n  ]\r\n}\r\n\r\nexport default function App() {\r\n  const matches = useMatches();\r\n\r\n  const includesScripts = matches.some(\r\n    (match) => match.handle?.hydrate\r\n  )\r\n\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Outlet />\r\n        {includesScripts ? <Scripts /> : null}\r\n        {process.env.NODE_ENV === \"development\" ? <ScrollRestoration /> : undefined}\r\n        {/* <Scripts /> */}\r\n        {process.env.NODE_ENV === \"development\" ? <LiveReload /> : undefined}\r\n      </body>\r\n    </html >\r\n  );\r\n}\r\n", "import { useEffect } from \"react\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport { activateUser } from \"~/controllers/auth\";\r\nimport authStyles from \"~/styles/auth.css\";\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: authStyles }\r\n    ]\r\n}\r\n\r\nexport const loader = async ({ params }: any) => {\r\n    const user = await activateUser(params.email);\r\n    return json(user);\r\n}\r\n\r\nexport function ErrorBoundary({ error }: any) {\r\n    return (\r\n        <html>\r\n            <head>\r\n                <title>Oh no!</title>\r\n            </head>\r\n            <body>\r\n            </body>\r\n        </html>\r\n    );\r\n}\r\n\r\nconst EmailConfirmation = () => {\r\n    const result = useLoaderData<any>();\r\n    useEffect(() => {\r\n        if (result) {\r\n            if (result.error) return undefined\r\n            Cookies.set('name', result.user?.name);\r\n            Cookies.set('email', result.user?.email);\r\n            Cookies.set('token', result.user.token);\r\n            Cookies.set('role', result.user?.role);\r\n        }\r\n    })\r\n    return (\r\n        <section>\r\n            {\r\n                result.error\r\n                    ? <>\r\n                        <p>{result.error}</p>\r\n                        <Link to=\"/\">Go to Home</Link>\r\n                    </>\r\n                    : <>\r\n                        <p>Thanks for confirming your account.</p>\r\n                        <p>You can close this page.</p>\r\n                        <Link to=\"/\">Go to Home</Link>\r\n                    </>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EmailConfirmation;", "import { json } from \"@remix-run/node\";\r\nimport User from '~/models/user';\r\nimport dbConnect from '~/utils/dbConnection';\r\nimport mail from '~/controllers/mail';\r\nimport { requestErrorHandler } from './errors';\r\nconst bcrypt = require('bcryptjs');\r\n\r\nexport const activateUser = async (email: string) => {\r\n    try {\r\n        await dbConnect();\r\n        const jwt = require('jsonwebtoken');\r\n        const user = await User.findOneAndUpdate({ email }, { isActive: true }).select('name email role isActive');\r\n        if (!user) throw 'Not Found'\r\n        if (user.isActive) throw 'Cannot re-use link'\r\n        user.isActive = undefined;\r\n        const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, {\r\n            expiresIn: process.env.JWT_EXPIRES_IN,\r\n        });\r\n        return { user, token };\r\n    } catch (error) {\r\n        return { error, status: \"error\" }\r\n    }\r\n}\r\n\r\nexport const actions: any = {\r\n    \"POST\": async ({ params, ...props }) => {\r\n        try {\r\n            await dbConnect();\r\n            const jwt = require('jsonwebtoken');\r\n            if (params.action === 'signin') {\r\n                const user = await User.findOne({ email: props.email }).select('+password');\r\n\r\n                if (!user || user.password === undefined || !(await user.correctPassword(props.password, user.password))) {\r\n                    return json({ status: 'error', message: 'User doesn\\'t exists' }, { status: 404 });\r\n                }\r\n                //remove password from output\r\n                user.password = undefined;\r\n                const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, {\r\n                    expiresIn: process.env.JWT_EXPIRES_IN,\r\n                });\r\n                return json({ status: 'success', user, token }, { status: 200 });\r\n            }\r\n            if (params.action === 'signup') {\r\n                if (props.password !== props.confirmPassword) throw \"Passwords don't match\";\r\n                const [, pass] = await Promise.all([dbConnect(), bcrypt.hash(props.password, 2)])\r\n                const newUser = new User({\r\n                    name: props.name,\r\n                    email: props.email,\r\n                    password: pass,\r\n                    role: 'user',\r\n                    isActive: false,\r\n                    externalId: stripeUser.id\r\n                })\r\n                await newUser.save();\r\n                mail(props.email).catch(console.error);\r\n                return json({ status: 'success', message: 'Success', user: {} }, { status: 201 });\r\n            }\r\n            return json({});\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    }\r\n}", "const mongoose = require('mongoose');\r\nconst validator = require('validator');\r\nconst bcrypt = require('bcryptjs');\r\nconst userSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: [true, 'Por favor ingrese un nombre de usuario'],\r\n    },\r\n    email: {\r\n        type: String,\r\n        required: [true, 'Por favor ingrese un correo'],\r\n        unique: true,\r\n        lowercase: true,\r\n        validate: [validator.isEmail, 'Por favor ingrese un correo valido'],\r\n    },\r\n    tn: {\r\n        type: String,\r\n        maxlength: [8, 'El telefono debe tener 8 digitos'],\r\n    },\r\n    photo: String,\r\n    password: {\r\n        type: String,\r\n        required: [true, 'Por favor ingrese una clave'],\r\n        minlength: 4,\r\n        select: false,\r\n    },\r\n    passwordChangedAt: Date,\r\n    role: {\r\n        type: String,\r\n        enum: ['user', 'helper', 'admin'],\r\n        default: 'user',\r\n    },\r\n    balance: {\r\n        type: Number,\r\n        default: 0\r\n    },\r\n    isActive: {\r\n        type: Boolean,\r\n        default: true,\r\n        select: false,\r\n    },\r\n    isValidated: {\r\n        type: Boolean,\r\n        default: false,\r\n        select: false,\r\n    },\r\n    canBorrow: {\r\n        type: Boolean,\r\n        default: false,\r\n    },\r\n    externalId: {\r\n        type: String,\r\n    }\r\n});\r\n\r\n// userSchema.pre('save', async function (next: any) {\r\n//     //Only run if password has changed\r\n//     // if (!userSchema.isModified('password')) return next;\r\n//     //Hash the password with bcrypt\r\n//     userSchema.password = await bcrypt.hash(userSchema.password, 2);\r\n//     //Delete passwordConfirm field, to not be save in DB\r\n//     // userSchema.passwordConfirm = undefined;\r\n//     next();\r\n// });\r\n\r\nuserSchema.pre(/^'find'/, function (next: any) {\r\n    userSchema.find({ active: { $ne: false } });\r\n    next();\r\n});\r\n\r\nuserSchema.methods.correctPassword = async function (\r\n    inputPassword: any,\r\n    userPassword: any\r\n) {\r\n    return await bcrypt.compare(inputPassword, userPassword);\r\n};\r\n\r\n// userSchema.methods.changedPasswordAfter = function (JWTTimestamp: any) {\r\n//     if (userSchema.passwordChangedAt) {\r\n//         const changedTimestamp = parseInt(\r\n//             userSchema.passwordChangedAt.getTime() / 1000,\r\n//             10\r\n//         );\r\n//         return JWTTimestamp < changedTimestamp;\r\n//     }\r\n\r\n//     return false;\r\n// };\r\n\r\nexport default mongoose.models.User || mongoose.model('User', userSchema);\r\n", "// /lib/dbConnect.js\r\nimport mongoose from 'mongoose'\r\n\r\n/** \r\nSource : \r\nhttps://github.com/vercel/next.js/blob/canary/examples/with-mongodb-mongoose/utils/dbConnect.js \r\n**/\r\n\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\r\n    'Please define the MONGODB_URI environment variable inside .env.local'\r\n  )\r\n}\r\n\r\n/**\r\n * Global is used here to maintain a cached connection across hot reloads\r\n * in development. This prevents connections growing exponentially\r\n * during API Route usage.\r\n */\r\n//@ts-ignore\r\nlet cached = global.mongoose\r\n\r\nif (!cached) {\r\n  //@ts-ignore\r\n  cached = global.mongoose = { conn: null, promise: null }\r\n}\r\n\r\nasync function dbConnect() {\r\n  if (cached.conn) {\r\n    return cached.conn\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    const opts = {\r\n      useNewUrlParser: true,\r\n      useUnifiedTopology: true,\r\n    }\r\n    //@ts-ignore\r\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then(mongoose => {\r\n      return mongoose\r\n    })\r\n  }\r\n  cached.conn = await cached.promise\r\n  return cached.conn\r\n}\r\n\r\nexport default dbConnect;\r\n", "const nodemailer = require(\"nodemailer\");\r\n\r\n// async..await is not allowed in global scope, must use a wrapper\r\nasync function mail(sentTo: string) {\r\n    // Generate test SMTP service account from ethereal.email\r\n    // Only needed if you don't have a real mail account for testing\r\n    // let testAccount = await nodemailer.createTestAccount();\r\n\r\n    // create reusable transporter object using the default SMTP transport\r\n    let transporter = nodemailer.createTransport({\r\n        host: process.env.EMAIL_HOST,\r\n        port: process.env.EMAIL_PORT,\r\n        secure: false, // true for 465, false for other ports\r\n        auth: {\r\n            user: process.env.EMAIL_USER,\r\n            pass: process.env.EMAIL_PASS,\r\n        },\r\n    });\r\n    // let transporter = nodemailer.createTransport({\r\n    //     host: \"smtp.ethereal.email\",\r\n    //     port: 587,\r\n    //     secure: false, // true for 465, false for other ports\r\n    //     auth: {\r\n    //         user: testAccount.user, // generated ethereal user\r\n    //         pass: testAccount.pass, // generated ethereal password\r\n    //     },\r\n    // });\r\n\r\n    let link = 'https://wachimingo.vercel.app/api/user/'\r\n    // send mail with defined transport object\r\n    let info = await transporter.sendMail({\r\n        from: process.env.EMAIL_FROM, // sender address\r\n        to: sentTo, // list of receivers\r\n        subject: \"Confirm your account\", // Subject line\r\n        text: \"Finish Sign Up\", // plain text body\r\n        html: `<h1>Finish Sign Up</h1>\r\n        <p>Click the link below to active your account</p>\r\n        <a>${link + sentTo}</a>`, // html body\r\n    });\r\n\r\n    console.log(\"Message sent: %s\", info.messageId);\r\n    // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\r\n\r\n    // Preview only available when sending through an Ethereal account\r\n    // console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\r\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\r\n}\r\n\r\n// mail().catch(console.error);\r\n\r\nexport default mail;", "export const requestErrorHandler = (error: any) => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n        throw new Error('Ups, something when wrong...');\r\n    } else {\r\n        throw new Error(error);\r\n    }\r\n}", "import { Outlet } from \"@remix-run/react\";\r\nimport { NavBar, Footer } from \"~/components\";\r\n\r\nconst Portfolio = () => {\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <Outlet />\r\n            <Footer />\r\n            {\r\n                process.env.NODE_ENV === 'development'\r\n                    ? <script defer={true} src='/scripts/index.js' />\r\n                    : <script defer={true} src='/scripts/min/index-min.js' />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Portfolio;", "import { Form, Link } from \"@remix-run/react\";\r\n\r\nconst renderForm: any = {\r\n    \"signin\": (action: string) => {\r\n        return (\r\n            <Form method=\"post\" action='/auth/signin' className=\"dark form-width-90vw\">\r\n                <h1>{action}</h1>\r\n                <p >Please enter your login and password!</p>\r\n                <div>\r\n                    <input\r\n                        type=\"email\"\r\n                        name='email'\r\n                        id=\"email\"\r\n                        required={true}\r\n                    // value='joshuaguillen.adoc@live.com'\r\n                    />\r\n                    <label htmlFor=\"email\">Email</label>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        required={true}\r\n                    // value='123456'\r\n                    />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                </div>\r\n                <div>\r\n                    <p>Don't have an account? <Link to=\"/auth/signup\">Sign Up</Link></p>\r\n                </div>\r\n                <div>\r\n                    <input type=\"submit\" value='Login' />\r\n                </div>\r\n            </Form>\r\n        )\r\n    },\r\n    \"signup\": (action: string) => {\r\n        return (\r\n            <Form method=\"post\" action='/auth/signup' className=\"dark form-width-90vw\">\r\n                <h2>{action}</h2>\r\n                <p>Please enter your login and password!</p>\r\n                <div>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name='name'\r\n                        id=\"name\"\r\n                        required={true}\r\n                    // value='test'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name='email'\r\n                        id=\"email\"\r\n                        required={true}\r\n                    // value='alexanderguillen.adoc@gmail.com'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        required={true}\r\n                    // value='123456'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        id=\"confirmPassword\"\r\n                        required={true}\r\n                    // value='123456'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input type=\"submit\" value='Sign Up' />\r\n                </div>\r\n            </Form>\r\n        )\r\n    },\r\n    \"confirmationEmailSent\": (action: string) => {\r\n        return (\r\n            <div>\r\n                <h1>Confirmation email sent.</h1>\r\n            </div>\r\n        )\r\n    },\r\n    \"logout\": () => {\r\n        return (\r\n            <div>\r\n                <h1>You've been logged off.</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const authForm = (action: string) => {\r\n    if (!action) return <>No action provided</>\r\n    const handler = renderForm[action]\r\n    if (!handler) return <>Not found</>\r\n    return renderForm[action](action)\r\n}", "export const increaseCount = (\r\n    i: number,\r\n    dish: any,\r\n    dishCounter: number,\r\n    dishCounters: number[],\r\n    setDishCounters: Function,\r\n    totalDishes: number,\r\n    setTotalDishes: Function,\r\n    selectedDishes: any,\r\n    setSelectedDishes: Function,\r\n    totalPrice: number,\r\n    setTotalPrice: Function\r\n) => {\r\n    if (dishCounter < 1) {\r\n        let dishes = [...selectedDishes]\r\n        delete dish!.category\r\n        delete dish!.createdAt\r\n        delete dish!.description\r\n        delete dish!.forToday\r\n        delete dish!.favoriteQuantity\r\n        delete dish!.ratingsAverage\r\n        delete dish!.ratingsQuantity\r\n        delete dish!.image\r\n        delete dish!.__v\r\n        delete dish!._id\r\n        dishes.push(dish)\r\n        setSelectedDishes(dishes)\r\n    }\r\n    dishCounter++;\r\n    let newdishCounters = [...dishCounters];\r\n    newdishCounters[i] = dishCounter;\r\n    setDishCounters(newdishCounters);\r\n    totalDishes++;\r\n    setTotalDishes(totalDishes);\r\n    totalPrice = totalPrice + dish!.price;\r\n    setTotalPrice(totalPrice);\r\n}\r\n\r\nexport const decreaseCount = (\r\n    i: number,\r\n    dish: any,\r\n    dishCounter: number,\r\n    dishCounters: number[],\r\n    setDishCounter: Function,\r\n    totalDishes: number,\r\n    setTotalDishes: Function,\r\n    selectedDishes: any,\r\n    setSelectedDishes: Function,\r\n    totalPrice: number,\r\n    setTotalPrice: Function\r\n) => {\r\n    if (dishCounter > 0) {\r\n        dishCounter--;\r\n        let newArray = [...dishCounters];\r\n        newArray[i] = dishCounter;\r\n        setDishCounter(newArray);\r\n        totalDishes--;\r\n        setTotalDishes(totalDishes);\r\n        totalPrice = totalPrice - dish!.price;\r\n        setTotalPrice(totalPrice);\r\n    }\r\n    if (dishCounter < 1) {\r\n        let dishes = [...selectedDishes]\r\n        const newDishes: any = dishes.filter((item: any) => {\r\n            if (item.name === dish!.name) {\r\n                return undefined\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setSelectedDishes(newDishes)\r\n    }\r\n}\r\n\r\nexport const processTransaction = async (\r\n    totalPrice: number,\r\n    totalDishes: number,\r\n    token: string,\r\n    userId: string,\r\n    selectedDishes: any,\r\n    dishCounters: number[],\r\n    items: any,\r\n    customer?: string,\r\n) => {\r\n    let dishes = [...selectedDishes]\r\n    dishes.forEach((dish: any) => {\r\n        const index = items.indexOf(dish)\r\n        if (index > -1) {\r\n            dish.quantity = dishCounters[index]\r\n            delete dish!.image\r\n        }\r\n    });\r\n\r\n    // const result = await fetch('/api/comedor/bills', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'content-type': 'application/json',\r\n    //         Authorization: `Bearer ${token}`\r\n    //     },\r\n    //     body: JSON.stringify({\r\n    //         userId,\r\n    //         customer: customer ?? userId,\r\n    //         totalDishes,\r\n    //         totalPrice,\r\n    //         status: 'isPending',\r\n    //         isPaid: false,\r\n    //         body: [...dishes]\r\n    //     })\r\n    // });\r\n    // const data = await result.json();\r\n    // if (result.ok) {\r\n    //     toast.success('Transaccion realizada');\r\n    // } else {\r\n    //     toast.error(data.error)\r\n    // }\r\n}\r\n\r\nexport const clearSellValues = (\r\n    setDishCounter: Function,\r\n    setTotalDishes: Function,\r\n    setSelectedDishes: Function,\r\n    setTotalPrice: Function\r\n) => {\r\n    setDishCounter([]);\r\n    setTotalDishes(0);\r\n    setSelectedDishes([]);\r\n    setTotalPrice(0);\r\n}", "export const Carousel = ({ items }: any) => {\r\n    return (\r\n        <div className='slider'>\r\n            <br />\r\n            {\r\n                items.map((item: any, i: number) => {\r\n                    return (\r\n                        <span key={`slideButton${i}`}>\r\n                            <a className=\"slider-tags\" href={`#slide-${i}`}>{i + 1}</a>\r\n                        </span>\r\n                    )\r\n                })\r\n            }\r\n            <br />\r\n            <br />\r\n            <div className='slides'>\r\n                {\r\n                    items.map((item: any, i: number) => {\r\n                        return (\r\n                            <div key={`slide${i}`} id={`slide-${i}`}>\r\n                                <img\r\n                                    className='img'\r\n                                    src={item.image}\r\n                                    alt={item.name}\r\n                                    loading=\"lazy\"\r\n                                    width=\"auto\"\r\n                                    height=\"auto\"\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}", "/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable react-hooks/rules-of-hooks */\r\nimport { useEffect } from \"react\";\r\n\r\nexport const Modal = ({ children, closeModal, id = 'default', ...props }: any) => {\r\n    useEffect(() => {\r\n        /**\r\n    * If the target of the event is the modal, remove the event listener and close the modal.\r\n    * @param {any} event - any - the event that is passed to the function\r\n    */\r\n        function closeWhenClickOutside(event: Event) {\r\n            if (event.target == document.getElementById(`${id}-modal`)) {\r\n                window.removeEventListener('click', closeWhenClickOutside);\r\n                closeModal(false);\r\n            }\r\n        }\r\n        window.addEventListener('click', closeWhenClickOutside);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"modal-container none\" id={`${id}-modal`}>\r\n            <div className=\"modal-content\">\r\n                <span className=\"modal-close-btn\" onClick={() => closeModal(false)}>\r\n                    &times;\r\n                </span>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}", "import { FaTrash, FaCog, FaAngleUp, FaRegFolderOpen, FaStar, FaAngleDown } from \"react-icons/fa\";\r\nimport { Link, useFetcher } from \"@remix-run/react\";\r\n\r\nexport const Card = ({ children, ...props }) => {\r\n    return (\r\n        <div className=\"card-wrapper\" {...props}>\r\n            <div className=\"card-container\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CatalogRowButtons = ({ fetcher, method, title, style, icon, action, ...props }: any) => {\r\n    return (\r\n        <span\r\n            title={title}\r\n            style={style}\r\n            onClick={() => fetcher ? fetcher.submit({ ...props }, { method }) : action(props.item)}\r\n        >\r\n            {icon}\r\n        </span >\r\n    )\r\n}\r\n\r\nexport const CatalogControls = (\r\n    item: any,\r\n    fetcher: any,\r\n    dishToModify: any,\r\n    setDishToModify: Function,\r\n    isOpen: boolean,\r\n    setIsOpen: Function,\r\n) => {\r\n    return (\r\n        <div className='control'>\r\n            <CatalogRowButtons\r\n                title=\"Delete\"\r\n                icon={<FaTrash />}\r\n                fetcher={fetcher}\r\n                dishId={item.id}\r\n                method={'DELETE'}\r\n            />\r\n            <CatalogRowButtons\r\n                title=\"Modify\"\r\n                icon={<FaCog onClick={() => setIsOpen(isOpen => !isOpen)} />}\r\n                action={() => {\r\n                    setDishToModify(dishToModify => item)\r\n                }}\r\n                item={item}\r\n            />\r\n            <CatalogRowButtons\r\n                title={item?.forToday ? \"Desactivar\" : \"Activar\"}\r\n                icon={item?.forToday ? <FaAngleDown /> : <FaAngleUp />}\r\n                style={{ color: item?.forToday ? 'green' : 'red' }}\r\n                fetcher={fetcher}\r\n                dishId={item.id}\r\n                forToday={!item.forToday}\r\n                method={'PATCH'}\r\n                type={'forToday'}\r\n            />\r\n            <CatalogRowButtons\r\n                title='Review'\r\n                icon={\r\n                    <Link to={`/projects/restaurant/review/${item?._id}`} >\r\n                        <FaRegFolderOpen />\r\n                    </Link>\r\n                }\r\n                fetcher={fetcher}\r\n            />\r\n            <CatalogRowButtons\r\n                title=\"Mark as favorite\"\r\n                icon={<FaStar />}\r\n                fetcher={fetcher}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const OrderCard = ({ orders, status }: any) => {\r\n    return (\r\n        <>\r\n            {\r\n                orders.map((order: any, i: number) => {\r\n                    return (\r\n                        <div key={order.id + i} className=\"card d-inline-block mb-2 ms-2\" style={{ width: \"18rem\" }}>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{order.user.name}</h5>\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">{order.status}</h6>\r\n                                <p className=\"card-text\">Dishes: {order.totalDishes} Payment: {order.totalPrice}</p>\r\n                                <p className=\"card-text\">Payment status: {order.isPaid ? 'Success' : 'Pending'}</p>\r\n                                {CardControls(order._id, order.status)}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst CardControls = (id: string, status: string) => {\r\n    const fetcher = useFetcher();\r\n    const renderButtons: any = {\r\n        \"isPending\": (id: string) => {\r\n            return (\r\n                <>\r\n                    <button\r\n                        className=\"btn btn-success m-2\"\r\n                        onClick={() => fetcher.submit({ id, type: 'status', status: 'isReady' }, { method: \"patch\" })}\r\n                    >\r\n                        Ready\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => fetcher.submit({ id, type: 'status', status: 'cancelled' }, { method: \"patch\" })}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </>\r\n            )\r\n        },\r\n        \"isReady\": (id: string) => {\r\n            return (\r\n                <>\r\n                    <button\r\n                        className=\"btn btn-success m-2\"\r\n                        onClick={() => fetcher.submit({ id, type: 'status', status: 'completed' }, { method: \"patch\" })}\r\n                    >\r\n                        Complete\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => fetcher.submit({ id, type: 'status', status: 'cancelled' }, { method: \"patch\" })}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </>\r\n            )\r\n        },\r\n        \"completed\": () => undefined,\r\n        \"cancelled\": () => undefined,\r\n        \"default\": () => undefined\r\n    }\r\n    return renderButtons[status ?? 'default'](id);\r\n}", "/* eslint-disable react/display-name */\r\nimport { Form } from \"@remix-run/react\";\r\nimport { Modal } from \"~/components\";\r\n\r\nexport default ({ categories }) => {\r\n    return <Modal id='skills'>\r\n        <h1 id='formTitle'></h1>\r\n        <Form id='skillsForm' method=\"post\" action=\"/admin/skills\" className=\"gray\">\r\n            <section>\r\n                <div>\r\n                    <label htmlFor=\"skillNameInput\" className=\"form-label\">Skill Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"name\"\r\n                        id=\"skillNameInput\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"skillDescriptionInput\" className=\"form-label\">Description</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"description\"\r\n                        id=\"skillDescriptionInput\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"skillCategoriesInput\" className=\"form-label\">Category</label>\r\n                    <select id='skillCategoriesInput' name=\"category\">\r\n                        {categories.map(cat => <option key={cat._id} value={cat._id}>{cat.name}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"skillLevelInput\" className=\"form-label\">Level</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        name=\"level\"\r\n                        id=\"skillLevelInput\"\r\n                        max={100}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"skillIconInput\" className=\"form-label\">Image</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"skillIconInput\"\r\n                        name=\"icon\"\r\n                    />\r\n                    <div id=\"imageHelp\" className=\"form-text\">Please search for images online</div>\r\n                </div>\r\n                <input type=\"text\" name=\"_id\" id='skillIdInput' style={{ display: \"none\" }} />\r\n            </section>\r\n            <div className=\"form-controls\">\r\n                <button\r\n                    id='formCancelBtn'\r\n                    type=\"button\"\r\n                    className=\"form-cancel-button\"\r\n                >\r\n                    Cancel\r\n                </button>\r\n                <input id='formSubmitBtn' type=\"submit\" value='Submit' />\r\n            </div>\r\n        </Form>\r\n    </Modal>\r\n};", "import { FaFacebookF, FaGithubAlt, FaLinkedinIn, FaRegEnvelope } from \"react-icons/fa\";\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"footer-wrapper\">\r\n            <div className=\"footer-container\">\r\n                <section className=\"social-media\">\r\n                    <a className=\"\" href=\"https://www.facebook.com/halex007/\" target=\"_blank\" rel='noreferrer' role=\"button\">\r\n                        <FaFacebookF />\r\n                    </a>\r\n                    <a className=\"\" href=\"https://www.linkedin.com/in/joshua-guillen-755143a7/\" target=\"_blank\" rel='noreferrer' role=\"button\">\r\n                        <FaLinkedinIn />\r\n                    </a>\r\n                    <a className=\"\" href=\"https://github.com/Wachimingo\" target=\"_blank\" rel='noreferrer' role=\"button\">\r\n                        <FaGithubAlt />\r\n                    </a>\r\n                </section>\r\n                <a href=\"mailto: joshua.herrera2@outlook.com\">\r\n                    <FaRegEnvelope className='' /> joshua.herrera2@outlook.com\r\n                </a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}", "\r\nimport { Link } from \"@remix-run/react\";\r\n\r\nexport const NavBar = (props: any) => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <div\r\n                id=\"hamburger-menu\"\r\n                className=\"hamburger-menu\"\r\n            >\r\n                <div className=\"ham-divs\" />\r\n                <div className=\"ham-divs\" />\r\n                <div className=\"ham-divs\" />\r\n            </div>\r\n            <div\r\n                id=\"menu-child-div\"\r\n                className='menu-child-div navbar-item-none'\r\n            >\r\n                <Link className=\"link\" to=\"/\">Home</Link>\r\n                <Link className=\"link\" to=\"/projects\">Projects</Link>\r\n                <Link className=\"link\" to=\"/skills\">Skills</Link>\r\n                <Link className=\"link\" to=\"/certs\">Certifications</Link>\r\n            </div>\r\n            <div\r\n                id=\"menu-child-div\"\r\n                className='menu-child-div navbar-item-none'\r\n            >\r\n                <Link id='signup' className=\"link\" to=\"/auth/signup\">Sign Up</Link>\r\n                <Link id='login_logout' className=\"link\" to=\"/auth/signin\">Sign In</Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n", "import { useState } from \"react\";\r\nimport { FaArrowAltCircleLeft, FaArrowAltCircleRight } from \"react-icons/fa\";\r\nimport { Link } from \"@remix-run/react\";\r\n\r\nexport const SideBar = () => {\r\n    const [hide, setHide] = useState(false)\r\n    return (\r\n        <div className=\"sidebar-wrapper\">\r\n            <button\r\n                type=\"button\"\r\n                className={`${hide ? 'open' : 'close'} sidebar-button`}\r\n                onClick={() => { setHide(!hide) }}\r\n            >\r\n                {\r\n                    hide\r\n                        ? <FaArrowAltCircleRight\r\n                            className='open sidebar-button'\r\n                            onClick={() => { setHide(!hide) }}\r\n                        />\r\n                        : <FaArrowAltCircleLeft\r\n                            className='close sidebar-button'\r\n                            onClick={() => { setHide(!hide) }}\r\n                        />}\r\n            </button>\r\n            {\r\n                hide ?\r\n                    undefined\r\n                    :\r\n                    <nav className=\"sidebar-container\">\r\n                        <div className=\"\">\r\n                            <h3 className=\"\">Go to:</h3>\r\n                        </div>\r\n                        <div>\r\n                            <Link className=\"sidebar-link\" to=\"/projects/restaurant\">Lading Page</Link>\r\n                            <Link className=\"sidebar-link\" to=\"/projects/restaurant/catalog\">Catalog</Link>\r\n                            <Link className=\"sidebar-link\" to=\"/projects/restaurant/billing/sell\">Sell</Link>\r\n                        </div>\r\n                    </nav>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n", "import { Outlet } from \"@remix-run/react\";\r\nimport { SideBar } from \"~/components\";\r\nimport sidebarStyles from \"~/styles/sidebar.css\";\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: sidebarStyles, media: \"none\" }\r\n    ]\r\n}\r\n\r\nconst Restaurant = () => {\r\n    return (\r\n        <>\r\n            <SideBar />\r\n            <Outlet />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Restaurant;", "import { useEffect, useState } from \"react\";\r\nimport { json } from \"@remix-run/node\";\r\n// import { toast } from \"react-toastify\";\r\n// import toastStyle from 'react-toastify/dist/ReactToastify.min.css';\r\n// import { ToastContainer } from \"react-toastify\";\r\nimport {\r\n    // useSubmit, \r\n    useActionData, useLoaderData\r\n} from \"@remix-run/react\";\r\nimport { getForToday } from \"~/controllers/dishes\";\r\nimport transactionStyles from \"~/styles/transaction.css\";\r\nimport formStyles from \"~/styles/form.css\";\r\nimport { Card } from \"~/components\";\r\n// import TransacionModal from \"~/components/modals/TransacionModal\";\r\nimport { FaCartPlus, FaTrash } from \"react-icons/fa\";\r\nimport { increaseCount, decreaseCount } from \"~/controllers/billing\";\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Restaurant | Transactions\",\r\n        description:\r\n            \"Sell/Buy dishes online\",\r\n    };\r\n};\r\n\r\nexport const links = () => {\r\n    return [\r\n        { rel: 'stylesheet', href: transactionStyles, media: \"none\" },\r\n        { rel: 'stylesheet', href: formStyles, media: \"none\" },\r\n        // { rel: \"stylesheet\", href: toastStyle }\r\n    ]\r\n}\r\n\r\nexport const loader = async () => {\r\n    const dishes = await getForToday({});\r\n    return json(dishes)\r\n}\r\n\r\n// export const action = async ({ request }: any) => {\r\n//     if (request.method === 'POST') {\r\n//         // Set your secret key. Remember to switch to your live secret key in production.\r\n//         // See your keys here: https://dashboard.stripe.com/apikeys\r\n//         const stripe = require('stripe')(process.env.NEXT_PUBLIC_STRIPE_SECRET_KEY);\r\n//         const formData = await request.formData();\r\n//         // const session = await stripe.checkout.sessions.create({\r\n//         //     line_items: JSON.parse(formData.get('selectedDishes')),\r\n//         //     mode: 'payment',\r\n//         //     success_url: `https://wachimingo.vercel.app?success=true`,\r\n//         //     cancel_url: `https://wachimingo.vercel.app?canceled=true`,\r\n//         // });\r\n//         return json({ session })\r\n//     }\r\n// }\r\n\r\nexport function ErrorBoundary({ error }: any) {\r\n    console.error(error);\r\n    return (\r\n        <html>\r\n            <head>\r\n                <title>Oh no!</title>\r\n            </head>\r\n            <body>\r\n            </body>\r\n        </html>\r\n    );\r\n}\r\n\r\nconst Transaction = () => {\r\n    const dishes = useLoaderData();\r\n    const results = useActionData();\r\n    // const submit = useSubmit();\r\n    const [dishCounters, setDishCounters] = useState(() => dishes.map((dish: any) => 0));\r\n    const [selectedDishes, setSelectedDishes] = useState<any>([]);\r\n    const [totalDishes, setTotalDishes] = useState(0);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n    // const itemsProps = {\r\n    //     dishes,\r\n    //     dishCounters,\r\n    //     setDishCounters,\r\n    //     selectedDishes,\r\n    //     setSelectedDishes,\r\n    //     totalDishes,\r\n    //     setTotalDishes,\r\n    //     totalPrice,\r\n    //     setTotalPrice\r\n    // }\r\n\r\n    useEffect(() => {\r\n        if (results) {\r\n            window.open(results.session.url, '_blank');\r\n        }\r\n    }, [results]);\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                <h3>Billing</h3>\r\n            </main>\r\n            <section id=\"cardsSection\" className=\"items-container\">\r\n                {\r\n                    dishes.map((dish, i) => {\r\n                        return <Card key={dish.name}>\r\n                            <img\r\n                                src={`https://images.weserv.nl/?url=${dish.image}&w=150&h=150`}\r\n                                alt={dish.name}\r\n                            />\r\n                            <div className=\"content\">\r\n                                <h1>{dish.name}</h1>\r\n                                <p>{dish.description}</p>\r\n                                <p>${dish.price}</p>\r\n                                <h4>Amount: {dishCounters[i]}</h4>\r\n                            </div>\r\n                            <div className=\"control\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"increase-amount-button\"\r\n                                    onClick={() => increaseCount(\r\n                                        i,\r\n                                        JSON.parse(JSON.stringify(dish)),\r\n                                        dishCounters[i],\r\n                                        dishCounters,\r\n                                        setDishCounters,\r\n                                        totalDishes,\r\n                                        setTotalDishes,\r\n                                        selectedDishes,\r\n                                        setSelectedDishes,\r\n                                        totalPrice,\r\n                                        setTotalPrice\r\n                                    )}\r\n                                >\r\n                                    <FaCartPlus />\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"decrease-amount-button\"\r\n                                    onClick={() => decreaseCount(\r\n                                        i,\r\n                                        JSON.parse(JSON.stringify(dish)),\r\n                                        dishCounters[i],\r\n                                        dishCounters,\r\n                                        setDishCounters,\r\n                                        totalDishes,\r\n                                        setTotalDishes,\r\n                                        selectedDishes,\r\n                                        setSelectedDishes,\r\n                                        totalPrice,\r\n                                        setTotalPrice\r\n                                    )}\r\n                                >\r\n                                    <FaTrash />\r\n                                </button>\r\n                            </div>\r\n                        </Card>\r\n                    })\r\n                }\r\n            </section>\r\n            {/* <button\r\n                className=\"btn btn-info my-4 mx-2\"\r\n                onClick={() => {\r\n                    const formData = new FormData();\r\n                    let formattedList = selectedDishes.map((dish: any, i: number) => {\r\n                        // const index = items.indexOf(item); // as the counter state position of the items is based in the items array, we need to get the position in that variable, else the render won't find what to render\r\n                        const indexArray = dishes.map((OldItem: any, i: number) => {\r\n                            if (OldItem!.name === dish.name) {\r\n                                return i;\r\n                            } return undefined;\r\n                        })\r\n                        const index: any = indexArray.filter((x: any) => { return x !== undefined })\r\n                        return {\r\n                            price: dish.externalId,\r\n                            quantity: dishCounters[index]\r\n                        }\r\n                    })\r\n                    formData.append('selectedDishes', JSON.stringify(formattedList))\r\n                    submit(formData, { method: \"post\", action: \"/projects/restaurant/billing/sell\" })\r\n                }}\r\n            >\r\n                Checkout\r\n            </button>\r\n            <section>\r\n                <p>This is a test enviroment, you can test the payments using any of the test cards from the link below</p>\r\n                <a href=\"https://stripe.com/docs/testing#cards\">Stripe Test Cards</a>\r\n            </section> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Transaction;", "import { json } from \"@remix-run/node\";\r\nimport Dishes from '../models/dishes';\r\nimport dbConnect from '../utils/dbConnection';\r\nimport { requestErrorHandler } from './errors';\r\n\r\nexport const getForToday = async (props: any) => {\r\n    await dbConnect();\r\n    return await Dishes.find({ forToday: true }).limit(props.limit)\r\n}\r\n\r\nexport const getAllDishes = async (props: any) => {\r\n    await dbConnect();\r\n    const dishes = await Dishes.find()\r\n    return dishes;\r\n}\r\n\r\nexport const actions: any = {\r\n    \"GET\": async () => {\r\n        try {\r\n            await dbConnect();\r\n            return await Dishes.find().where('locale').equals('en');\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"POST\": async (data: any) => {\r\n        try {\r\n            await dbConnect();\r\n            // const price = await stripe.prices.create({\r\n            //     product: product.id,\r\n            //     unit_amount: body.price[0],\r\n            //     currency: 'usd',\r\n            // });\r\n            const newDish = new Dishes(data);\r\n            await newDish.save();\r\n            return json({ status: 'success', message: 'Posted succesfuly', newDish }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"PATCH\": async ({ dishId, type, ...props }) => {\r\n        try {\r\n            // if (props.price && type === 'update') {\r\n            //     await stripe.prices.update(\r\n            //         props.externalId,\r\n            //         { unit_amount: props.price }\r\n            //     );\r\n            // }\r\n            await dbConnect();\r\n            const res = await Dishes.findByIdAndUpdate({ _id: dishId }, props)\r\n            if (!res) throw 'No ID provided';\r\n            return json({ status: 'success', message: 'Updated succesfuly' }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"DELETE\": async ({ dishId }: any) => {\r\n        try {\r\n            await dbConnect();\r\n            const res = await Dishes.findByIdAndDelete({ _id: dishId })\r\n            if (!res) throw 'No ID provided';\r\n            return json({ status: 'success', message: 'Deleted succesfuly' }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n}\r\n", "\r\nconst mongoose = require('mongoose');\r\n\r\nconst dishSchema = new mongoose.Schema(\r\n  {\r\n    name: {\r\n      type: String,\r\n      required: [true, 'El platillo tiene que tener un nombre'],\r\n      unique: [true, 'El platillo ya existe'],\r\n    },\r\n    price: {\r\n      type: Number,\r\n      required: [true, 'El platillo tiene que tener un precio'],\r\n    },\r\n    ingredients: {},\r\n    ratingsAverage: {\r\n      type: Number,\r\n      default: 4.5,\r\n    },\r\n    ratingsQuantity: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    description: {\r\n      type: String,\r\n      trim: true,\r\n    },\r\n    image: {\r\n      type: String,\r\n      default: 'stockDishImg.png'\r\n    },\r\n    favoriteQuantity: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    createdAt: {\r\n      type: Date,\r\n      default: Date.now(),\r\n    },\r\n    forToday: {\r\n      type: Boolean,\r\n      default: true,\r\n      require: true,\r\n    },\r\n    category: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: 'Category'\r\n    },\r\n    externalId: {\r\n      type: String\r\n    }\r\n  },\r\n  {\r\n    toJSON: { virtuals: true },\r\n    toObject: { virtuals: true },\r\n  }\r\n);\r\n\r\n// Virtual populate\r\ndishSchema.virtual('reviews', {\r\n  ref: 'Review',\r\n  foreignField: 'dish',\r\n  localField: '_id',\r\n});\r\n\r\n// Virtual populate\r\ndishSchema.virtual('favoriteDish', {\r\n  ref: 'FavoriteDish',\r\n  foreignField: 'dish',\r\n  localField: '_id',\r\n});\r\n\r\nexport default mongoose.models.Dish || mongoose.model('Dish', dishSchema);\r\n\r\n", "import type { LoaderFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from '@remix-run/react'\r\nimport { OrderCard } from \"~/components\";\r\nimport { getOrders, actions } from \"~/controllers/orders\";\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Restaurant | Orders\",\r\n        description:\r\n            \"Check order status\",\r\n    };\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n    const orders = await getOrders({ status: params.status, limit: 5 });\r\n    return json({ orders, status: params.status })\r\n}\r\n\r\nexport async function action({ request }: any) {\r\n    let result = {};\r\n    const body = await request.formData();\r\n    //If there is a nested action inside a HTTP method, then the object will have a type property\r\n    if (body._fields.type[0]) {\r\n        const handler = actions[request.method][body._fields.type[0]]\r\n        if (!handler) return json({ status: \"error\", message: \"No method or action found\" })\r\n        //first propery or [] is the HTTP method (POST,PUT,DELETE), the second property or [] is for the nested action\r\n        result = await actions[request.method ?? 'default'][body._fields.type[0] ?? 'default']({ ...body._fields })\r\n    }\r\n    else {\r\n        const handler = actions[request.method]\r\n        if (!handler) return json({ status: \"error\", message: \"No method or action found\" })\r\n        //Properties for the object are HTTP methods (POST,PUT,DELETE)\r\n        result = await actions[request.method ?? 'default']({ ...body._fields })\r\n    }\r\n    return json(result);\r\n}\r\n\r\nconst Orders = () => {\r\n    const { orders, status } = useLoaderData();\r\n    return (\r\n        <div className=\"d-inline-block\">\r\n            <h2>Orders</h2>\r\n            <section id='StatusControls'>\r\n                <Link to={'/projects/restaurant/orders/isPending'} className='btn btn-outline-danger ms-2 mb-4'>\r\n                    Pending\r\n                </Link>\r\n                <Link to={'/projects/restaurant/orders/isReady'} className='btn btn-outline-success ms-2 mb-4'>\r\n                    Ready\r\n                </Link>\r\n                <Link to={'/projects/restaurant/orders/completed'} className='btn btn-outline-secondary ms-2 mb-4'>\r\n                    Completed\r\n                </Link>\r\n                <Link to={'/projects/restaurant/orders/cancelled'} className='btn btn-outline-secondary ms-2 mb-4'>\r\n                    Cancelled\r\n                </Link>\r\n            </section>\r\n            <section>\r\n                <OrderCard orders={orders} status={status} />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\nexport default Orders;", "import mongoose, { Types } from 'mongoose';\r\nimport User from './user';\r\n\r\nconst billingSchema = new mongoose.Schema(\r\n  {\r\n    //This billing Schema is the header for the bill, the details will be store in detail billing schema\r\n    //Logged user ['Admin', 'Helper']\r\n    user: {\r\n      type: Types.ObjectId,\r\n      ref: User,\r\n      required: [true, 'El recibo debe contener el ID del vendedor o comprador'],\r\n    },\r\n    createdAt: {\r\n      type: String,\r\n    },\r\n    customer: {\r\n      type: String,\r\n    },\r\n    totalDishes: {\r\n      type: Number,\r\n    },\r\n    totalPrice: {\r\n      type: Number,\r\n    },\r\n    isFiado: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    status: {\r\n      type: String,\r\n      default: 'Completed',\r\n    },\r\n    paymentIntent: {\r\n      type: String,\r\n    },\r\n    isPaid: { type: Boolean, default: false },\r\n    body: {\r\n      type: Object,\r\n    }\r\n  },\r\n  {\r\n    toJSON: { virtuals: true },\r\n    toObject: { virtuals: true },\r\n  }\r\n);\r\n\r\n// Virtual populate\r\nbillingSchema.virtual('dishes', {\r\n  ref: 'detailedBill',\r\n  foreignField: 'bill',\r\n  localField: '_id',\r\n});\r\n\r\nbillingSchema.pre(/^find/, function (next) {\r\n  this.populate({\r\n    path: 'user',\r\n    select: 'name tn',\r\n  });\r\n\r\n  next();\r\n});\r\n\r\nexport default mongoose.models.Bill || mongoose.model('Bill', billingSchema);\r\n", "import Bill from '../models/bill';\r\nimport dbConnect from '../utils/dbConnection';\r\n\r\n//For dataLoader\r\nexport const getOrders = async (props: any) => {\r\n    await dbConnect();\r\n    const orders = await Bill.find({ status: props.status }).limit(props.limit)\r\n    return orders;\r\n}\r\n\r\n//For actions loader\r\nexport const actions: any = {\r\n    \"PATCH\": {\r\n        \"status\": async (body: any) => {\r\n            await dbConnect();\r\n            const order = await Bill.findByIdAndUpdate({ _id: body.id[0] }, { status: body.status[0] })\r\n            return order;\r\n        },\r\n        \"default\": () => {\r\n            return 'Action not found'\r\n        }\r\n    },\r\n    \"default\": () => {\r\n        return 'Action not found'\r\n    }\r\n}", "import { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport toastStyle from 'react-toastify/dist/ReactToastify.min.css';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useActionData, useFetcher, useLoaderData } from \"@remix-run/react\";\r\nimport { Card, CatalogControls } from \"~/components\";\r\nimport { getAllDishes, actions } from \"~/controllers/dishes\";\r\nimport catalogStyles from \"~/styles/catalog.css\";\r\nimport formStyles from \"~/styles/form.css\";\r\nimport CatalogModal from \"~/components/modals/CatalogModal\";\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Restaurant | Catalog\",\r\n        description:\r\n            \"Dishes we offere\",\r\n    };\r\n};\r\n\r\nexport const links = () => {\r\n    return [\r\n        { rel: 'stylesheet', href: catalogStyles, media: \"none\" },\r\n        { rel: 'stylesheet', href: formStyles, media: \"none\" },\r\n        { rel: \"stylesheet\", href: toastStyle, media: \"none\" }\r\n    ]\r\n}\r\n\r\nexport const loader = async () => {\r\n    const dishes = await getAllDishes({});\r\n    return json(dishes)\r\n}\r\n\r\nexport const action = async ({ request }) => {\r\n    /* Taking the form data from the request and putting it into an object. */\r\n    const body = await request.formData();\r\n    const data: any = {};\r\n\r\n    for (const pair of body.entries()) {\r\n        data[pair[0]] = pair[1]\r\n    }\r\n\r\n    /* Checking if the request method is in the actions object. If it is, it will return the data. If\r\n    not, it will return an error. */\r\n    const handler = actions[request.method];\r\n    if (!handler) return json({ status: \"error\", message: \"No method or action found\" }, { status: 404 });\r\n    return await actions[request.method](data);\r\n    // return json({});\r\n}\r\n\r\nexport function ErrorBoundary({ error }: any) {\r\n    return (\r\n        <main>\r\n            <h1>{error.message}</h1>\r\n        </main>\r\n    );\r\n}\r\n\r\nconst Catalog = () => {\r\n    const dishes = useLoaderData();\r\n    const fetcher = useFetcher();\r\n    const results = useActionData();\r\n    const [dishToModify, setDishToModify] = useState<any>(undefined);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const { data } = fetcher;\r\n    useEffect(() => {\r\n        if (data) {\r\n            //@ts-ignore\r\n            toast[data.status](data.message)\r\n            setIsOpen(isOpen => !isOpen);\r\n        } else if (results) {\r\n            //@ts-ignore\r\n            toast[results.status](results.message);\r\n            setIsOpen(isOpen => !isOpen);\r\n        }\r\n    }, [data, results]);\r\n    return (\r\n        <>\r\n            <main>\r\n                <h1>Catalog</h1>\r\n            </main>\r\n            <section className=\"items-container\">\r\n                {\r\n                    dishes?.map((dish: any) => {\r\n                        return (\r\n                            <Card key={dish.name}>\r\n                                {CatalogControls(dish, fetcher, dishToModify, setDishToModify, isOpen, setIsOpen)}\r\n                                <img\r\n                                    src={`https://images.weserv.nl/?url=${dish.image}&w=150&h=150`}\r\n                                    alt={dish.name}\r\n                                    loading=\"lazy\"\r\n                                    width=\"auto\"\r\n                                    height=\"auto\"\r\n                                />\r\n                                <div>\r\n                                    <h1>{dish.name}</h1>\r\n                                    <p className=\"card-text\">{dish.description}</p>\r\n                                    <p className=\"card-text\">${dish.price}</p>\r\n                                </div>\r\n                            </Card>\r\n                        );\r\n                    })\r\n                }\r\n            </section>\r\n            <CatalogModal dishToModify={dishToModify} isModalOpen={isOpen} setIsModalOpen={setIsOpen} />\r\n            <ToastContainer />\r\n            <button\r\n                type='button'\r\n                className=\"bubble-btn\"\r\n                onClick={() => {\r\n                    setDishToModify(dishToModify => undefined)\r\n                    setIsOpen(isOpen => !isOpen)\r\n                }}\r\n            >\r\n                +\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Catalog;", "import { Form } from \"@remix-run/react\";\r\nimport { Modal } from \"~/components\";\r\n\r\nconst CatalogModal = (props: any) => {\r\n    return (\r\n        <Modal isOpen={props.isModalOpen} closeModal={props.setIsModalOpen} wrapperId='catalog-modal'>\r\n            <h1>{props.dishToModify ? 'Modify dish' : 'Add dish'}</h1>\r\n            <Form method={props.dishToModify ? 'patch' : 'post'} action=\"/projects/restaurant/catalog\" className=\"gray\">\r\n                <section>\r\n                    <div>\r\n                        <label htmlFor=\"dishName\" className=\"form-label\">Dish Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"name\"\r\n                            id=\"dishName\"\r\n                            aria-describedby=\"dishName\"\r\n                            //@ts-ignore\r\n                            defaultValue={props.dishToModify ? props.dishToModify.name : undefined}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"dishDescrption\" className=\"form-label\">Description</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"description\"\r\n                            id=\"dishDescrption\"\r\n                            //@ts-ignore\r\n                            defaultValue={props.dishToModify ? props.dishToModify.description : undefined}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"dishPrice\" className=\"form-label\">Price</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            name=\"price\"\r\n                            id=\"dishPrice\"\r\n                            step=\".01\"\r\n                            pattern=\"^\\d*(\\.\\d{0,2})?$\"\r\n                            //@ts-ignore\r\n                            defaultValue={props.dishToModify ? props.dishToModify.price : undefined}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"dishImage\" className=\"form-label\">Image</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"dishImage\"\r\n                            name=\"image\"\r\n                            aria-describedby=\"imageHelp\"\r\n                            //@ts-ignore\r\n                            defaultValue={props.dishToModify ? props.dishToModify.image : undefined}\r\n                        />\r\n                        <div id=\"imageHelp\" className=\"form-text\">Please search for images online</div>\r\n                    </div>\r\n                    {\r\n                        props.dishToModify\r\n                            ?\r\n                            <>\r\n                                <input type=\"text\" name=\"dishId\" value={props.dishToModify?.id} style={{ display: \"none\" }} />\r\n                                <input type=\"text\" name=\"type\" value='update' style={{ display: \"none\" }} />\r\n                            </>\r\n                            :\r\n                            undefined\r\n                    }\r\n                </section>\r\n                <div className=\"form-controls\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"form-cancel-button\"\r\n                        // data-bs-dismiss=\"modal\" \r\n                        // aria-label=\"Close\"\r\n                        onClick={() => props.setIsModalOpen(false)}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <input type=\"submit\" />\r\n                </div>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CatalogModal;", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { Carousel } from \"~/components\";\r\nimport caruselStyle from \"~/styles/carousel.css\"\r\nimport restaurantStyle from \"~/styles/restaurant.css\"\r\nimport { getForToday } from \"~/controllers/dishes\";\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Restaurant\",\r\n        description:\r\n            \"Welcome to the restaurant app\",\r\n    };\r\n};\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: caruselStyle, media: \"none\" },\r\n        { rel: \"stylesheet\", href: restaurantStyle, media: \"none\" },\r\n    ]\r\n}\r\n\r\nexport const loader = async () => {\r\n    const dishes = await getForToday({})\r\n    return json(dishes)\r\n}\r\n\r\nconst Restaurant = () => {\r\n    const dishes = useLoaderData();\r\n    return (\r\n        <div className=\"restaurant-landing-page\">\r\n            <main>\r\n                <h1>Restaurant</h1>\r\n                <img src='/assets/restaurant/restaurant.webp' alt=\"logo\" />\r\n                <h2>Enjoy!</h2>\r\n                <br />\r\n                <h2>Today's Menu</h2>\r\n                <br />\r\n                <Carousel items={dishes ?? []} />\r\n            </main>\r\n            <section className=\"offering-section\">\r\n                <div>\r\n                    <h4>Breakfast</h4>\r\n                    <img\r\n                        src='https://images.weserv.nl/?url=https://bigoven-res.cloudinary.com/image/upload/h_320,w_320,c_fill/english-breakfast.jpg&w=300&h=300'\r\n                        alt=\"breakfast\"\r\n                        loading=\"lazy\"\r\n                        width=\"auto\"\r\n                        height=\"auto\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>Lunch</h4>\r\n                    <img\r\n                        src='https://images.weserv.nl/?url=https://images.freshop.com/2022776539896086690/aeb9b0d3526652a7479aef0a91fa91ae_large.png&type=webp&w=300&h=300'\r\n                        alt=\"breakfast\"\r\n                        loading=\"lazy\"\r\n                        width=\"auto\"\r\n                        height=\"auto\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>Dinner</h4>\r\n                    <img\r\n                        src='https://images.weserv.nl/?url=https://bigoven-res.cloudinary.com/image/upload/h_320,w_320,c_fill/cheesy-hash-brown-skillet-dinner.jpg&w=300&h=300'\r\n                        alt=\"breakfast\"\r\n                        loading=\"lazy\"\r\n                        width=\"auto\"\r\n                        height=\"auto\"\r\n                    />\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Restaurant;", "import { json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport { Card } from \"~/components\";\r\nimport { getProjects } from \"~/controllers/projects\";\r\nimport projectsStyle from '~/styles/projects.css';\r\nimport buttonsStyle from '~/styles/buttons.css';\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Projects\",\r\n        description: \"Catalog of projects\", \"og:title\": \"Projects\",\r\n    };\r\n};\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: projectsStyle, media: \"none\" },\r\n        { rel: \"stylesheet\", href: buttonsStyle, media: \"none\" },\r\n    ]\r\n}\r\n\r\nexport const loader = async () => {\r\n    const projects = await getProjects({ locale: 'en' })\r\n    return json(projects)\r\n}\r\n\r\nconst Projects = () => {\r\n    const projects = useLoaderData();\r\n    return (\r\n        <>\r\n            <main>\r\n                <h1>Projects</h1>\r\n            </main>\r\n            <section className=\"items-container\">\r\n                {\r\n                    projects.map((project: any, i: number) => {\r\n                        return (\r\n                            <Card key={project.name}>\r\n                                <img\r\n                                    src={project.image}\r\n                                    alt={project.name}\r\n                                    width=\"auto\"\r\n                                    height=\"auto\"\r\n                                />\r\n                                <div>\r\n                                    <h1>{project.name}</h1>\r\n                                    <p>{project.description}</p>\r\n                                </div>\r\n                                {\r\n                                    project.link.includes('http' || 'https') ?\r\n                                        <a href={project.link} className=\"button success\" target=\"_blank\" rel='noreferrer' role=\"button\">Checkout</a>\r\n                                        :\r\n                                        <Link to={project.link} className=\"button success\">Checkout</Link>\r\n                                }\r\n                            </Card>\r\n                        )\r\n                    })\r\n                }\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects;", "import { json } from \"@remix-run/node\";\r\nimport Projects from '~/models/projects';\r\nimport dbConnect from '~/utils/dbConnection';\r\nimport { requestErrorHandler } from './errors';\r\n\r\nexport const getProjects = async (props: any) => {\r\n    await dbConnect();\r\n    const projects = await Projects.find({}).where('locale').equals(props.locale).limit(props.limit)\r\n    return projects;\r\n}\r\n\r\nexport const actions: any = {\r\n    \"GET\": async () => {\r\n        try {\r\n            await dbConnect();\r\n            return await Projects.find().where('locale').equals('en');\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"POST\": async (body: any) => {\r\n        try {\r\n            await dbConnect();\r\n            const newProject = new Projects({\r\n                name: body.name[0],\r\n                description: body.description[0],\r\n                category: body.category[0],\r\n                status: body.status[0],\r\n                link: body.link[0],\r\n                locale: body.locale[0],\r\n                image: body.image[0],\r\n            });\r\n            await newProject.save();\r\n            return json({ status: 'success', message: 'Posted succesfuly', newProject }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n}", "import mongoose from 'mongoose';\r\n\r\nconst projectSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: true,\r\n        maxlength: 50\r\n    },\r\n    description: {\r\n        type: String\r\n    },\r\n    image: {\r\n        type: String\r\n    },\r\n    category: {\r\n        type: String\r\n    },\r\n    status: {\r\n        type: String,\r\n    },\r\n    link: {\r\n        type: String\r\n    },\r\n    locale: {\r\n        type: String,\r\n        enum: ['en', 'es'],\r\n        required: true\r\n    }\r\n});\r\n\r\nexport default mongoose.models.Project || mongoose.model('Project', projectSchema);", "import { json } from '@remix-run/node';\r\nimport { useLoaderData } from '@remix-run/react';\r\nimport { actions, getSkills } from '~/controllers/skills';\r\nimport Card from '~/components/skills/card';\r\nimport Modal from '~/components/skills/modal';\r\nimport { getCategories } from '~/controllers/categories';\r\nimport type { Category, Skill } from '~/types/skillsAndCerts';\r\nimport rootStyles from '~/styles/root.css';\r\nimport formStyles from '~/styles/form.css';\r\nimport cardStyles from '~/styles/card.css'\r\n\r\nexport const links = () => {\r\n    return [\r\n        { rel: \"stylesheet\", href: rootStyles, media: \"none\" },\r\n        { rel: \"stylesheet\", href: cardStyles, media: \"none\" },\r\n        { rel: \"stylesheet\", href: formStyles, media: \"none\" },\r\n    ]\r\n}\r\n\r\nconst getCookie = (cname: string, cookie: string) => {\r\n    let name = cname + \"=\";\r\n    let decodedCookie = decodeURIComponent(cookie);\r\n    let ca = decodedCookie.split(';');\r\n    for (let i = 0; i < ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const loader = async ({ request }) => {\r\n    const name = getCookie(\"name\", request.headers.get(\"cookie\"));\r\n    const token = getCookie(\"token\", request.headers.get(\"cookie\"));\r\n\r\n    if (name === 'Joshua Herrera' && token) {\r\n        const skills = await getSkills({\r\n            locale: 'en'\r\n        });\r\n        const categories = await getCategories({\r\n            locale: \"en\",\r\n            relatedTo: 'skills',\r\n        });\r\n        return json({ skills, categories })\r\n    }\r\n    throw new Error('No authorize user');\r\n}\r\n\r\nexport const action = async ({ request }) => {\r\n    const url = new URL(request.url);\r\n\r\n    const method: string = url.searchParams.get(\"method\")?.toUpperCase() ?? 'none';\r\n\r\n    if (!actions[method]) return json({});\r\n    let formData: any;\r\n    let data: any = {\r\n        _id: url.searchParams.get(\"_id\"),\r\n        locale: 'en'\r\n    };\r\n\r\n    try {\r\n        formData = await request?.formData();\r\n        for (const pair of formData.entries()) {\r\n            data[pair[0]] = pair[1]\r\n        }\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n    return await actions[method](data);\r\n}\r\n\r\nexport function ErrorBoundary({ error }) {\r\n    return (\r\n        <main>\r\n            <h1>{error.message}</h1>\r\n        </main>\r\n    );\r\n}\r\n\r\ntype Loader = {\r\n    skills: Skill[],\r\n    categories: Category[],\r\n}\r\n\r\nconst Skills = () => {\r\n    const { skills, categories } = useLoaderData<Loader>();\r\n\r\n    return <>\r\n        <main>\r\n            <h1>Manage skills</h1>\r\n        </main>\r\n        <section className='items-container2'>\r\n            <Card skills={skills} admin />\r\n            <button id='addNewSkillBtn' type='button' className=\"bubble-btn\">+</button>\r\n        </section>\r\n        <Modal categories={categories} />\r\n        <script defer={true} src='/scripts/min/skills-min.js' />\r\n    </>\r\n}\r\n\r\nexport default Skills;", "import { json } from '@remix-run/node';\r\nimport Skills from '../models/skills';\r\nimport dbConnect from '../utils/dbConnection';\r\nimport { requestErrorHandler } from './errors';\r\n\r\nexport const getSkills = async (props: any) => {\r\n    await dbConnect();\r\n    const skills = await Skills.find({}).where('locale').equals(props.locale).limit(props.limit)\r\n    return skills;\r\n}\r\n\r\nexport const actions: any = {\r\n    \"POST\": async (data) => {\r\n        try {\r\n            data._id = undefined;\r\n            await dbConnect();\r\n            const newSkill = await Skills.create(data);\r\n            return json({ status: 'success', message: 'Posted succesfully', skill: newSkill }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"PATCH\": async ({ _id, ...props }) => {\r\n        try {\r\n            await dbConnect();\r\n            const updatedSkill = await Skills.findByIdAndUpdate(_id, props);\r\n            if (!updatedSkill) throw new Error('Not found');\r\n            return json({ status: 'success', message: 'Posted succesfully', skill: updatedSkill }, { status: 201 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    },\r\n    \"DELETE\": async ({ _id }) => {\r\n        try {\r\n            await dbConnect();\r\n            await Skills.findByIdAndDelete(_id)\r\n            return json({ message: 'success' }, { status: 204 });\r\n        } catch (error) {\r\n            requestErrorHandler(error);\r\n        }\r\n    }\r\n}", "const mongoose = require('mongoose');\r\n\r\nconst categoriesSchema = mongoose.Schema(\r\n    {\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        relatedTo: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        locale: {\r\n            type: String,\r\n            enum: ['en', 'es'],\r\n            required: true\r\n        }\r\n    },\r\n    {\r\n        toJSON: { virtuals: true },\r\n        toObject: { virtuals: true },\r\n    }\r\n);\r\n\r\nexport default mongoose.models.Categories || mongoose.model(\"Categories\", categoriesSchema);", "import categoriesModel from \"./categories\";\r\nconst mongoose = require('mongoose');\r\n\r\nconst skillsSchema = mongoose.Schema(\r\n    {\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        description: {\r\n            type: String,\r\n        },\r\n        level: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        icon: {\r\n            type: String\r\n        },\r\n        locale: {\r\n            type: String,\r\n            enum: ['en', 'es']\r\n        },\r\n        category: {\r\n            type: mongoose.Schema.Types.ObjectId,\r\n            ref: categoriesModel,\r\n            required: true\r\n        }\r\n    },\r\n    {\r\n        toJSON: { virtuals: true },\r\n        toObject: { virtuals: true },\r\n    }\r\n);\r\n\r\nexport default mongoose.models.Skills || mongoose.model(\"Skills\", skillsSchema);\r\n", "/* eslint-disable react/display-name */\r\nimport { Card } from \"../common/Card\";\r\nimport { FaCog, FaTrash } from \"react-icons/fa\";\r\nimport type { Skill } from \"~/types/skillsAndCerts\";\r\n\r\ntype Props = {\r\n    skills: Skill[],\r\n    admin?: Boolean\r\n}\r\n\r\nexport default ({ skills, admin }: Props) => {\r\n    const controls = (skill: Skill) => {\r\n        if (!admin) return undefined;\r\n        return (\r\n            <>\r\n                <FaCog\r\n                    id={`${skill.name}_modify_btn`}\r\n                    className='card-modify-btn'\r\n                    data-skill-id={skill._id}\r\n                    data-skill-name={skill.name}\r\n                    data-skill-description={skill.description}\r\n                    data-skill-category={skill.category}\r\n                    data-skill-level={skill.level}\r\n                    data-skill-icon={skill.icon}\r\n                >\r\n                    Modify\r\n                </FaCog>\r\n                <FaTrash\r\n                    id={`${skill.name}_remove_btn`}\r\n                    className='card-remove-btn'\r\n                    data-skill-id={skill._id}\r\n                >\r\n                    Remove\r\n                </FaTrash>\r\n            </>\r\n        )\r\n    }\r\n    return <>\r\n        {\r\n            skills.map((skill: Skill, i: number) => {\r\n                return (\r\n                    <Card key={i} index={i}>\r\n                        <img\r\n                            loading=\"lazy\"\r\n                            src={skill.icon ? skill.icon : '/assets/skills/default.webp'}\r\n                            alt={skill.name}\r\n                            width=\"auto\"\r\n                            height=\"auto\"\r\n                        />\r\n                        <div>\r\n                            <h1>{skill.name}</h1>\r\n                            <p>\r\n                                {skill.description}\r\n                            </p>\r\n                            <progress value={skill.level} max=\"100\"> {skill.level}%</progress>\r\n                        </div>\r\n                        {controls(skill)}\r\n                    </Card>\r\n                )\r\n            })\r\n        }\r\n    </>\r\n}", "import Categories from '../models/categories';\r\nimport dbConnect from '../utils/dbConnection';\r\n\r\nexport const getCategories = async (props: any) => {\r\n    await dbConnect();\r\n    const categories = await Categories.find().where('locale').equals(props.locale).where('relatedTo').equals(props.relatedTo).limit(props.limit)\r\n    return categories;\r\n}", "// import { toast } from \"react-toastify\";\r\n// import toastStyle from 'react-toastify/dist/ReactToastify.min.css';\r\n// import { ToastContainer } from \"react-toastify\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useActionData, useLoaderData } from '@remix-run/react';\r\nimport { authForm } from \"~/components/common/authComponents\";\r\nimport { actions } from \"~/controllers/auth\";\r\nimport authStyles from \"~/styles/auth.css\";\r\nimport formStyles from \"~/styles/form.css\";\r\n\r\n// export const handle = { hydrate: true };\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Wachimingo | Auth\",\r\n        description:\r\n            \"User authentication to use this site features\",\r\n    };\r\n};\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: authStyles, media: \"none\" },\r\n        { rel: \"stylesheet\", href: formStyles, media: \"none\" },\r\n        // { rel: \"stylesheet\", href: toastStyle }\r\n    ]\r\n}\r\n\r\nexport const loader = async ({ params }: any) => {\r\n    return json(params)\r\n}\r\n\r\n\r\nexport const action = async ({ request, params }) => {\r\n    /* Taking the form data from the request and putting it into an object. */\r\n    const body = await request.formData();\r\n    const data: any = { params };\r\n\r\n    for (const pair of body.entries()) {\r\n        data[pair[0]] = pair[1]\r\n    }\r\n\r\n    const handler = actions[request.method];\r\n    if (!handler) return json({ status: \"error\", message: \"No method or action found\" }, { status: 404 });\r\n    //Properties for the object are HTTP methods (POST,PUT,DELETE)\r\n    return await actions[request.method](data);\r\n    // return json({})\r\n}\r\n\r\nconst Auth = () => {\r\n    const data = useLoaderData();\r\n    const result = useActionData();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"items-container\">\r\n                {authForm(data.action)}\r\n            </div>\r\n            {process.env.NODE_ENV === 'development'\r\n                ? <script\r\n                    defer={true}\r\n                    //@ts-ignore\r\n                    action={data?.action}\r\n                    status={result?.status}\r\n                    user={JSON.stringify(result?.user)}\r\n                    token={result?.token}\r\n                    src='/scripts/auth.js'\r\n                />\r\n                : <script\r\n                    defer={true}\r\n                    //@ts-ignore\r\n                    action={data?.action}\r\n                    status={result?.status}\r\n                    src='/scripts/min/auth-min.js'\r\n                />\r\n            }\r\n            {/* <ToastContainer /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { getSkills } from '~/controllers/skills';\r\nimport Card from \"~/components/skills/card\";\r\nimport type { Skill } from \"~/types/skillsAndCerts\";\r\nimport rootStyles from '~/styles/root.css';\r\nimport cardStyle from '~/styles/card.css';\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Skills\",\r\n        description:\r\n            \"Skillset\",\r\n    };\r\n};\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: rootStyles, media: \"none\" },\r\n        { rel: \"stylesheet\", href: cardStyle, media: \"none\" },\r\n    ]\r\n}\r\n\r\nexport const loader = async () => {\r\n    const [skills] = await Promise.all([\r\n        getSkills({\r\n            locale: \"en\"\r\n        }),\r\n    ])\r\n    return json(skills);\r\n};\r\n\r\nexport default function Index() {\r\n    const skills = useLoaderData<Skill[]>();\r\n    return (\r\n        <>\r\n            <main>\r\n                <div>\r\n                    <h1>Skillset</h1>\r\n                    <p>This is a evergrowing collection of current skillsets I handle.</p>\r\n                </div>\r\n                <div className=\"items-container2\">\r\n                    <Card skills={skills} />\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport rootStyles from '~/styles/root.css'\r\nimport cardStyle from '~/styles/card.css';\r\nimport { getCerts } from \"~/controllers/certs\";\r\nimport { CertCardList } from \"~/components/certs\";\r\n\r\nexport const meta = () => {\r\n    return {\r\n        title: \"Certifications\",\r\n        description:\r\n            \"Learning path\",\r\n    };\r\n};\r\n\r\nexport function links() {\r\n    return [\r\n        { rel: \"stylesheet\", href: rootStyles, media: \"none\" },\r\n        { rel: \"stylesheet\", href: cardStyle, media: \"none\" },\r\n    ]\r\n}\r\n\r\nexport const loader = async () => {\r\n    const [skills] = await Promise.all([\r\n        getCerts({\r\n            locale: \"en\"\r\n        }),\r\n    ])\r\n    return json(skills);\r\n};\r\n\r\nexport default function Index() {\r\n    const certs = useLoaderData<any>();\r\n    return (\r\n        <>\r\n            <main>\r\n                <div>\r\n                    <h1>Certifications</h1>\r\n                    <p>Keeping up with the ever changing technologies and knowledge.</p>\r\n                </div>\r\n                <div className=\"items-container2\">\r\n                    <CertCardList certs={certs} />\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n", "const mongoose = require('mongoose');\r\n\r\nconst certificationsSchema = mongoose.Schema(\r\n    {\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        description: {\r\n            type: String,\r\n        },\r\n        link: {\r\n            type: String,\r\n        },\r\n        icon: {\r\n            type: String\r\n        },\r\n        locale: {\r\n            type: String,\r\n            enum: ['en', 'es']\r\n        },\r\n    }\r\n);\r\n\r\nexport default mongoose.models.Certifications || mongoose.model(\"Certifications\", certificationsSchema);\r\n", "import Certifications from '../models/certifications';\r\nimport dbConnect from '../utils/dbConnection';\r\n\r\nexport const getCerts = async (props: any) => {\r\n    await dbConnect();\r\n    const certs = await Certifications.find({}).where('locale').equals(props.locale).limit(props.limit)\r\n    return certs;\r\n}", "import { Card } from \"~/components\";\r\nimport type { Certification } from \"~/types/skillsAndCerts\"\r\n\r\nexport const CertCardList = ({ certs }) => {\r\n    return <>\r\n        {\r\n            certs.map((cert: Certification, i: number) => {\r\n                return (\r\n                    <Card key={i} index={i}>\r\n                        <img\r\n                            loading=\"lazy\"\r\n                            src={cert.icon ? cert.icon : './assets/skills/default.webp'}\r\n                            alt={cert.name}\r\n                        />\r\n                        <h3>{cert.name}</h3>\r\n                        <br />\r\n                    </Card>\r\n                )\r\n            })\r\n        }\r\n    </>\r\n}", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { getSkills } from '~/controllers/skills';\r\nimport { getCategories } from '~/controllers/categories';\r\nimport { getCerts } from \"~/controllers/certs\";\r\nimport { CertCardList } from \"~/components/certs\";\r\nimport { SeeMoreLinks } from \"~/components/landingPage\";\r\nimport { SkillListByCategory } from \"~/components/skills/list\";\r\nimport type { Category, Certification, Skill } from \"~/types/skillsAndCerts\";\r\nimport rootStyles from '~/styles/root.css';\r\nimport cardStyle from '~/styles/card.css';\r\n\r\nexport const meta = () => {\r\n  return {\r\n    title: \"Welcome\",\r\n    description:\r\n      \"Welcome to my portfolio\",\r\n  };\r\n};\r\n\r\nexport function links() {\r\n  return [\r\n    { rel: \"stylesheet\", href: rootStyles, media: \"none\" },\r\n    { rel: \"stylesheet\", href: cardStyle, media: \"none\" },\r\n  ]\r\n}\r\n\r\nexport const loader = async () => {\r\n  const [categories, skills, certs] = await Promise.all([\r\n    getCategories({\r\n      locale: \"en\",\r\n      relatedTo: 'skills',\r\n      limit: 2\r\n    }),\r\n    getSkills({\r\n      locale: \"en\"\r\n    }),\r\n    getCerts({\r\n      locale: \"en\",\r\n      limit: 3\r\n    })\r\n  ])\r\n  return json({ categories, skills, certs });\r\n};\r\n\r\nexport function ErrorBoundary({ error }) {\r\n  return (\r\n    <main>\r\n      <h1>{error.message}</h1>\r\n    </main>\r\n  );\r\n}\r\n\r\ntype Loader = {\r\n  categories: Category[],\r\n  skills: Skill[],\r\n  certs: Certification[]\r\n}\r\n\r\nexport default function Index() {\r\n  const { categories, skills, certs } = useLoaderData<Loader>();\r\n  return (\r\n    <main>\r\n      <div className='welcome curve'>\r\n        <h1>Wachimingo</h1>\r\n        <img\r\n          className=\"profile-pic\"\r\n          src=\"./assets/profile/profile-pic.webp\"\r\n          alt=\"profile\"\r\n          loading=\"lazy\"\r\n        />\r\n      </div>\r\n      <div className=\"items-container\">\r\n        <SkillListByCategory categories={categories} skills={skills} />\r\n        <SeeMoreLinks link='/skills' />\r\n\r\n        <section>\r\n          <div className=\"semicircle\">\r\n            <h2>Certifications</h2>\r\n          </div>\r\n          <CertCardList certs={certs} />\r\n          <SeeMoreLinks link='/certs' />\r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n", "import { Link } from \"@remix-run/react\"\r\nimport { FaArrowDown } from \"react-icons/fa\"\r\n\r\nexport const SeeMoreLinks = ({ link }: { link: string }) => {\r\n    return <div className=''>\r\n        <div className=''>\r\n            <FaArrowDown />\r\n        </div>\r\n        <Link to={link} style={{}}>\r\n            See More\r\n        </Link>\r\n    </div>\r\n}", "import Card from \"./card\";\r\nimport type { Category, Skill } from \"~/types/skillsAndCerts\"\r\n\r\nexport const SkillListByCategory = ({ skills, categories }) => {\r\n    return <>\r\n        {\r\n            categories.map((cat: Category) => {\r\n                if (cat.relatedTo === 'skills') {\r\n                    return (\r\n                        <section key={cat.name}>\r\n                            <h2 className=\"\">{cat.name}</h2>\r\n                            <Card skills={skills.filter((skill: Skill) => skill.category === cat._id)} />\r\n                        </section>\r\n                    )\r\n                } else return undefined\r\n            })\r\n        }\r\n    </>\r\n}", "export default {'version':'70d7aa04','entry':{'module':'/build/entry.client-E3XTEX2L.js','imports':['/build/_shared/chunk-UYMSMPDZ.js','/build/_shared/chunk-FUMHU34X.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-2Z2L36RH.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index':{'id':'routes/__index','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index-4GYOSNHD.js','imports':['/build/_shared/chunk-TQ6SZRY2.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/admin/Skills':{'id':'routes/__index/admin/Skills','parentId':'routes/__index','path':'admin/Skills','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/admin/Skills-XD7GF7NQ.js','imports':['/build/_shared/chunk-2ERCFGBX.js','/build/_shared/chunk-PGL43BPK.js','/build/_shared/chunk-4GSZTETZ.js','/build/_shared/chunk-6ULSZI6C.js','/build/_shared/chunk-HXW4EGTB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__index/auth/$action':{'id':'routes/__index/auth/$action','parentId':'routes/__index','path':'auth/:action','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/auth/$action-XGHTV5B5.js','imports':['/build/_shared/chunk-64WFTASU.js','/build/_shared/chunk-6ULSZI6C.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/certs':{'id':'routes/__index/certs','parentId':'routes/__index','path':'certs','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/certs-DYNVHISQ.js','imports':['/build/_shared/chunk-PDTSLY33.js','/build/_shared/chunk-PGL43BPK.js','/build/_shared/chunk-HXW4EGTB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/index':{'id':'routes/__index/index','parentId':'routes/__index','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__index/index-3XJICEA6.js','imports':['/build/_shared/chunk-2ERCFGBX.js','/build/_shared/chunk-PDTSLY33.js','/build/_shared/chunk-PGL43BPK.js','/build/_shared/chunk-HXW4EGTB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__index/projects/index':{'id':'routes/__index/projects/index','parentId':'routes/__index','path':'projects','index':true,'caseSensitive':undefined,'module':'/build/routes/__index/projects/index-VHNIESLZ.js','imports':['/build/_shared/chunk-HXW4EGTB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/projects/restaurant':{'id':'routes/__index/projects/restaurant','parentId':'routes/__index','path':'projects/restaurant','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/projects/restaurant-SGE5KIBT.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/projects/restaurant/billing/$transaction':{'id':'routes/__index/projects/restaurant/billing/$transaction','parentId':'routes/__index/projects/restaurant','path':'billing/:transaction','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/projects/restaurant/billing/$transaction-ISAJW6YD.js','imports':['/build/_shared/chunk-6ULSZI6C.js','/build/_shared/chunk-HXW4EGTB.js','/build/_shared/chunk-TQ6SZRY2.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__index/projects/restaurant/catalog':{'id':'routes/__index/projects/restaurant/catalog','parentId':'routes/__index/projects/restaurant','path':'catalog','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/projects/restaurant/catalog-ZIPMYMNS.js','imports':['/build/_shared/chunk-4GSZTETZ.js','/build/_shared/chunk-6ULSZI6C.js','/build/_shared/chunk-HXW4EGTB.js','/build/_shared/chunk-TQ6SZRY2.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__index/projects/restaurant/index':{'id':'routes/__index/projects/restaurant/index','parentId':'routes/__index/projects/restaurant','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__index/projects/restaurant/index-7VOVP3JV.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/projects/restaurant/orders/$status':{'id':'routes/__index/projects/restaurant/orders/$status','parentId':'routes/__index/projects/restaurant','path':'orders/:status','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/projects/restaurant/orders/$status-QDVVFKY3.js','imports':['/build/_shared/chunk-HXW4EGTB.js','/build/_shared/chunk-TQ6SZRY2.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__index/skills':{'id':'routes/__index/skills','parentId':'routes/__index','path':'skills','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__index/skills-DM74OWN7.js','imports':['/build/_shared/chunk-2ERCFGBX.js','/build/_shared/chunk-PGL43BPK.js','/build/_shared/chunk-HXW4EGTB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/user/$email':{'id':'routes/api/user/$email','parentId':'root','path':'api/user/:email','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/user/$email-XQ3TMQCX.js','imports':['/build/_shared/chunk-64WFTASU.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true}},'url':'/build/manifest-70D7AA04.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\api\\\\user\\\\$email.tsx\";\nimport * as route2 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index.tsx\";\nimport * as route3 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\projects\\\\restaurant.tsx\";\nimport * as route4 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\projects\\\\restaurant\\\\billing\\\\$transaction.tsx\";\nimport * as route5 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\projects\\\\restaurant\\\\orders\\\\$status.tsx\";\nimport * as route6 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\projects\\\\restaurant\\\\catalog.tsx\";\nimport * as route7 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\projects\\\\restaurant\\\\index.tsx\";\nimport * as route8 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\projects\\\\index.tsx\";\nimport * as route9 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\admin\\\\Skills.tsx\";\nimport * as route10 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\auth\\\\$action.tsx\";\nimport * as route11 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\skills.tsx\";\nimport * as route12 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\certs.tsx\";\nimport * as route13 from \"C:\\\\Users\\\\joshua.herrera1\\\\Documents\\\\portfolio-remix\\\\app\\\\routes\\\\__index\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/api/user/$email\": {\n      id: \"routes/api/user/$email\",\n      parentId: \"root\",\n      path: \"api/user/:email\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/__index\": {\n      id: \"routes/__index\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/__index/projects/restaurant\": {\n      id: \"routes/__index/projects/restaurant\",\n      parentId: \"routes/__index\",\n      path: \"projects/restaurant\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/__index/projects/restaurant/billing/$transaction\": {\n      id: \"routes/__index/projects/restaurant/billing/$transaction\",\n      parentId: \"routes/__index/projects/restaurant\",\n      path: \"billing/:transaction\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/__index/projects/restaurant/orders/$status\": {\n      id: \"routes/__index/projects/restaurant/orders/$status\",\n      parentId: \"routes/__index/projects/restaurant\",\n      path: \"orders/:status\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/__index/projects/restaurant/catalog\": {\n      id: \"routes/__index/projects/restaurant/catalog\",\n      parentId: \"routes/__index/projects/restaurant\",\n      path: \"catalog\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/__index/projects/restaurant/index\": {\n      id: \"routes/__index/projects/restaurant/index\",\n      parentId: \"routes/__index/projects/restaurant\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/__index/projects/index\": {\n      id: \"routes/__index/projects/index\",\n      parentId: \"routes/__index\",\n      path: \"projects\",\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/__index/admin/Skills\": {\n      id: \"routes/__index/admin/Skills\",\n      parentId: \"routes/__index\",\n      path: \"admin/Skills\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/__index/auth/$action\": {\n      id: \"routes/__index/auth/$action\",\n      parentId: \"routes/__index\",\n      path: \"auth/:action\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/__index/skills\": {\n      id: \"routes/__index/skills\",\n      parentId: \"routes/__index\",\n      path: \"skills\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/__index/certs\": {\n      id: \"routes/__index/certs\",\n      parentId: \"routes/__index\",\n      path: \"certs\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/__index/index\": {\n      id: \"routes/__index/index\",\n      parentId: \"routes/__index\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    }\n  };"],
  "mappings": "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",
  "names": []
}
